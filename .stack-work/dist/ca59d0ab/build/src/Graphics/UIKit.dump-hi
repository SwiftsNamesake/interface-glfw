
==================== FINAL INTERFACE ====================
2017-10-08 23:02:57.1254148 UTC

interface interface-glfw-0.1.0.0-BLykekl02VdLVEqRoTHVes:Graphics.UIKit 8002
  interface hash: 265218797189ee6f5d13f60cc1986609
  ABI hash: 4a94ffcc1d12dbba56e04baf88063237
  export-list hash: d08e1581523302e8a7222ac893587b77
  orphan hash: 0754ef76d1d1c0e9b46662c253667026
  flag hash: bb649f67160f5adebfe858c1a73cfed6
  sig of: Nothing
  used TH splices: False
  where
exports:
  Graphics.UIKit.bufferOffset
  Graphics.UIKit.buttons
  Graphics.UIKit.checked
  Graphics.UIKit.compileAndCheck
  Graphics.UIKit.crashOnError
  Graphics.UIKit.cursor
  Graphics.UIKit.drawing
  Graphics.UIKit.explain
  Graphics.UIKit.frameBounds
  Graphics.UIKit.frameSize
  Graphics.UIKit.getSource
  Graphics.UIKit.initial
  Graphics.UIKit.insist
  Graphics.UIKit.iterateUntilM
  Graphics.UIKit.iterateWhileM
  Graphics.UIKit.keyboard
  Graphics.UIKit.linkAndCheck
  Graphics.UIKit.loadCompileAttach
  Graphics.UIKit.loadShaders
  Graphics.UIKit.mouse
  Graphics.UIKit.newQuad
  Graphics.UIKit.newTexture
  Graphics.UIKit.onevent
  Graphics.UIKit.pass
  Graphics.UIKit.processMessages
  Graphics.UIKit.queuedMessages
  Graphics.UIKit.render
  Graphics.UIKit.run
  Graphics.UIKit.scroll
  Graphics.UIKit.setTexture
  Graphics.UIKit.setup
  Graphics.UIKit.setupEvents
  Graphics.UIKit.texture2DWrap
  Graphics.UIKit.time
  Graphics.UIKit.untilM
  Graphics.UIKit.uploadTexture
  Graphics.UIKit.vectorise
  Graphics.UIKit.whileM
  Graphics.UIKit.windowBounds
  Graphics.UIKit.windowRect
  Graphics.UIKit.~>
  Graphics.UIKit.Descriptor{Graphics.UIKit.Descriptor}
  Graphics.UIKit.Input{Graphics.UIKit.Input fFrameSize fKeyboard fMouse fScroll fTime fWindowRect}
  Graphics.UIKit.MessageChannel
  Graphics.UIKit.Mouse{Graphics.UIKit.Mouse fButtons fCursor}
  Graphics.UIKit.ShaderInfo{Graphics.UIKit.ShaderInfo}
  Graphics.UIKit.ShaderSource{Graphics.UIKit.ByteStringSource Graphics.UIKit.FileSource Graphics.UIKit.StringSource}
  Graphics.UIKit.SystemEvent{Graphics.UIKit.FileDrop Graphics.UIKit.KeyDown Graphics.UIKit.KeyRepeat Graphics.UIKit.KeyUp Graphics.UIKit.MouseDown Graphics.UIKit.MouseEnter Graphics.UIKit.MouseLeave Graphics.UIKit.MouseMotion Graphics.UIKit.MouseScroll Graphics.UIKit.MouseUp Graphics.UIKit.WindowClosing}
module dependencies:
package dependencies: FontyFruity-0.5.3.3@FontyFruity-0.5.3.3-6SJ2TAYdyZb2Ux76v8Rzn
                      GLFW-b-1.4.8.1@GLFW-b-1.4.8.1-7Xk06BFLXOd76ASB2HO0xJ
                      GLURaw-2.0.0.3@GLURaw-2.0.0.3-Dsh0J6RJGCYIX4KzhPpy5R
                      JuicyPixels-3.2.8.3@JuicyPixels-3.2.8.3-5IOlo1rE8WxAfqhWPTAe4N
                      Leibniz-0.1.0.0@Leibniz-0.1.0.0-8I9wq1sPbhYKYf13X0NGYN
                      MonadRandom-0.5.1@MonadRandom-0.5.1-6uvIhB08u1RHnyKFfb2cRN
                      ObjectName-1.1.0.1@ObjectName-1.1.0.1-EiFOWjUQWWuLyOhtrmuIWX
                      OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa
                      OpenGLRaw-3.2.5.0@OpenGLRaw-3.2.5.0-8JxKpZbO2kWCx46iLc1G4X
                      Rasterific-0.7.2.1@Rasterific-0.7.2.1-LMbKW5etcO2FqIPc0tDI23
                      StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      Win32-2.3.1.1@Win32-2.3.1.1
                      adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw
                      binary-0.8.3.0@binary-0.8.3.0
                      bindings-GLFW-3.1.2.3@bindings-GLFW-3.1.2.3-LUlFmU2NSypHLMkfz76GZS
                      bytes-0.15.3@bytes-0.15.3-JnJk9rvpCHsKPq5vbMmKHS
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      call-stack-0.1.0@call-stack-0.1.0-FYVrCPXGP9EGAuTW32963O
                      cereal-0.5.4.0@cereal-0.5.4.0-BsAGxfp8yAs3CiRo2E875e
                      comonad-5.0.2@comonad-5.0.2-Fq9Xy9jdx6uIyJZn00E6Yc
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-29zF0Im431177ovfbHYCGv
                      cubist-sculptor-0.1.0.0@cubist-sculptor-0.1.0.0-3WYtLtIqzKu9KnCVZkGfL9
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      distributive-0.5.3@distributive-0.5.3-IX4kyVcHAyoH4uFYrsjY1R
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      either-4.4.1.1@either-4.4.1.1-6PiwKYkn4v6B4KO2R2Fu1b
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      filepath-1.4.1.1@filepath-1.4.1.1
                      fixed-0.2.1.1@fixed-0.2.1.1-8Jr82l0kss5Gr4nEevmXlZ
                      free-4.12.4@free-4.12.4-C2gBQV0m8J42HxqSLTFyVx
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      half-0.2.2.3@half-0.2.2.3-GHJ372Ls7FBA3PAGtGHfOR
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX
                      lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW
                      linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p
                      linear-aabb-0.1.0.0@linear-aabb-0.1.0.0-FKS3bcYwI7gItIwXlgJNo2
                      microlens-0.4.8.1@microlens-0.4.8.1-BVhsezHoPw9Ez18LAXVtpM
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l
                      monad-loops-0.4.3@monad-loops-0.4.3-ERCN4ZKCeeS5SRhwqXsLBP
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-BhL9U5k7NtGJn1itwIHt2Y
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      profunctors-5.2.1@profunctors-5.2.1-Ga89Nyw0d7LBEIoX4AZ6gT
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      semigroupoids-5.2.1@semigroupoids-5.2.1-Db8txM8kTsI6Y49CY6g5Jn
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      th-abstraction-0.2.6.0@th-abstraction-0.2.6.0-HRFJgpoqs5HJ5LgHnjmMhQ
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-GKSs0LKukAL8ymq2naFmrH
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
                      vector-algorithms-0.7.0.1@vector-algorithms-0.7.0.1-1qlx0Hst1Fo5WZd0lT7Iw1
                      xml-1.3.14@xml-1.3.14-AKug8Ud7K0VEhc87tBwsGy
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: GLFW-b-1.4.8.1@GLFW-b-1.4.8.1-7Xk06BFLXOd76ASB2HO0xJ:Graphics.UI.GLFW.Types
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.Instances
         reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4:Data.Reflection
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: GLFW-b-1.4.8.1@GLFW-b-1.4.8.1-7Xk06BFLXOd76ASB2HO0xJ:Graphics.UI.GLFW.Types
                         JuicyPixels-3.2.8.3@JuicyPixels-3.2.8.3-5IOlo1rE8WxAfqhWPTAe4N:Codec.Picture.Tga
                         JuicyPixels-3.2.8.3@JuicyPixels-3.2.8.3-5IOlo1rE8WxAfqhWPTAe4N:Codec.Picture.Tiff
                         JuicyPixels-3.2.8.3@JuicyPixels-3.2.8.3-5IOlo1rE8WxAfqhWPTAe4N:Codec.Picture.Types
                         MonadRandom-0.5.1@MonadRandom-0.5.1-6uvIhB08u1RHnyKFfb2cRN:Control.Monad.Trans.Random.Lazy
                         Rasterific-0.7.2.1@Rasterific-0.7.2.1-LMbKW5etcO2FqIPc0tDI23:Graphics.Rasterific.Compositor
                         adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp:Data.Functor.Rep
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Biff
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Clown
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Fix
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Flip
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Join
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Joker
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Product
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Sum
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Tannen
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Wrapped
                         bytes-0.15.3@bytes-0.15.3-JnJk9rvpCHsKPq5vbMmKHS:Data.Bytes.Get
                         bytes-0.15.3@bytes-0.15.3-JnJk9rvpCHsKPq5vbMmKHS:Data.Bytes.Signed
                         bytes-0.15.3@bytes-0.15.3-JnJk9rvpCHsKPq5vbMmKHS:Data.Bytes.VarInt
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         either-4.4.1.1@either-4.4.1.1-6PiwKYkn4v6B4KO2R2Fu1b:Control.Monad.Trans.Either
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX:Data.Functor.Day
                         kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX:Data.Functor.Yoneda
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.At
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Internal.Indexed
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Reified
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Tuple
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Wrapped
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Zoom
                         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.Plucker
                         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.Quaternion
                         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.V
                         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.V0
                         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.V1
                         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.V2
                         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.V3
                         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.V4
                         microlens-0.4.8.1@microlens-0.4.8.1-BVhsezHoPw9Ez18LAXVtpM:Lens.Micro.Internal
                         monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l:Control.Monad.Trans.Control
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         profunctors-5.2.1@profunctors-5.2.1-Ga89Nyw0d7LBEIoX4AZ6gT:Data.Profunctor.Rep
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         th-abstraction-0.2.6.0@th-abstraction-0.2.6.0-HRFJgpoqs5HJ5LgHnjmMhQ:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  GLFW-b-1.4.8.1@GLFW-b-1.4.8.1-7Xk06BFLXOd76ASB2HO0xJ:Graphics.UI.GLFW 0e34a1399d76547a3ac9918b40291e9e
import  -/  GLFW-b-1.4.8.1@GLFW-b-1.4.8.1-7Xk06BFLXOd76ASB2HO0xJ:Graphics.UI.GLFW.Types 3f3602fcd965ec49493fae42aae6c2d5
import  -/  JuicyPixels-3.2.8.3@JuicyPixels-3.2.8.3-5IOlo1rE8WxAfqhWPTAe4N:Codec.Picture 571286966c421841885e6bcd5694b06c
import  -/  JuicyPixels-3.2.8.3@JuicyPixels-3.2.8.3-5IOlo1rE8WxAfqhWPTAe4N:Codec.Picture.Types 2df409749650dd4f2f9e150db2599c3d
import  -/  ObjectName-1.1.0.1@ObjectName-1.1.0.1-EiFOWjUQWWuLyOhtrmuIWX:Data.ObjectName 772561cda24db587440d1f28590f4f92
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL ac082665cbb76b49aeeba80221c5d2ff
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.BufferObjects 231a1b27c5a7d3a6ee68d45be1138895
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.ByteString a60aa9291b6cd90a9f212eef8c4ebdcd
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.Capability 413d7a9178b507c09bc1914dc48f2c9e
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.CoordTrans 6cba0edd40b3c94c05abf70e87de8d0f
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.DataType e5a2c94fac4e8bcebda337ddf9ca0d0b
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.Framebuffer 4f914c097c51cd49fbb1e18619af0dd8
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.PixelData 28c60d85c8b518d183eae92022e6da60
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.PixelFormat cabd9b953a97da5bcad1c202c63439d6
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.PixelRectangles.ColorTable f33a7ecf52d82d52114b004643f6f236
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.PrimitiveMode 4c64c079ec614cb041170dcb19dc4419
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.QueryUtils.VertexAttrib 7afe329ca214458ca69514112df4df92
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.Shaders.Program 6f534e9c390a285dc764516dea7e3ff1
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.Shaders.ProgramObjects c8159bb1920b8803a4c7ae1ff466fb7f
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.Shaders.Shader 089f7bff4c5e5072d979ddb8455598d8
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects cbb7a0a10d088c351189d89119c928e5
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.Shaders.Uniform fe7432b96d25da7d2739392cd9ea59a9
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.Texturing.Application fff0d4ff72919abbb645a155f0b0939c
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.Texturing.Filter dc04cdd37a0765c311d997571dd967cd
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.Texturing.Objects 3ba7a8c6d5ad46ec62306845b07771c1
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.Texturing.Parameters 5eecad58bfbcf27072deacb6e9dd7c91
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.Texturing.PixelInternalFormat 2c7bf0190fca3f07b3627f7242661f5c
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.Texturing.Specification a07055cf010fb154305f3864590a2b59
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.Texturing.TextureObject 7841c3ec79f246ab7a7bfd77cfe505da
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget 1e8bff99cddd14d6d5e0313366d87ce7
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.Texturing.TextureUnit 606953b79f6de9b96e36cade1a942964
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.VertexArrayObjects 76aa80b6a8708d19eaf604263c9b245e
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.VertexArrays ec5090e17f831020e1614fdbd36ce9d0
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.VertexAttributes 34d8ebfaf04c91fba72ae2f881de4a8b
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GL.VertexSpec 81ff6886c22a23db04d7a79e1126cf90
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL.GLU.Errors 47a19a2e8144fa2f830c39489589d331
import  -/  OpenGLRaw-3.2.5.0@OpenGLRaw-3.2.5.0-8JxKpZbO2kWCx46iLc1G4X:Graphics.GL.Types d877592808fc319205e1db3ff4d5477d
import  -/  Rasterific-0.7.2.1@Rasterific-0.7.2.1-LMbKW5etcO2FqIPc0tDI23:Graphics.Rasterific da5985dd7ae04a989bbfbcf0106cd865
import  -/  Rasterific-0.7.2.1@Rasterific-0.7.2.1-LMbKW5etcO2FqIPc0tDI23:Graphics.Rasterific.ComplexPrimitive c284d6716954fa8fed8279295c56321f
import  -/  Rasterific-0.7.2.1@Rasterific-0.7.2.1-LMbKW5etcO2FqIPc0tDI23:Graphics.Rasterific.Texture 034f70a2489a9f8c33426f5438cc3787
import  -/  StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO:Data.StateVar 8e3791e8e9cfdfc16cb4d1fbef4901cf
import  -/  base-4.9.1.0:Control.Exception 292fff19f09f7eea1a1573871191d564
import  -/  base-4.9.1.0:Control.Exception.Base f4debb4f4369b99523a6b8027855f0db
import  -/  base-4.9.1.0:Control.Monad f915f187cea611986ebb12dbc69279ab
import  -/  base-4.9.1.0:Data.Either 186ef9adf6b47e24f39efe9b2e18e352
import  -/  base-4.9.1.0:Data.Foldable 254e836c2d813d34e47feb29bb8d40ed
import  -/  base-4.9.1.0:Data.Functor 682cc832c233b71cec70179490a08631
import  -/  base-4.9.1.0:Data.Maybe ecf0c6f81372d9b58b142d5e758ea51b
import  -/  base-4.9.1.0:Data.Monoid 57d0116342e60080b20e7d5f9e1248f9
import  -/  base-4.9.1.0:Data.Tuple b07f695e7ce8fe20cc8a32abf62f60ec
import  -/  base-4.9.1.0:Foreign.Marshal.Array 047e27074ac120880702580b2a89d777
import  -/  base-4.9.1.0:Foreign.Ptr 120bedbb887ba2e0c995d1e8d295fdd9
import  -/  base-4.9.1.0:Foreign.Storable 384be20969692710829b2ab25c057d41
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Conc.Sync 18bcf7264dc8f03029975495d151af25
import  -/  base-4.9.1.0:GHC.Err 20faef8829fd13c027d0ee2213637534
import  -/  base-4.9.1.0:GHC.IO 4d461f9283683225c61e68db403481ad
import  -/  base-4.9.1.0:GHC.List d11eb227c1c6fbfd89bb781d72eaea0d
import  -/  base-4.9.1.0:GHC.Num 38b8aac8807c096c7f3ca3c1eff02939
import  -/  base-4.9.1.0:GHC.Ptr b4896f8418614319b4c9f9d33d792568
import  -/  base-4.9.1.0:GHC.Real b88ae4a48c079652623073a5bbf5c9b0
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  base-4.9.1.0:System.IO 5daf3f384209c11d9566e3409af8ec5d
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString d0429fd72d8924fe9c02ccbe4235f334
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Internal f93c775d03517ec3bd95675a19a7df57
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Set 3ed2324fd1e757464a8ac2b636a64e5a
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base 7066127ea77dde3a5a3f19fd2ed3d39a
import  -/  cubist-sculptor-0.1.0.0@cubist-sculptor-0.1.0.0-3WYtLtIqzKu9KnCVZkGfL9:Geometry.Sculptor.Shapes e2db6f5990e765a5e1643519ff14215e
import  -/  either-4.4.1.1@either-4.4.1.1-6PiwKYkn4v6B4KO2R2Fu1b:Control.Monad.Trans.Either 024925498cf0eedd1ab84529eac9ea7c
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear 03f09b136a46b227aed4708d8d91419c
import  -/  linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.V2 a67c99c5a1f39948af0b2c131863c121
import  -/  linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.V4 49e62bbccc503ab56cec78d5874fc006
import  -/  linear-aabb-0.1.0.0@linear-aabb-0.1.0.0-FKS3bcYwI7gItIwXlgJNo2:Data.AABB 342a6a0c63d286789e7019312fbdd2b1
import  -/  microlens-0.4.8.1@microlens-0.4.8.1-BVhsezHoPw9Ez18LAXVtpM:Lens.Micro 1df5b52bb4f60ef571f1a717ce94a3d6
import  -/  microlens-0.4.8.1@microlens-0.4.8.1-BVhsezHoPw9Ez18LAXVtpM:Lens.Micro.Type 1ff53c7b4992a3bf638900edd070d0c2
import  -/  monad-loops-0.4.3@monad-loops-0.4.3-ERCN4ZKCeeS5SRhwqXsLBP:Control.Monad.Loops 5dafec9c911894263d239bb17a2b83ad
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM d9d67004f2499de74f3785f434493839
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM.TChan 64612af800e1a2e6674a1b1a89b35a5e
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text 60ee6e2213faa3c3f5680c74ec6dedf8
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Class 953c05e2bceca1b256a90a052f7c1b62
import  -/  vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable 4f3425470b63af660c737c2e2a99ae9e
e09757e52a8256c4d18e8a34d1a926f8
  $fEqDescriptor :: GHC.Classes.Eq Graphics.UIKit.Descriptor
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Graphics.UIKit.Descriptor
                  Graphics.UIKit.$fEqDescriptor_$c==
                  Graphics.UIKit.$fEqDescriptor_$c/= -}
e09757e52a8256c4d18e8a34d1a926f8
  $fEqDescriptor_$c/= ::
    Graphics.UIKit.Descriptor
    -> Graphics.UIKit.Descriptor -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LL),1*U(1*U(U),1*U(U),1*U(U))><S(S(S)LL),1*U(1*U(U),1*U(U),1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Graphics.UIKit.Descriptor)
                   (b :: Graphics.UIKit.Descriptor) ->
                 case Graphics.UIKit.$fEqDescriptor_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
e09757e52a8256c4d18e8a34d1a926f8
  $fEqDescriptor_$c== ::
    Graphics.UIKit.Descriptor
    -> Graphics.UIKit.Descriptor -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LL),1*U(1*U(U),1*U(U),1*U(U))><S(S(S)LL),1*U(1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Graphics.UIKit.Descriptor)
                   (w1 :: Graphics.UIKit.Descriptor) ->
                 case w of ww { Graphics.UIKit.Descriptor ww1 ww2 ww3 ->
                 case ww1
                        `cast`
                      (Graphics.Rendering.OpenGL.GL.VertexArrayObjects.N:VertexArrayObject[0]) of ww4 { GHC.Word.W32# ww5 ->
                 case w1 of ww6 { Graphics.UIKit.Descriptor ww7 ww8 ww9 ->
                 case ww7
                        `cast`
                      (Graphics.Rendering.OpenGL.GL.VertexArrayObjects.N:VertexArrayObject[0]) of ww10 { GHC.Word.W32# ww11 ->
                 Graphics.UIKit.$w$c== ww5 ww2 ww3 ww11 ww8 ww9 } } } }) -}
a24fd4ba8ff6ea7462abd91a1ca768ab
  $fEqShaderInfo :: GHC.Classes.Eq Graphics.UIKit.ShaderInfo
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Graphics.UIKit.ShaderInfo
                  Graphics.UIKit.$fEqShaderInfo_$c==
                  Graphics.UIKit.$fEqShaderInfo_$c/= -}
a24fd4ba8ff6ea7462abd91a1ca768ab
  $fEqShaderInfo_$c/= ::
    Graphics.UIKit.ShaderInfo
    -> Graphics.UIKit.ShaderInfo -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Graphics.UIKit.ShaderInfo)
                   (b :: Graphics.UIKit.ShaderInfo) ->
                 case Graphics.UIKit.$fEqShaderInfo_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
a24fd4ba8ff6ea7462abd91a1ca768ab
  $fEqShaderInfo_$c== ::
    Graphics.UIKit.ShaderInfo
    -> Graphics.UIKit.ShaderInfo -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Graphics.UIKit.ShaderInfo)
                   (w1 :: Graphics.UIKit.ShaderInfo) ->
                 case w of ww { Graphics.UIKit.ShaderInfo ww1 ww2 ->
                 case w1 of ww3 { Graphics.UIKit.ShaderInfo ww4 ww5 ->
                 Graphics.UIKit.$w$c==1 ww1 ww2 ww4 ww5 } }) -}
7d46bb45c803e58998d7c73baeb8a3ca
  $fEqShaderInfo_$c==1 ::
    Graphics.UIKit.ShaderSource
    -> Graphics.UIKit.ShaderSource -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Graphics.UIKit.ShaderSource)
                   (ds1 :: Graphics.UIKit.ShaderSource) ->
                 case ds of wild {
                   Graphics.UIKit.ByteStringSource a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.UIKit.ByteStringSource b1
                        -> Data.ByteString.Internal.eq a1 b1 }
                   Graphics.UIKit.StringSource a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.UIKit.StringSource b1 -> GHC.Base.eqString a1 b1 }
                   Graphics.UIKit.FileSource a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.UIKit.FileSource b1 -> GHC.Base.eqString a1 b1 } }) -}
7d46bb45c803e58998d7c73baeb8a3ca
  $fEqShaderSource :: GHC.Classes.Eq Graphics.UIKit.ShaderSource
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Graphics.UIKit.ShaderSource
                  Graphics.UIKit.$fEqShaderInfo_$c==1
                  Graphics.UIKit.$fEqShaderSource_$c/= -}
7d46bb45c803e58998d7c73baeb8a3ca
  $fEqShaderSource_$c/= ::
    Graphics.UIKit.ShaderSource
    -> Graphics.UIKit.ShaderSource -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Graphics.UIKit.ShaderSource)
                   (b :: Graphics.UIKit.ShaderSource) ->
                 case Graphics.UIKit.$fEqShaderInfo_$c==1 a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
b653081a0eb8b6ae81041da03a4ccabe
  $fEqSystemEvent :: GHC.Classes.Eq Graphics.UIKit.SystemEvent
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Graphics.UIKit.SystemEvent
                  Graphics.UIKit.$fEqSystemEvent_$c==
                  Graphics.UIKit.$fEqSystemEvent_$c/= -}
b653081a0eb8b6ae81041da03a4ccabe
  $fEqSystemEvent_$c/= ::
    Graphics.UIKit.SystemEvent
    -> Graphics.UIKit.SystemEvent -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Graphics.UIKit.SystemEvent)
                   (b :: Graphics.UIKit.SystemEvent) ->
                 case Graphics.UIKit.$fEqSystemEvent_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
b653081a0eb8b6ae81041da03a4ccabe
  $fEqSystemEvent_$c== ::
    Graphics.UIKit.SystemEvent
    -> Graphics.UIKit.SystemEvent -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Graphics.UIKit.SystemEvent)
                   (ds1 :: Graphics.UIKit.SystemEvent) ->
                 case ds of wild {
                   Graphics.UIKit.MouseMotion a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.UIKit.MouseMotion b1
                        -> case a1 of ww { Linear.V2.V2 ww1 ww2 ->
                           case ww1 of wild2 { GHC.Types.D# x ->
                           case ww2 of wild3 { GHC.Types.D# x1 ->
                           case b1 of ww3 { Linear.V2.V2 ww4 ww5 ->
                           case ww4 of wild4 { GHC.Types.D# y ->
                           case ww5 of wild5 { GHC.Types.D# y1 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==## x y) of wild6 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==## x1 y1) } } } } } } } }
                   Graphics.UIKit.MouseDown a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.UIKit.MouseDown b1
                        -> Graphics.UI.GLFW.Types.$fEqMouseButton_$c== a1 b1 }
                   Graphics.UIKit.MouseUp a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.UIKit.MouseUp b1
                        -> Graphics.UI.GLFW.Types.$fEqMouseButton_$c== a1 b1 }
                   Graphics.UIKit.MouseScroll a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.UIKit.MouseScroll b1
                        -> case a1 of ww { Linear.V2.V2 ww1 ww2 ->
                           case ww1 of wild2 { GHC.Types.D# x ->
                           case ww2 of wild3 { GHC.Types.D# x1 ->
                           case b1 of ww3 { Linear.V2.V2 ww4 ww5 ->
                           case ww4 of wild4 { GHC.Types.D# y ->
                           case ww5 of wild5 { GHC.Types.D# y1 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==## x y) of wild6 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==## x1 y1) } } } } } } } }
                   Graphics.UIKit.KeyDown a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.UIKit.KeyDown b1
                        -> Graphics.UI.GLFW.Types.$fEqKey_$c== a1 b1 }
                   Graphics.UIKit.KeyUp a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.UIKit.KeyUp b1
                        -> Graphics.UI.GLFW.Types.$fEqKey_$c== a1 b1 }
                   Graphics.UIKit.KeyRepeat a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.UIKit.KeyRepeat b1
                        -> Graphics.UI.GLFW.Types.$fEqKey_$c== a1 b1 }
                   Graphics.UIKit.FileDrop a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.UIKit.FileDrop b1 -> GHC.Classes.$fEq[]_$s$c==2 a1 b1 }
                   Graphics.UIKit.WindowClosing
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.UIKit.WindowClosing -> GHC.Types.True }
                   Graphics.UIKit.MouseEnter
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.UIKit.MouseEnter -> GHC.Types.True }
                   Graphics.UIKit.MouseLeave
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.UIKit.MouseLeave -> GHC.Types.True } }) -}
a24fd4ba8ff6ea7462abd91a1ca768ab
  $fOrdShaderInfo :: GHC.Classes.Ord Graphics.UIKit.ShaderInfo
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Graphics.UIKit.ShaderInfo
                  Graphics.UIKit.$fEqShaderInfo
                  Graphics.UIKit.$fOrdShaderInfo_$ccompare
                  Graphics.UIKit.$fOrdShaderInfo_$c<
                  Graphics.UIKit.$fOrdShaderInfo_$c<=
                  Graphics.UIKit.$fOrdShaderInfo_$c>
                  Graphics.UIKit.$fOrdShaderInfo_$c>=
                  Graphics.UIKit.$fOrdShaderInfo_$cmax
                  Graphics.UIKit.$fOrdShaderInfo_$cmin -}
a24fd4ba8ff6ea7462abd91a1ca768ab
  $fOrdShaderInfo_$c< ::
    Graphics.UIKit.ShaderInfo
    -> Graphics.UIKit.ShaderInfo -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Graphics.UIKit.ShaderInfo)
                   (w1 :: Graphics.UIKit.ShaderInfo) ->
                 case w of ww { Graphics.UIKit.ShaderInfo ww1 ww2 ->
                 case w1 of ww3 { Graphics.UIKit.ShaderInfo ww4 ww5 ->
                 Graphics.UIKit.$w$c< ww1 ww2 ww4 ww5 } }) -}
7d46bb45c803e58998d7c73baeb8a3ca
  $fOrdShaderInfo_$c<1 ::
    Graphics.UIKit.ShaderSource
    -> Graphics.UIKit.ShaderSource -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Graphics.UIKit.ShaderSource)
                   (b :: Graphics.UIKit.ShaderSource) ->
                 case a of wild {
                   Graphics.UIKit.ByteStringSource a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Graphics.UIKit.ByteStringSource b1
                        -> Data.ByteString.Internal.$fOrdByteString_$c< a1 b1 }
                   Graphics.UIKit.StringSource a1
                   -> case b of wild1 {
                        Graphics.UIKit.ByteStringSource ds -> GHC.Types.False
                        Graphics.UIKit.StringSource b1 -> GHC.Classes.$fOrd[]_$s$c<1 a1 b1
                        Graphics.UIKit.FileSource ipv -> GHC.Types.True }
                   Graphics.UIKit.FileSource a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.UIKit.FileSource b1
                        -> GHC.Classes.$fOrd[]_$s$c<1 a1 b1 } }) -}
a24fd4ba8ff6ea7462abd91a1ca768ab
  $fOrdShaderInfo_$c<= ::
    Graphics.UIKit.ShaderInfo
    -> Graphics.UIKit.ShaderInfo -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Graphics.UIKit.ShaderInfo)
                   (w1 :: Graphics.UIKit.ShaderInfo) ->
                 case w of ww { Graphics.UIKit.ShaderInfo ww1 ww2 ->
                 case w1 of ww3 { Graphics.UIKit.ShaderInfo ww4 ww5 ->
                 Graphics.UIKit.$w$c<= ww1 ww2 ww4 ww5 } }) -}
7d46bb45c803e58998d7c73baeb8a3ca
  $fOrdShaderInfo_$c<=1 ::
    Graphics.UIKit.ShaderSource
    -> Graphics.UIKit.ShaderSource -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Graphics.UIKit.ShaderSource)
                   (b :: Graphics.UIKit.ShaderSource) ->
                 case a of wild {
                   Graphics.UIKit.ByteStringSource a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Graphics.UIKit.ByteStringSource b1
                        -> Data.ByteString.Internal.$fOrdByteString_$c<= a1 b1 }
                   Graphics.UIKit.StringSource a1
                   -> case b of wild1 {
                        Graphics.UIKit.ByteStringSource ds -> GHC.Types.False
                        Graphics.UIKit.StringSource b1 -> GHC.Classes.$fOrd[]_$s$c<=1 a1 b1
                        Graphics.UIKit.FileSource ipv -> GHC.Types.True }
                   Graphics.UIKit.FileSource a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.UIKit.FileSource b1
                        -> GHC.Classes.$fOrd[]_$s$c<=1 a1 b1 } }) -}
a24fd4ba8ff6ea7462abd91a1ca768ab
  $fOrdShaderInfo_$c> ::
    Graphics.UIKit.ShaderInfo
    -> Graphics.UIKit.ShaderInfo -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Graphics.UIKit.ShaderInfo)
                   (w1 :: Graphics.UIKit.ShaderInfo) ->
                 case w of ww { Graphics.UIKit.ShaderInfo ww1 ww2 ->
                 case w1 of ww3 { Graphics.UIKit.ShaderInfo ww4 ww5 ->
                 Graphics.UIKit.$w$c> ww1 ww2 ww4 ww5 } }) -}
7d46bb45c803e58998d7c73baeb8a3ca
  $fOrdShaderInfo_$c>1 ::
    Graphics.UIKit.ShaderSource
    -> Graphics.UIKit.ShaderSource -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Graphics.UIKit.ShaderSource)
                   (b :: Graphics.UIKit.ShaderSource) ->
                 case a of wild {
                   Graphics.UIKit.ByteStringSource a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.UIKit.ByteStringSource b1
                        -> Data.ByteString.Internal.$fOrdByteString_$c> a1 b1 }
                   Graphics.UIKit.StringSource a1
                   -> case b of wild1 {
                        Graphics.UIKit.ByteStringSource ds -> GHC.Types.True
                        Graphics.UIKit.StringSource b1 -> GHC.Classes.$fOrd[]_$s$c>1 a1 b1
                        Graphics.UIKit.FileSource ipv -> GHC.Types.False }
                   Graphics.UIKit.FileSource a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Graphics.UIKit.FileSource b1
                        -> GHC.Classes.$fOrd[]_$s$c>1 a1 b1 } }) -}
a24fd4ba8ff6ea7462abd91a1ca768ab
  $fOrdShaderInfo_$c>= ::
    Graphics.UIKit.ShaderInfo
    -> Graphics.UIKit.ShaderInfo -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Graphics.UIKit.ShaderInfo)
                   (w1 :: Graphics.UIKit.ShaderInfo) ->
                 case w of ww { Graphics.UIKit.ShaderInfo ww1 ww2 ->
                 case w1 of ww3 { Graphics.UIKit.ShaderInfo ww4 ww5 ->
                 Graphics.UIKit.$w$c>= ww1 ww2 ww4 ww5 } }) -}
7d46bb45c803e58998d7c73baeb8a3ca
  $fOrdShaderInfo_$c>=1 ::
    Graphics.UIKit.ShaderSource
    -> Graphics.UIKit.ShaderSource -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Graphics.UIKit.ShaderSource)
                   (b :: Graphics.UIKit.ShaderSource) ->
                 case a of wild {
                   Graphics.UIKit.ByteStringSource a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.UIKit.ByteStringSource b1
                        -> Data.ByteString.Internal.$fOrdByteString_$c>= a1 b1 }
                   Graphics.UIKit.StringSource a1
                   -> case b of wild1 {
                        Graphics.UIKit.ByteStringSource ds -> GHC.Types.True
                        Graphics.UIKit.StringSource b1 -> GHC.Classes.$fOrd[]_$s$c>=1 a1 b1
                        Graphics.UIKit.FileSource ipv -> GHC.Types.False }
                   Graphics.UIKit.FileSource a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Graphics.UIKit.FileSource b1
                        -> GHC.Classes.$fOrd[]_$s$c>=1 a1 b1 } }) -}
a24fd4ba8ff6ea7462abd91a1ca768ab
  $fOrdShaderInfo_$ccompare ::
    Graphics.UIKit.ShaderInfo
    -> Graphics.UIKit.ShaderInfo -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Graphics.UIKit.ShaderInfo)
                   (w1 :: Graphics.UIKit.ShaderInfo) ->
                 case w of ww { Graphics.UIKit.ShaderInfo ww1 ww2 ->
                 case w1 of ww3 { Graphics.UIKit.ShaderInfo ww4 ww5 ->
                 Graphics.UIKit.$w$ccompare ww1 ww2 ww4 ww5 } }) -}
7d46bb45c803e58998d7c73baeb8a3ca
  $fOrdShaderInfo_$ccompare1 ::
    Graphics.UIKit.ShaderSource
    -> Graphics.UIKit.ShaderSource -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Graphics.UIKit.ShaderSource)
                   (b :: Graphics.UIKit.ShaderSource) ->
                 case a of wild {
                   Graphics.UIKit.ByteStringSource a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Graphics.UIKit.ByteStringSource b1
                        -> Data.ByteString.Internal.compareBytes a1 b1 }
                   Graphics.UIKit.StringSource a1
                   -> case b of wild1 {
                        Graphics.UIKit.ByteStringSource ds -> GHC.Types.GT
                        Graphics.UIKit.StringSource b1
                        -> GHC.Classes.$fOrd[]_$s$ccompare1 a1 b1
                        Graphics.UIKit.FileSource ipv -> GHC.Types.LT }
                   Graphics.UIKit.FileSource a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Graphics.UIKit.FileSource b1
                        -> GHC.Classes.$fOrd[]_$s$ccompare1 a1 b1 } }) -}
a24fd4ba8ff6ea7462abd91a1ca768ab
  $fOrdShaderInfo_$cmax ::
    Graphics.UIKit.ShaderInfo
    -> Graphics.UIKit.ShaderInfo -> Graphics.UIKit.ShaderInfo
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),U(U,U)><S(SL),U(U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Graphics.UIKit.ShaderInfo)
                   (y :: Graphics.UIKit.ShaderInfo) ->
                 case Graphics.UIKit.$fOrdShaderInfo_$c<= x y of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
a24fd4ba8ff6ea7462abd91a1ca768ab
  $fOrdShaderInfo_$cmin ::
    Graphics.UIKit.ShaderInfo
    -> Graphics.UIKit.ShaderInfo -> Graphics.UIKit.ShaderInfo
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),U(U,U)><S(SL),U(U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Graphics.UIKit.ShaderInfo)
                   (y :: Graphics.UIKit.ShaderInfo) ->
                 case Graphics.UIKit.$fOrdShaderInfo_$c<= x y of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
7d46bb45c803e58998d7c73baeb8a3ca
  $fOrdShaderSource :: GHC.Classes.Ord Graphics.UIKit.ShaderSource
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Graphics.UIKit.ShaderSource
                  Graphics.UIKit.$fEqShaderSource
                  Graphics.UIKit.$fOrdShaderInfo_$ccompare1
                  Graphics.UIKit.$fOrdShaderInfo_$c<1
                  Graphics.UIKit.$fOrdShaderInfo_$c<=1
                  Graphics.UIKit.$fOrdShaderInfo_$c>1
                  Graphics.UIKit.$fOrdShaderInfo_$c>=1
                  Graphics.UIKit.$fOrdShaderSource_$cmax
                  Graphics.UIKit.$fOrdShaderSource_$cmin -}
7d46bb45c803e58998d7c73baeb8a3ca
  $fOrdShaderSource_$cmax ::
    Graphics.UIKit.ShaderSource
    -> Graphics.UIKit.ShaderSource -> Graphics.UIKit.ShaderSource
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Graphics.UIKit.ShaderSource)
                   (y :: Graphics.UIKit.ShaderSource) ->
                 case Graphics.UIKit.$fOrdShaderInfo_$c<=1 x y of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
7d46bb45c803e58998d7c73baeb8a3ca
  $fOrdShaderSource_$cmin ::
    Graphics.UIKit.ShaderSource
    -> Graphics.UIKit.ShaderSource -> Graphics.UIKit.ShaderSource
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Graphics.UIKit.ShaderSource)
                   (y :: Graphics.UIKit.ShaderSource) ->
                 case Graphics.UIKit.$fOrdShaderInfo_$c<=1 x y of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
e09757e52a8256c4d18e8a34d1a926f8
  $fShowDescriptor :: GHC.Show.Show Graphics.UIKit.Descriptor
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Graphics.UIKit.Descriptor
                  Graphics.UIKit.$fShowDescriptor_$cshowsPrec
                  Graphics.UIKit.$fShowDescriptor_$cshow
                  Graphics.UIKit.$fShowDescriptor_$cshowList -}
e09757e52a8256c4d18e8a34d1a926f8
  $fShowDescriptor1 :: Graphics.UIKit.Descriptor -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Graphics.UIKit.Descriptor)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { Graphics.UIKit.Descriptor ww1 ww2 ww3 ->
                 Graphics.UIKit.$w$cshowsPrec 0# ww1 ww2 ww3 w1 }) -}
9a79460b647b954ea7cceb22706747f9
  $fShowDescriptor2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Descriptor "#) -}
e09757e52a8256c4d18e8a34d1a926f8
  $fShowDescriptor_$cshow ::
    Graphics.UIKit.Descriptor -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U(U),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Graphics.UIKit.Descriptor) ->
                 Graphics.UIKit.$fShowDescriptor_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
e09757e52a8256c4d18e8a34d1a926f8
  $fShowDescriptor_$cshowList ::
    [Graphics.UIKit.Descriptor] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Graphics.UIKit.Descriptor
                   Graphics.UIKit.$fShowDescriptor1) -}
e09757e52a8256c4d18e8a34d1a926f8
  $fShowDescriptor_$cshowsPrec ::
    GHC.Types.Int -> Graphics.UIKit.Descriptor -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U(U),1*U(U))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Graphics.UIKit.Descriptor)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Graphics.UIKit.Descriptor ww3 ww4 ww5 ->
                 Graphics.UIKit.$w$cshowsPrec ww1 ww3 ww4 ww5 w2 } }) -}
b804a186d6d37e4ee26709eefad1e6cf
  $fShowMouse :: GHC.Show.Show Graphics.UIKit.Mouse
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Graphics.UIKit.Mouse
                  Graphics.UIKit.$fShowMouse_$cshowsPrec
                  Graphics.UIKit.$fShowMouse_$cshow
                  Graphics.UIKit.$fShowMouse_$cshowList -}
b804a186d6d37e4ee26709eefad1e6cf
  $fShowMouse1 :: Graphics.UIKit.Mouse -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Graphics.UIKit.Mouse) ->
                 case w of ww { Graphics.UIKit.Mouse ww1 ww2 ->
                 Graphics.UIKit.$w$cshowsPrec1 0# ww1 ww2 }) -}
0344f98dc6e3bfc469b64e78b4393eac
  $fShowMouse2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
2b3d93fb25993a344c93a8471b7a7d5a
  $fShowMouse3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fButtons = "#) -}
cab29b730c6e931902425bb761db1f1a
  $fShowMouse4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
8e2519016da0e5feeafebd8b82b827cb
  $fShowMouse5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fCursor = "#) -}
5923e83c16367eaf5b5b844cfd54df21
  $fShowMouse6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Mouse {"#) -}
b804a186d6d37e4ee26709eefad1e6cf
  $fShowMouse_$cshow :: Graphics.UIKit.Mouse -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Graphics.UIKit.Mouse) ->
                 Graphics.UIKit.$fShowMouse_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
b804a186d6d37e4ee26709eefad1e6cf
  $fShowMouse_$cshowList :: [Graphics.UIKit.Mouse] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Graphics.UIKit.Mouse
                   Graphics.UIKit.$fShowMouse1) -}
b804a186d6d37e4ee26709eefad1e6cf
  $fShowMouse_$cshowsPrec ::
    GHC.Types.Int -> Graphics.UIKit.Mouse -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Graphics.UIKit.Mouse) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Graphics.UIKit.Mouse ww3 ww4 ->
                 Graphics.UIKit.$w$cshowsPrec1 ww1 ww3 ww4 } }) -}
a24fd4ba8ff6ea7462abd91a1ca768ab
  $fShowShaderInfo :: GHC.Show.Show Graphics.UIKit.ShaderInfo
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Graphics.UIKit.ShaderInfo
                  Graphics.UIKit.$fShowShaderInfo_$cshowsPrec
                  Graphics.UIKit.$fShowShaderInfo_$cshow
                  Graphics.UIKit.$fShowShaderInfo_$cshowList -}
a24fd4ba8ff6ea7462abd91a1ca768ab
  $fShowShaderInfo1 :: Graphics.UIKit.ShaderInfo -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Graphics.UIKit.ShaderInfo)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { Graphics.UIKit.ShaderInfo ww1 ww2 ->
                 Graphics.UIKit.$w$cshowsPrec2 0# ww1 ww2 w1 }) -}
c3369959e9cca4018ac3f85c4c6c34f8
  $fShowShaderInfo2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FileSource "#) -}
fd67efb1e677ac217533dd5ac4ed4633
  $fShowShaderInfo3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "StringSource "#) -}
4b861f5cad9c3e817654de332ef78359
  $fShowShaderInfo4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ByteStringSource "#) -}
7ca29ec38f98d19d3b7096364d928b4b
  $fShowShaderInfo5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ShaderInfo "#) -}
a24fd4ba8ff6ea7462abd91a1ca768ab
  $fShowShaderInfo_$cshow ::
    Graphics.UIKit.ShaderInfo -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Graphics.UIKit.ShaderInfo) ->
                 Graphics.UIKit.$fShowShaderInfo_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
a24fd4ba8ff6ea7462abd91a1ca768ab
  $fShowShaderInfo_$cshowList ::
    [Graphics.UIKit.ShaderInfo] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Graphics.UIKit.ShaderInfo
                   Graphics.UIKit.$fShowShaderInfo1) -}
a24fd4ba8ff6ea7462abd91a1ca768ab
  $fShowShaderInfo_$cshowsPrec ::
    GHC.Types.Int -> Graphics.UIKit.ShaderInfo -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Graphics.UIKit.ShaderInfo)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Graphics.UIKit.ShaderInfo ww3 ww4 ->
                 Graphics.UIKit.$w$cshowsPrec2 ww1 ww3 ww4 w2 } }) -}
7d46bb45c803e58998d7c73baeb8a3ca
  $fShowShaderSource :: GHC.Show.Show Graphics.UIKit.ShaderSource
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Graphics.UIKit.ShaderSource
                  Graphics.UIKit.$fShowShaderSource_$cshowsPrec
                  Graphics.UIKit.$fShowShaderSource_$cshow
                  Graphics.UIKit.$fShowShaderSource_$cshowList -}
7d46bb45c803e58998d7c73baeb8a3ca
  $fShowShaderSource1 ::
    Graphics.UIKit.ShaderSource -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Graphics.UIKit.ShaderSource)
                   (w1 :: GHC.Base.String) ->
                 Graphics.UIKit.$w$cshowsPrec3 0# w w1) -}
7d46bb45c803e58998d7c73baeb8a3ca
  $fShowShaderSource_$cshow ::
    Graphics.UIKit.ShaderSource -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Graphics.UIKit.ShaderSource) ->
                 Graphics.UIKit.$fShowShaderSource_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
7d46bb45c803e58998d7c73baeb8a3ca
  $fShowShaderSource_$cshowList ::
    [Graphics.UIKit.ShaderSource] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Graphics.UIKit.ShaderSource
                   Graphics.UIKit.$fShowShaderSource1) -}
7d46bb45c803e58998d7c73baeb8a3ca
  $fShowShaderSource_$cshowsPrec ::
    GHC.Types.Int -> Graphics.UIKit.ShaderSource -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Graphics.UIKit.ShaderSource)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Graphics.UIKit.$w$cshowsPrec3 ww1 w1 w2 }) -}
b653081a0eb8b6ae81041da03a4ccabe
  $fShowSystemEvent :: GHC.Show.Show Graphics.UIKit.SystemEvent
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Graphics.UIKit.SystemEvent
                  Graphics.UIKit.$fShowSystemEvent_$cshowsPrec
                  Graphics.UIKit.$fShowSystemEvent_$cshow
                  Graphics.UIKit.$fShowSystemEvent_$cshowList -}
b653081a0eb8b6ae81041da03a4ccabe
  $fShowSystemEvent1 :: Graphics.UIKit.SystemEvent -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Graphics.UIKit.$fShowSystemEvent_$cshowsPrec
                   Graphics.UIKit.$fShowSystemEvent2) -}
595ac08769119181bd2fd374867ba3c8
  $fShowSystemEvent10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "KeyRepeat "#) -}
362bdf46cdebb1e2cbb82c62d25d01b6
  $fShowSystemEvent11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "KeyUp "#) -}
bfec3e06940ab34c5622a62362eacaee
  $fShowSystemEvent12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "KeyDown "#) -}
6c03baa32b9d4290fca6fed6518df63a
  $fShowSystemEvent13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MouseScroll "#) -}
a4987e95251d862fa718724665371980
  $fShowSystemEvent14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MouseUp "#) -}
9171fc9e562472f97b60d4bb2a7d6407
  $fShowSystemEvent15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MouseDown "#) -}
1fe6cdc5a1d2b81ea6717c5360ebae1b
  $fShowSystemEvent16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MouseMotion "#) -}
0755cc473a0d6390c9bf3a15bd050ae2
  $fShowSystemEvent2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
5b0fe2745e0f4240ca0e66bbd5e2ee78
  $fShowSystemEvent3 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Graphics.UIKit.$fShowSystemEvent4) -}
b8111fd8ca762b2d46723baf645dd362
  $fShowSystemEvent4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MouseLeave"#) -}
d7f0add32f24c72e45903986ba7003d8
  $fShowSystemEvent5 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Graphics.UIKit.$fShowSystemEvent6) -}
3de5dd7a49e133539120077abde24aac
  $fShowSystemEvent6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MouseEnter"#) -}
e66aef7ed3527379aa21c980f8e6f6ed
  $fShowSystemEvent7 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Graphics.UIKit.$fShowSystemEvent8) -}
79333bc4c940d8b39d587d4d62f3acff
  $fShowSystemEvent8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "WindowClosing"#) -}
a8002cb7d0d085222e71ad2ad0113b19
  $fShowSystemEvent9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FileDrop "#) -}
b653081a0eb8b6ae81041da03a4ccabe
  $fShowSystemEvent_$cshow ::
    Graphics.UIKit.SystemEvent -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
b653081a0eb8b6ae81041da03a4ccabe
  $fShowSystemEvent_$cshowList ::
    [Graphics.UIKit.SystemEvent] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Graphics.UIKit.SystemEvent
                   Graphics.UIKit.$fShowSystemEvent1) -}
b653081a0eb8b6ae81041da03a4ccabe
  $fShowSystemEvent_$cshowsPrec ::
    GHC.Types.Int -> Graphics.UIKit.SystemEvent -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>,
     Unfolding: (\ (a :: GHC.Types.Int)
                   (ds :: Graphics.UIKit.SystemEvent) ->
                 case ds of wild {
                   Graphics.UIKit.MouseMotion b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = case b1 of ww2 { Linear.V2.V2 ww3 ww4 ->
                          Linear.V2.$w$cshowsPrec
                            @ GHC.Types.Double
                            GHC.Float.$fShowDouble
                            11#
                            ww3
                            ww4 }
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Graphics.UIKit.$fShowSystemEvent16
                             (g x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Graphics.UIKit.$fShowSystemEvent16
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1))) } }
                   Graphics.UIKit.MouseDown b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Graphics.UIKit.$fShowSystemEvent15
                             (Graphics.UI.GLFW.Types.$w$cshowsPrec11 b1 x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Graphics.UIKit.$fShowSystemEvent15
                                (Graphics.UI.GLFW.Types.$w$cshowsPrec11
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1))) } }
                   Graphics.UIKit.MouseUp b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Graphics.UIKit.$fShowSystemEvent14
                             (Graphics.UI.GLFW.Types.$w$cshowsPrec11 b1 x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Graphics.UIKit.$fShowSystemEvent14
                                (Graphics.UI.GLFW.Types.$w$cshowsPrec11
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1))) } }
                   Graphics.UIKit.MouseScroll b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = case b1 of ww2 { Linear.V2.V2 ww3 ww4 ->
                          Linear.V2.$w$cshowsPrec
                            @ GHC.Types.Double
                            GHC.Float.$fShowDouble
                            11#
                            ww3
                            ww4 }
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Graphics.UIKit.$fShowSystemEvent13
                             (g x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Graphics.UIKit.$fShowSystemEvent13
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1))) } }
                   Graphics.UIKit.KeyDown b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Graphics.UIKit.$fShowSystemEvent12
                             (Graphics.UI.GLFW.Types.$w$cshowsPrec7 b1 x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Graphics.UIKit.$fShowSystemEvent12
                                (Graphics.UI.GLFW.Types.$w$cshowsPrec7
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1))) } }
                   Graphics.UIKit.KeyUp b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Graphics.UIKit.$fShowSystemEvent11
                             (Graphics.UI.GLFW.Types.$w$cshowsPrec7 b1 x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Graphics.UIKit.$fShowSystemEvent11
                                (Graphics.UI.GLFW.Types.$w$cshowsPrec7
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1))) } }
                   Graphics.UIKit.KeyRepeat b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Graphics.UIKit.$fShowSystemEvent10
                             (Graphics.UI.GLFW.Types.$w$cshowsPrec7 b1 x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Graphics.UIKit.$fShowSystemEvent10
                                (Graphics.UI.GLFW.Types.$w$cshowsPrec7
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1))) } }
                   Graphics.UIKit.FileDrop b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Graphics.UIKit.$fShowSystemEvent9
                             (GHC.Show.showList__
                                @ [GHC.Types.Char]
                                GHC.Show.shows_$cshowList1
                                b1
                                x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Graphics.UIKit.$fShowSystemEvent9
                                (GHC.Show.showList__
                                   @ [GHC.Types.Char]
                                   GHC.Show.shows_$cshowList1
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1))) } }
                   Graphics.UIKit.WindowClosing -> Graphics.UIKit.$fShowSystemEvent7
                   Graphics.UIKit.MouseEnter -> Graphics.UIKit.$fShowSystemEvent5
                   Graphics.UIKit.MouseLeave
                   -> Graphics.UIKit.$fShowSystemEvent3 }) -}
062cc43d7f0ed7e28f79fb4ce843cddd
  $s$fNumV1 :: GHC.Num.Num (Linear.V1.V1 GHC.Types.Float)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Linear.V1.V1 GHC.Types.Float)
                  (\ (eta :: Linear.V1.V1 GHC.Types.Float)
                     (eta1 :: Linear.V1.V1 GHC.Types.Float) ->
                   Linear.V1.$fAdditiveV1_$sliftA2
                     @ GHC.Types.Float
                     @ GHC.Types.Float
                     @ GHC.Types.Float
                     GHC.Float.$fNumFloat_$c+
                     eta
                     eta1)
                  (\ (eta :: Linear.V1.V1 GHC.Types.Float)
                     (eta1 :: Linear.V1.V1 GHC.Types.Float) ->
                   Linear.V1.$fAdditiveV1_$sliftA2
                     @ GHC.Types.Float
                     @ GHC.Types.Float
                     @ GHC.Types.Float
                     GHC.Float.$fNumFloat_$c-
                     eta
                     eta1)
                  (\ (eta :: Linear.V1.V1 GHC.Types.Float)
                     (eta1 :: Linear.V1.V1 GHC.Types.Float) ->
                   Linear.V1.$fAdditiveV1_$sliftA2
                     @ GHC.Types.Float
                     @ GHC.Types.Float
                     @ GHC.Types.Float
                     GHC.Float.$fNumFloat_$c*
                     eta
                     eta1)
                  (\ (eta :: Linear.V1.V1 GHC.Types.Float) ->
                   Linear.V1.$fAdditiveV1_$cfmap
                     @ GHC.Types.Float
                     @ GHC.Types.Float
                     GHC.Float.$fNumFloat_$cnegate
                     eta)
                  (\ (eta :: Linear.V1.V1 GHC.Types.Float) ->
                   Linear.V1.$fAdditiveV1_$cfmap
                     @ GHC.Types.Float
                     @ GHC.Types.Float
                     GHC.Float.$fNumFloat_$cabs
                     eta)
                  (\ (eta :: Linear.V1.V1 GHC.Types.Float) ->
                   Linear.V1.$fAdditiveV1_$cfmap
                     @ GHC.Types.Float
                     @ GHC.Types.Float
                     GHC.Float.$fNumFloat_$csignum
                     eta)
                  GHC.Float.$fNumFloat_$cfromInteger
                    `cast`
                  (<GHC.Integer.Type.Integer>_R
                   ->_R Sym (Linear.V1.N:V1[0] <GHC.Types.Float>_R)) -}
4e03d0e3d0fbaa4a10a832819ad19c10
  $s$fNumV4 :: GHC.Num.Num (Linear.V4.V4 GHC.Types.Float)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Linear.V4.V4 GHC.Types.Float)
                  (\ (eta :: Linear.V4.V4 GHC.Types.Float)
                     (eta1 :: Linear.V4.V4 GHC.Types.Float) ->
                   Linear.V4.$fAdditiveV4_$sliftA2
                     @ GHC.Types.Float
                     @ GHC.Types.Float
                     @ GHC.Types.Float
                     GHC.Float.$fNumFloat_$c+
                     eta
                     eta1)
                  (\ (eta :: Linear.V4.V4 GHC.Types.Float)
                     (eta1 :: Linear.V4.V4 GHC.Types.Float) ->
                   Linear.V4.$fAdditiveV4_$sliftA2
                     @ GHC.Types.Float
                     @ GHC.Types.Float
                     @ GHC.Types.Float
                     GHC.Float.$fNumFloat_$c-
                     eta
                     eta1)
                  (\ (eta :: Linear.V4.V4 GHC.Types.Float)
                     (eta1 :: Linear.V4.V4 GHC.Types.Float) ->
                   Linear.V4.$fAdditiveV4_$sliftA2
                     @ GHC.Types.Float
                     @ GHC.Types.Float
                     @ GHC.Types.Float
                     GHC.Float.$fNumFloat_$c*
                     eta
                     eta1)
                  (\ (eta :: Linear.V4.V4 GHC.Types.Float) ->
                   case eta of wild { Linear.V4.V4 a1 b c d ->
                   case GHC.Float.$fNumFloat_$cnegate a1 of dt1 { GHC.Types.F# ipv ->
                   case GHC.Float.$fNumFloat_$cnegate b of dt2 { GHC.Types.F# ipv1 ->
                   case GHC.Float.$fNumFloat_$cnegate c of dt3 { GHC.Types.F# ipv2 ->
                   case GHC.Float.$fNumFloat_$cnegate d of dt4 { GHC.Types.F# ipv3 ->
                   Linear.V4.V4 @ GHC.Types.Float dt1 dt2 dt3 dt4 } } } } })
                  (\ (eta :: Linear.V4.V4 GHC.Types.Float) ->
                   case eta of wild { Linear.V4.V4 a1 b c d ->
                   case GHC.Float.$fNumFloat_$cabs a1 of dt1 { GHC.Types.F# ipv ->
                   case GHC.Float.$fNumFloat_$cabs b of dt2 { GHC.Types.F# ipv1 ->
                   case GHC.Float.$fNumFloat_$cabs c of dt3 { GHC.Types.F# ipv2 ->
                   case GHC.Float.$fNumFloat_$cabs d of dt4 { GHC.Types.F# ipv3 ->
                   Linear.V4.V4 @ GHC.Types.Float dt1 dt2 dt3 dt4 } } } } })
                  (\ (eta :: Linear.V4.V4 GHC.Types.Float) ->
                   case eta of wild { Linear.V4.V4 a1 b c d ->
                   case GHC.Float.$fNumFloat_$csignum a1 of dt1 { GHC.Types.F# ipv ->
                   case GHC.Float.$fNumFloat_$csignum b of dt2 { GHC.Types.F# ipv1 ->
                   case GHC.Float.$fNumFloat_$csignum c of dt3 { GHC.Types.F# ipv2 ->
                   case GHC.Float.$fNumFloat_$csignum d of dt4 { GHC.Types.F# ipv3 ->
                   Linear.V4.V4 @ GHC.Types.Float dt1 dt2 dt3 dt4 } } } } })
                  (\ (eta :: GHC.Integer.Type.Integer) ->
                   let {
                     a1 :: GHC.Types.Float
                     = case GHC.Integer.Type.floatFromInteger eta of wild { DEFAULT ->
                       GHC.Types.F# wild }
                   } in
                   Linear.V4.$WV4 @ GHC.Types.Float a1 a1 a1 a1) -}
411246be6cad02cb346fefcc9a0d11f8
  $s$fNumV4_$c* ::
    Linear.V4.V4 GHC.Types.Float
    -> Linear.V4.V4 GHC.Types.Float -> Linear.V4.V4 GHC.Types.Float
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SSSS),1*U(U(U),U(U),U(U),U(U))><S(SSSS),1*U(U(U),U(U),U(U),U(U))>m,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Linear.V4.V4 GHC.Types.Float)
                   (eta1 :: Linear.V4.V4 GHC.Types.Float) ->
                 Linear.V4.$fAdditiveV4_$sliftA2
                   @ GHC.Types.Float
                   @ GHC.Types.Float
                   @ GHC.Types.Float
                   GHC.Float.$fNumFloat_$c*
                   eta
                   eta1) -}
9d0b77e698dab1a0f10369a9c75bf82b
  $s$fNumV4_$c+ ::
    Linear.V4.V4 GHC.Types.Float
    -> Linear.V4.V4 GHC.Types.Float -> Linear.V4.V4 GHC.Types.Float
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SSSS),1*U(U(U),U(U),U(U),U(U))><S(SSSS),1*U(U(U),U(U),U(U),U(U))>m,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Linear.V4.V4 GHC.Types.Float)
                   (eta1 :: Linear.V4.V4 GHC.Types.Float) ->
                 Linear.V4.$fAdditiveV4_$sliftA2
                   @ GHC.Types.Float
                   @ GHC.Types.Float
                   @ GHC.Types.Float
                   GHC.Float.$fNumFloat_$c+
                   eta
                   eta1) -}
58d1e2a1af1a9556919b820011485ba9
  $s$fNumV4_$c- ::
    Linear.V4.V4 GHC.Types.Float
    -> Linear.V4.V4 GHC.Types.Float -> Linear.V4.V4 GHC.Types.Float
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SSSS),1*U(U(U),U(U),U(U),U(U))><S(SSSS),1*U(U(U),U(U),U(U),U(U))>m,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Linear.V4.V4 GHC.Types.Float)
                   (eta1 :: Linear.V4.V4 GHC.Types.Float) ->
                 Linear.V4.$fAdditiveV4_$sliftA2
                   @ GHC.Types.Float
                   @ GHC.Types.Float
                   @ GHC.Types.Float
                   GHC.Float.$fNumFloat_$c-
                   eta
                   eta1) -}
445e5f56fc46fd7d3acf85c2a50ad3d8
  $s$fNumV4_$cfromInteger ::
    GHC.Integer.Type.Integer -> Linear.V4.V4 GHC.Types.Float
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: GHC.Integer.Type.Integer) ->
                 let {
                   a1 :: GHC.Types.Float
                   = case GHC.Integer.Type.floatFromInteger eta of wild { DEFAULT ->
                     GHC.Types.F# wild }
                 } in
                 Linear.V4.$WV4 @ GHC.Types.Float a1 a1 a1 a1) -}
4fe07a90bd2393ce638eb962fa61be61
  $s$fNumV4_$cnegate ::
    Linear.V4.V4 GHC.Types.Float -> Linear.V4.V4 GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SSSS),1*U(U(U),U(U),U(U),U(U))>m,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Linear.V4.V4 GHC.Types.Float) ->
                 case eta of wild { Linear.V4.V4 a1 b c d ->
                 case GHC.Float.$fNumFloat_$cnegate a1 of dt1 { GHC.Types.F# ipv ->
                 case GHC.Float.$fNumFloat_$cnegate b of dt2 { GHC.Types.F# ipv1 ->
                 case GHC.Float.$fNumFloat_$cnegate c of dt3 { GHC.Types.F# ipv2 ->
                 case GHC.Float.$fNumFloat_$cnegate d of dt4 { GHC.Types.F# ipv3 ->
                 Linear.V4.V4 @ GHC.Types.Float dt1 dt2 dt3 dt4 } } } } }) -}
34e679a8634ea9ed41a06d599df4b5a9
  $s$fStorableV2 ::
    Foreign.Storable.Storable (Linear.V2.V2 GHC.Types.Float)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Linear.V2.V2 GHC.Types.Float)
                  Graphics.UIKit.$s$fStorableV2_$s$fStorableV2_$csizeOf
                  Graphics.UIKit.$s$fStorableV2_$s$fStorableV2_$calignment
                  (Linear.V2.$fStorableV2_$cpeekElemOff
                     @ GHC.Types.Float
                     Foreign.Storable.$fStorableFloat)
                  (Linear.V2.$fStorableV2_$cpokeElemOff
                     @ GHC.Types.Float
                     Foreign.Storable.$fStorableFloat)
                  (Linear.V2.$fStorableV2_$cpeekByteOff
                     @ GHC.Types.Float
                     Foreign.Storable.$fStorableFloat)
                  (Linear.V2.$fStorableV2_$cpokeByteOff
                     @ GHC.Types.Float
                     Foreign.Storable.$fStorableFloat)
                  Graphics.UIKit.$s$fStorableV2_$s$fStorableV2_$cpeek
                  Graphics.UIKit.$s$fStorableV2_$s$fStorableV2_$cpoke -}
48e1bd0c61f19df9f6f57b1061eac47b
  $s$fStorableV2_$s$fStorableV2_$calignment ::
    Linear.V2.V2 GHC.Types.Float -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (let {
                   loc :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString#
                          @ b
                          "linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p"#)
                 } in
                 let {
                   loc1 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b -> GHC.CString.unpackFoldrCString# @ b "Linear.V2"#)
                 } in
                 let {
                   loc2 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString# @ b "src\\Linear\\V2.hs"#)
                 } in
                 let {
                   loc3 :: GHC.Types.Int = GHC.Types.I# 301#
                 } in
                 let {
                   loc4 :: GHC.Types.Int = GHC.Types.I# 28#
                 } in
                 let {
                   loc5 :: GHC.Types.Int = GHC.Types.I# 301#
                 } in
                 let {
                   loc6 :: GHC.Types.Int = GHC.Types.I# 37#
                 } in
                 let {
                   $dIP :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b -> GHC.CString.unpackFoldrCString# @ b "undefined"#)
                 } in
                 let {
                   $dIP1 :: GHC.Stack.Types.SrcLoc
                   = GHC.Stack.Types.SrcLoc loc loc1 loc2 loc3 loc4 loc5 loc6
                 } in
                 let {
                   $dIP2 :: GHC.Stack.Types.CallStack
                   = GHC.Stack.Types.PushCallStack
                       $dIP
                       $dIP1
                       GHC.Stack.Types.EmptyCallStack
                 } in
                 \ (ds :: Linear.V2.V2 GHC.Types.Float) ->
                 Foreign.Storable.$fStorableFloat_$calignment
                   (GHC.Err.undefined
                      @ 'GHC.Types.PtrRepLifted
                      @ GHC.Types.Float
                      $dIP2
                        `cast`
                      (Sym (GHC.Classes.N:IP[0]
                                <"callStack">_N <GHC.Stack.Types.CallStack>_N)))) -}
eff3c4fa1caa80f83944f49e5a94594a
  $s$fStorableV2_$s$fStorableV2_$cpeek ::
    GHC.Ptr.Ptr (Linear.V2.V2 GHC.Types.Float)
    -> GHC.Types.IO (Linear.V2.V2 GHC.Types.Float)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ (ptr :: GHC.Ptr.Ptr (Linear.V2.V2 GHC.Types.Float))
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   ptr' :: GHC.Ptr.Ptr GHC.Types.Float
                   = GHC.Ptr.castPtr
                       @ (Linear.V2.V2 GHC.Types.Float)
                       @ GHC.Types.Float
                       ptr
                 } in
                 (GHC.Base.$fApplicativeIO_$sap
                    @ GHC.Types.Float
                    @ (Linear.V2.V2 GHC.Types.Float)
                    (Linear.V2.$fStorableV2_$s<$>
                       @ GHC.Types.Float
                       @ (GHC.Types.Float -> Linear.V2.V2 GHC.Types.Float)
                       (Linear.V2.$WV2 @ GHC.Types.Float)
                       (Foreign.Storable.$fStorableFloat_$cpeek ptr'))
                    (GHC.Storable.readFloatOffPtr ptr' (GHC.Types.I# 1#)))
                   `cast`
                 (GHC.Types.N:IO[0] <Linear.V2.V2 GHC.Types.Float>_R)
                   eta)
                  `cast`
                (<GHC.Ptr.Ptr (Linear.V2.V2 GHC.Types.Float)>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Linear.V2.V2 GHC.Types.Float>_R)) -}
9ec41c7a04b748da65c86559f4720167
  $s$fStorableV2_$s$fStorableV2_$cpoke ::
    GHC.Ptr.Ptr (Linear.V2.V2 GHC.Types.Float)
    -> Linear.V2.V2 GHC.Types.Float -> GHC.Types.IO ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S(S)S(S)),1*U(U(U),U(U))><S,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (ptr :: GHC.Ptr.Ptr (Linear.V2.V2 GHC.Types.Float))
                   (ds :: Linear.V2.V2 GHC.Types.Float)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild { Linear.V2.V2 x y ->
                 let {
                   ptr' :: GHC.Ptr.Ptr GHC.Types.Float
                   = GHC.Ptr.castPtr
                       @ (Linear.V2.V2 GHC.Types.Float)
                       @ GHC.Types.Float
                       ptr
                 } in
                 (GHC.Base.thenIO
                    @ ()
                    @ ()
                    (Foreign.Storable.$fStorableFloat_$cpoke ptr' x)
                    (GHC.Storable.writeFloatOffPtr ptr' (GHC.Types.I# 1#) y))
                   `cast`
                 (GHC.Types.N:IO[0] <()>_R)
                   eta })
                  `cast`
                (<GHC.Ptr.Ptr (Linear.V2.V2 GHC.Types.Float)>_R
                 ->_R <Linear.V2.V2 GHC.Types.Float>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
3d1971ae8c11f393864c901f075bdd34
  $s$fStorableV2_$s$fStorableV2_$csizeOf ::
    Linear.V2.V2 GHC.Types.Float -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (let {
                   loc :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString#
                          @ b
                          "linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p"#)
                 } in
                 let {
                   loc1 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b -> GHC.CString.unpackFoldrCString# @ b "Linear.V2"#)
                 } in
                 let {
                   loc2 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString# @ b "src\\Linear\\V2.hs"#)
                 } in
                 let {
                   loc3 :: GHC.Types.Int = GHC.Types.I# 299#
                 } in
                 let {
                   loc4 :: GHC.Types.Int = GHC.Types.I# 26#
                 } in
                 let {
                   loc5 :: GHC.Types.Int = GHC.Types.I# 299#
                 } in
                 let {
                   loc6 :: GHC.Types.Int = GHC.Types.I# 35#
                 } in
                 let {
                   $dIP :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b -> GHC.CString.unpackFoldrCString# @ b "undefined"#)
                 } in
                 let {
                   $dIP1 :: GHC.Stack.Types.SrcLoc
                   = GHC.Stack.Types.SrcLoc loc loc1 loc2 loc3 loc4 loc5 loc6
                 } in
                 let {
                   $dIP2 :: GHC.Stack.Types.CallStack
                   = GHC.Stack.Types.PushCallStack
                       $dIP
                       $dIP1
                       GHC.Stack.Types.EmptyCallStack
                 } in
                 \ (ds :: Linear.V2.V2 GHC.Types.Float) ->
                 GHC.Num.$fNumInt_$c*
                   (GHC.Types.I# 2#)
                   (Foreign.Storable.$fStorableFloat_$calignment
                      (GHC.Err.undefined
                         @ 'GHC.Types.PtrRepLifted
                         @ GHC.Types.Float
                         $dIP2
                           `cast`
                         (Sym (GHC.Classes.N:IP[0]
                                   <"callStack">_N <GHC.Stack.Types.CallStack>_N))))) -}
067e1fee7fb7a2172626216cbb13639b
  $s$fStorableV4 ::
    Foreign.Storable.Storable (Linear.V4.V4 GHC.Types.Float)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Linear.V4.V4 GHC.Types.Float)
                  Graphics.UIKit.$s$fStorableV4_$s$fStorableV4_$csizeOf
                  Graphics.UIKit.$s$fStorableV4_$s$fStorableV4_$calignment
                  (Linear.V4.$fStorableV4_$cpeekElemOff
                     @ GHC.Types.Float
                     Foreign.Storable.$fStorableFloat)
                  (Linear.V4.$fStorableV4_$cpokeElemOff
                     @ GHC.Types.Float
                     Foreign.Storable.$fStorableFloat)
                  (Linear.V4.$fStorableV4_$cpeekByteOff
                     @ GHC.Types.Float
                     Foreign.Storable.$fStorableFloat)
                  (Linear.V4.$fStorableV4_$cpokeByteOff
                     @ GHC.Types.Float
                     Foreign.Storable.$fStorableFloat)
                  Graphics.UIKit.$s$fStorableV4_$s$fStorableV4_$cpeek
                  Graphics.UIKit.$s$fStorableV4_$s$fStorableV4_$cpoke -}
9a60357c558996d4f82761df7446f285
  $s$fStorableV4_$s$fStorableV4_$calignment ::
    Linear.V4.V4 GHC.Types.Float -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (let {
                   loc :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString#
                          @ b
                          "linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p"#)
                 } in
                 let {
                   loc1 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b -> GHC.CString.unpackFoldrCString# @ b "Linear.V4"#)
                 } in
                 let {
                   loc2 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString# @ b "src\\Linear\\V4.hs"#)
                 } in
                 let {
                   loc3 :: GHC.Types.Int = GHC.Types.I# 431#
                 } in
                 let {
                   loc4 :: GHC.Types.Int = GHC.Types.I# 28#
                 } in
                 let {
                   loc5 :: GHC.Types.Int = GHC.Types.I# 431#
                 } in
                 let {
                   loc6 :: GHC.Types.Int = GHC.Types.I# 37#
                 } in
                 let {
                   $dIP :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b -> GHC.CString.unpackFoldrCString# @ b "undefined"#)
                 } in
                 let {
                   $dIP1 :: GHC.Stack.Types.SrcLoc
                   = GHC.Stack.Types.SrcLoc loc loc1 loc2 loc3 loc4 loc5 loc6
                 } in
                 let {
                   $dIP2 :: GHC.Stack.Types.CallStack
                   = GHC.Stack.Types.PushCallStack
                       $dIP
                       $dIP1
                       GHC.Stack.Types.EmptyCallStack
                 } in
                 \ (ds :: Linear.V4.V4 GHC.Types.Float) ->
                 Foreign.Storable.$fStorableFloat_$calignment
                   (GHC.Err.undefined
                      @ 'GHC.Types.PtrRepLifted
                      @ GHC.Types.Float
                      $dIP2
                        `cast`
                      (Sym (GHC.Classes.N:IP[0]
                                <"callStack">_N <GHC.Stack.Types.CallStack>_N)))) -}
a948db0b4234da47b00071051f21f259
  $s$fStorableV4_$s$fStorableV4_$cpeek ::
    GHC.Ptr.Ptr (Linear.V4.V4 GHC.Types.Float)
    -> GHC.Types.IO (Linear.V4.V4 GHC.Types.Float)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ (ptr :: GHC.Ptr.Ptr (Linear.V4.V4 GHC.Types.Float))
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   ptr' :: GHC.Ptr.Ptr GHC.Types.Float
                   = GHC.Ptr.castPtr
                       @ (Linear.V4.V4 GHC.Types.Float)
                       @ GHC.Types.Float
                       ptr
                 } in
                 (GHC.Base.$fApplicativeIO_$sap
                    @ GHC.Types.Float
                    @ (Linear.V4.V4 GHC.Types.Float)
                    (GHC.Base.$fApplicativeIO_$sap
                       @ GHC.Types.Float
                       @ (GHC.Types.Float -> Linear.V4.V4 GHC.Types.Float)
                       (GHC.Base.$fApplicativeIO_$sap
                          @ GHC.Types.Float
                          @ (GHC.Types.Float
                             -> GHC.Types.Float -> Linear.V4.V4 GHC.Types.Float)
                          (Linear.V4.$fStorableV4_$s<$>
                             @ GHC.Types.Float
                             @ (GHC.Types.Float
                                -> GHC.Types.Float
                                -> GHC.Types.Float
                                -> Linear.V4.V4 GHC.Types.Float)
                             (Linear.V4.$WV4 @ GHC.Types.Float)
                             (Foreign.Storable.$fStorableFloat_$cpeek ptr'))
                          (GHC.Storable.readFloatOffPtr ptr' (GHC.Types.I# 1#)))
                       (GHC.Storable.readFloatOffPtr ptr' (GHC.Types.I# 2#)))
                    (GHC.Storable.readFloatOffPtr ptr' (GHC.Types.I# 3#)))
                   `cast`
                 (GHC.Types.N:IO[0] <Linear.V4.V4 GHC.Types.Float>_R)
                   eta)
                  `cast`
                (<GHC.Ptr.Ptr (Linear.V4.V4 GHC.Types.Float)>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Linear.V4.V4 GHC.Types.Float>_R)) -}
ac25a6225c8bec323273096ac38beaef
  $s$fStorableV4_$s$fStorableV4_$cpoke ::
    GHC.Ptr.Ptr (Linear.V4.V4 GHC.Types.Float)
    -> Linear.V4.V4 GHC.Types.Float -> GHC.Types.IO ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S(S)S(S)S(S)S(S)),1*U(U(U),U(U),U(U),U(U))><S,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (ptr :: GHC.Ptr.Ptr (Linear.V4.V4 GHC.Types.Float))
                   (ds :: Linear.V4.V4 GHC.Types.Float)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild { Linear.V4.V4 x y z w ->
                 let {
                   ptr' :: GHC.Ptr.Ptr GHC.Types.Float
                   = GHC.Ptr.castPtr
                       @ (Linear.V4.V4 GHC.Types.Float)
                       @ GHC.Types.Float
                       ptr
                 } in
                 (GHC.Base.thenIO
                    @ ()
                    @ ()
                    (Foreign.Storable.$fStorableFloat_$cpoke ptr' x)
                    (GHC.Base.thenIO
                       @ ()
                       @ ()
                       (GHC.Storable.writeFloatOffPtr ptr' (GHC.Types.I# 1#) y)
                       (GHC.Base.thenIO
                          @ ()
                          @ ()
                          (GHC.Storable.writeFloatOffPtr ptr' (GHC.Types.I# 2#) z)
                          (GHC.Storable.writeFloatOffPtr ptr' (GHC.Types.I# 3#) w))))
                   `cast`
                 (GHC.Types.N:IO[0] <()>_R)
                   eta })
                  `cast`
                (<GHC.Ptr.Ptr (Linear.V4.V4 GHC.Types.Float)>_R
                 ->_R <Linear.V4.V4 GHC.Types.Float>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
43618cafba485a8025d6d199c89d1946
  $s$fStorableV4_$s$fStorableV4_$csizeOf ::
    Linear.V4.V4 GHC.Types.Float -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (let {
                   loc :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString#
                          @ b
                          "linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p"#)
                 } in
                 let {
                   loc1 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b -> GHC.CString.unpackFoldrCString# @ b "Linear.V4"#)
                 } in
                 let {
                   loc2 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString# @ b "src\\Linear\\V4.hs"#)
                 } in
                 let {
                   loc3 :: GHC.Types.Int = GHC.Types.I# 429#
                 } in
                 let {
                   loc4 :: GHC.Types.Int = GHC.Types.I# 26#
                 } in
                 let {
                   loc5 :: GHC.Types.Int = GHC.Types.I# 429#
                 } in
                 let {
                   loc6 :: GHC.Types.Int = GHC.Types.I# 35#
                 } in
                 let {
                   $dIP :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b -> GHC.CString.unpackFoldrCString# @ b "undefined"#)
                 } in
                 let {
                   $dIP1 :: GHC.Stack.Types.SrcLoc
                   = GHC.Stack.Types.SrcLoc loc loc1 loc2 loc3 loc4 loc5 loc6
                 } in
                 let {
                   $dIP2 :: GHC.Stack.Types.CallStack
                   = GHC.Stack.Types.PushCallStack
                       $dIP
                       $dIP1
                       GHC.Stack.Types.EmptyCallStack
                 } in
                 \ (ds :: Linear.V4.V4 GHC.Types.Float) ->
                 GHC.Num.$fNumInt_$c*
                   (GHC.Types.I# 4#)
                   (Foreign.Storable.$fStorableFloat_$calignment
                      (GHC.Err.undefined
                         @ 'GHC.Types.PtrRepLifted
                         @ GHC.Types.Float
                         $dIP2
                           `cast`
                         (Sym (GHC.Classes.N:IP[0]
                                   <"callStack">_N <GHC.Stack.Types.CallStack>_N))))) -}
1bc0c644a79ac7bca666129968d4a373
  $sdelete_$sgo1 ::
    Graphics.UI.GLFW.Types.Key
    -> Data.Set.Base.Set Graphics.UI.GLFW.Types.Key
    -> Data.Set.Base.Set Graphics.UI.GLFW.Types.Key
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
bc0847742dca10c3a12346f61363122c
  $sdelete_$sgo5 ::
    Graphics.UI.GLFW.Types.MouseButton
    -> Data.Set.Base.Set Graphics.UI.GLFW.Types.MouseButton
    -> Data.Set.Base.Set Graphics.UI.GLFW.Types.MouseButton
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
219ecd4bed7fd1d358da9cf539f96b5a
  $sel:fButtons:Mouse ::
    Graphics.UIKit.Mouse
    -> Data.Set.Base.Set Graphics.UI.GLFW.Types.MouseButton
  RecSel Left Graphics.UIKit.Mouse
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UIKit.Mouse) ->
                 case ds of wild { Graphics.UIKit.Mouse ds1 ds2 -> ds2 }) -}
7ef94a349ab73bf2d861665f3c540278
  $sel:fCursor:Mouse ::
    Graphics.UIKit.Mouse -> Linear.V2.V2 GHC.Types.Double
  RecSel Left Graphics.UIKit.Mouse
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UIKit.Mouse) ->
                 case ds of wild { Graphics.UIKit.Mouse ds1 ds2 -> ds1 }) -}
9a2e0d1ad9a187b6d622b2631b97559d
  $sel:fFrameSize:Input ::
    Graphics.UIKit.Input -> Linear.V2.V2 GHC.Types.Int
  RecSel Left Graphics.UIKit.Input
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,1*U(U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UIKit.Input) ->
                 case ds of wild { Graphics.UIKit.Input ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds3 }) -}
df98fd5cbd0d4a8e8e95968df7c868e9
  $sel:fKeyboard:Input ::
    Graphics.UIKit.Input
    -> Data.Set.Base.Set Graphics.UI.GLFW.Types.Key
  RecSel Left Graphics.UIKit.Input
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UIKit.Input) ->
                 case ds of wild { Graphics.UIKit.Input ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds5 }) -}
d56608723d711644739592aa2d7d6c4c
  $sel:fMouse:Input :: Graphics.UIKit.Input -> Graphics.UIKit.Mouse
  RecSel Left Graphics.UIKit.Input
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,1*U(U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UIKit.Input) ->
                 case ds of wild { Graphics.UIKit.Input ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds4 }) -}
7b7dd76195980944a0bdc8e3dc6353ad
  $sel:fScroll:Input ::
    Graphics.UIKit.Input -> Linear.V2.V2 GHC.Types.Double
  RecSel Left Graphics.UIKit.Input
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U(U,U),A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UIKit.Input) ->
                 case ds of wild { Graphics.UIKit.Input ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds1 }) -}
835fa4992680722d8737fba79e1966c4
  $sel:fTime:Input :: Graphics.UIKit.Input -> GHC.Types.Double
  RecSel Left Graphics.UIKit.Input
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UIKit.Input) ->
                 case ds of wild { Graphics.UIKit.Input ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds6 }) -}
c97f7c36b95fdf285bafe7641de96ad6
  $sel:fWindowRect:Input ::
    Graphics.UIKit.Input -> Data.AABB.AABB Linear.V2.V2 GHC.Types.Int
  RecSel Left Graphics.UIKit.Input
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,1*U(U,U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UIKit.Input) ->
                 case ds of wild { Graphics.UIKit.Input ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds2 }) -}
f5a6f93561363305150c673255e3f539
  $sinsert_$sgo1 ::
    Graphics.UI.GLFW.Types.Key
    -> Data.Set.Base.Set Graphics.UI.GLFW.Types.Key
    -> Data.Set.Base.Set Graphics.UI.GLFW.Types.Key
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
3a98eccce6d72b09850854eeb03fa7ec
  $sinsert_$sgo5 ::
    Graphics.UI.GLFW.Types.MouseButton
    -> Data.Set.Base.Set Graphics.UI.GLFW.Types.MouseButton
    -> Data.Set.Base.Set Graphics.UI.GLFW.Types.MouseButton
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
c696d21bf3720effd3b3113804ae137b
  $srenderDrawing2 ::
    (Codec.Picture.Types.Pixel Codec.Picture.Types.PixelRGBA8,
     Codec.Picture.Types.PackeablePixel Codec.Picture.Types.PixelRGBA8,
     Graphics.Rasterific.Compositor.InterpolablePixel
       Codec.Picture.Types.PixelRGBA8,
     Graphics.Rasterific.Compositor.InterpolablePixel GHC.Word.Word8,
     Foreign.Storable.Storable GHC.Word.Word32,
     Graphics.Rasterific.Compositor.Modulable GHC.Word.Word8)
  {- Unfolding: ((Codec.Picture.Types.$fPixelPixelRGBA8,
                  Codec.Picture.Types.$fPackeablePixelPixelRGBA8,
                  Graphics.Rasterific.Compositor.$fInterpolablePixelPixelRGBA8,
                  Graphics.Rasterific.Compositor.$fInterpolablePixelWord8,
                  Foreign.Storable.$fStorableWord32,
                  Graphics.Rasterific.Compositor.$fModulableWord8)) -}
f1bd13794f789d98eeb5910dd1c1594c
  $tc'ByteStringSource :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6396849634074952626##
                   2702579363966341897##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tc'ByteStringSource1) -}
758a0e705245feeae92b681821e9df70
  $tc'ByteStringSource1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ByteStringSource"#) -}
3d848f76a95dc1a89a75d8a284a1b5e9
  $tc'Descriptor :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8337128699628032899##
                   3642060779819823334##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tc'Descriptor1) -}
4a4cc1d169c946922851bb8000e1623d
  $tc'Descriptor1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Descriptor"#) -}
e707daed7a7c0608c274b59aa4bd0e85
  $tc'FileDrop :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6810184897782768246##
                   7316715551986069873##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tc'FileDrop1) -}
1700f8b0c33eda478d5a3f92e9bcfa49
  $tc'FileDrop1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FileDrop"#) -}
9b38a7eacc9c0575997a471cf6d97ffb
  $tc'FileSource :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1124685122314341339##
                   15101933025095107574##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tc'FileSource1) -}
cf7c499179563dd7ade5dad44511535b
  $tc'FileSource1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FileSource"#) -}
336c485ba07b123de6d86b60b37ca318
  $tc'Input :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8487569403435035361##
                   980814426833236313##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tc'Input1) -}
e9ae98fc16b1f070f4660f4103a80c37
  $tc'Input1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Input"#) -}
c1e4351defd15067bdcf0b82ffe1f895
  $tc'KeyDown :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17839050015539359474##
                   10207063846706853628##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tc'KeyDown1) -}
7fa46ab37327ba85bc4d031cf91fd772
  $tc'KeyDown1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'KeyDown"#) -}
603a97787b8986b78abd280b52e3c64c
  $tc'KeyRepeat :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9722662514097597802##
                   3476853718713954559##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tc'KeyRepeat1) -}
1f33f6fb85659ceda49ee072a562f778
  $tc'KeyRepeat1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'KeyRepeat"#) -}
52e220858c01bdfc9037c90d65b10b0d
  $tc'KeyUp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13201933918829328756##
                   4281177572461613571##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tc'KeyUp1) -}
d1b046eb402a170addcfbe31970a4201
  $tc'KeyUp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'KeyUp"#) -}
d32b212b4e696e988dfbf619845386ea
  $tc'Mouse :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3489663479125451813##
                   6008214535477860073##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tc'Mouse1) -}
11b289a837a7f96aea7f9d502b629002
  $tc'Mouse1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Mouse"#) -}
5b431d66d50f8baff52bf96faafa6011
  $tc'MouseDown :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14277344273216483359##
                   14173987853073057045##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tc'MouseDown1) -}
8b82c9798ddcc895d979aa9eb917fd97
  $tc'MouseDown1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MouseDown"#) -}
40359f37abf991575ab574a289d98227
  $tc'MouseEnter :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2667830243256904442##
                   13114008673738365178##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tc'MouseEnter1) -}
63cee501301e42fcc523dd94a36d040c
  $tc'MouseEnter1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MouseEnter"#) -}
96b322ab374ea265fee98808b8b77664
  $tc'MouseLeave :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6577098381220235574##
                   11846351336635199615##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tc'MouseLeave1) -}
882bc45fd5f7663e276f8af663ca7495
  $tc'MouseLeave1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MouseLeave"#) -}
d18470fc1403149c2bbef1d5617e58ef
  $tc'MouseMotion :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6974436686107816664##
                   600664586188009230##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tc'MouseMotion1) -}
195902beef30b81ad548b80de30ec6ed
  $tc'MouseMotion1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MouseMotion"#) -}
b1381bfa50d7143cacf0961568d3a78c
  $tc'MouseScroll :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5661883475692246069##
                   7804189125796023285##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tc'MouseScroll1) -}
ed6be90b04c61db011170a047b826aa1
  $tc'MouseScroll1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MouseScroll"#) -}
ba42689f1f57d956af744be20732fca0
  $tc'MouseUp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10625540476565863942##
                   1441570755934754433##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tc'MouseUp1) -}
380f92854801235b910ebb8897f61082
  $tc'MouseUp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MouseUp"#) -}
6b3af1b00c8109a24d8f836e8d931acc
  $tc'ShaderInfo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3385408650136669365##
                   7172274214881653682##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tc'ShaderInfo1) -}
b7229a283c66b837674b493c1bb31d19
  $tc'ShaderInfo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ShaderInfo"#) -}
3c8919fc262afdbb2d5788a4e07b7945
  $tc'StringSource :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13342033072188099545##
                   5203377640056793934##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tc'StringSource1) -}
fa0e5bfbc1ea6c3dbd378de97e680642
  $tc'StringSource1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'StringSource"#) -}
6b4d10774c83bc8a16052e9e70bfd398
  $tc'WindowClosing :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15247700809610340227##
                   5760951479491999128##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tc'WindowClosing1) -}
fdb2691f177230339327305da7966e9b
  $tc'WindowClosing1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'WindowClosing"#) -}
09197627c08d98c2a59061f5321aea07
  $tcDescriptor :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5384763776167381399##
                   10914724511277131592##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tcDescriptor1) -}
7b40e2598e4ee61d7ecc59748bb3b356
  $tcDescriptor1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Descriptor"#) -}
6ee4aef6774a752dac9db7122d52b0e8
  $tcInput :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3450552966397485861##
                   16558016518404681730##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tcInput1) -}
df22c8065058916de1eb87aea48945d4
  $tcInput1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Input"#) -}
8976b40cf32b464c53f78df86e68bb88
  $tcMouse :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10252617328881814073##
                   6774702610294816280##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tcMouse1) -}
8705830f7560b9da0a824d345bfe29bc
  $tcMouse1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Mouse"#) -}
61d58ac57388387b7f5c263469f41347
  $tcShaderInfo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13687945916986571261##
                   12002493511641358145##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tcShaderInfo1) -}
e952ef067710be18f9c604ffbd7c2a12
  $tcShaderInfo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ShaderInfo"#) -}
c4023489dea4edcb75fe383136a40c77
  $tcShaderSource :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8801555511160749741##
                   8821626064490016489##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tcShaderSource1) -}
b1223eb65010ec118614724d9656efa6
  $tcShaderSource1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ShaderSource"#) -}
8d200695ff18af4bdd20b386dfa54fc0
  $tcSystemEvent :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12462572763427836709##
                   9786612110824324534##
                   Graphics.UIKit.$trModule
                   Graphics.UIKit.$tcSystemEvent1) -}
bac9fe30d5c0dfba6e791dca698234f1
  $tcSystemEvent1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "SystemEvent"#) -}
865a1273d59cb5b611cd7296111483fb
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Graphics.UIKit.$trModule2
                   Graphics.UIKit.$trModule1) -}
a42a91b0715431d12bae8f1b431cc87f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Graphics.UIKit"#) -}
dfa42f8b4f677b8f94b780825b01717e
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "interface-glfw-0.1.0.0-BLykekl02VdLVEqRoTHVes"#) -}
26d28fbafc65c25d013d8b448e26b429
  $w$c< ::
    Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType
    -> Graphics.UIKit.ShaderSource
    -> Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType
    -> Graphics.UIKit.ShaderSource
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType)
                   (ww1 :: Graphics.UIKit.ShaderSource)
                   (ww2 :: Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType)
                   (ww3 :: Graphics.UIKit.ShaderSource) ->
                 case ww of wild {
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.VertexShader
                   -> case ww2 of wild1 {
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.VertexShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c<1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessControlShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.True }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessControlShader
                   -> case ww2 of wild1 {
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.VertexShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessControlShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c<1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.True }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c<1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.True }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c<1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.True }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c<1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.True }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c<1 ww1 ww3 } }) -}
10bb716336cf0a424403fccfa26093df
  $w$c<= ::
    Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType
    -> Graphics.UIKit.ShaderSource
    -> Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType
    -> Graphics.UIKit.ShaderSource
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType)
                   (ww1 :: Graphics.UIKit.ShaderSource)
                   (ww2 :: Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType)
                   (ww3 :: Graphics.UIKit.ShaderSource) ->
                 case ww of wild {
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.VertexShader
                   -> case ww2 of wild1 {
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.VertexShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c<=1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessControlShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.True }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessControlShader
                   -> case ww2 of wild1 {
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.VertexShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessControlShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c<=1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.True }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c<=1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.True }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c<=1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.True }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c<=1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.True }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c<=1 ww1 ww3 } }) -}
f1493d6af6dcabbb9d657c239ec8421c
  $w$c== ::
    GHC.Prim.Word#
    -> Graphics.Rendering.OpenGL.GL.VertexArrays.ArrayIndex
    -> Graphics.Rendering.OpenGL.GL.VertexArrays.NumArrayIndices
    -> GHC.Prim.Word#
    -> Graphics.Rendering.OpenGL.GL.VertexArrays.ArrayIndex
    -> Graphics.Rendering.OpenGL.GL.VertexArrays.NumArrayIndices
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Word#)
                   (ww1 :: Graphics.Rendering.OpenGL.GL.VertexArrays.ArrayIndex)
                   (ww2 :: Graphics.Rendering.OpenGL.GL.VertexArrays.NumArrayIndices)
                   (ww3 :: GHC.Prim.Word#)
                   (ww4 :: Graphics.Rendering.OpenGL.GL.VertexArrays.ArrayIndex)
                   (ww5 :: Graphics.Rendering.OpenGL.GL.VertexArrays.NumArrayIndices) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# ww ww3) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case ww1 of wild1 { GHC.Int.I32# x ->
                      case ww4 of wild2 { GHC.Int.I32# y ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# x y) of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True -> GHC.Int.eqInt32 ww2 ww5 } } } }) -}
38965d01acf3d12f583a62f874552a6e
  $w$c==1 ::
    Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType
    -> Graphics.UIKit.ShaderSource
    -> Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType
    -> Graphics.UIKit.ShaderSource
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType)
                   (ww1 :: Graphics.UIKit.ShaderSource)
                   (ww2 :: Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType)
                   (ww3 :: Graphics.UIKit.ShaderSource) ->
                 case ww of wild {
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.VertexShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.VertexShader
                        -> Graphics.UIKit.$fEqShaderInfo_$c==1 ww1 ww3 }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessControlShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessControlShader
                        -> Graphics.UIKit.$fEqShaderInfo_$c==1 ww1 ww3 }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                        -> Graphics.UIKit.$fEqShaderInfo_$c==1 ww1 ww3 }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> Graphics.UIKit.$fEqShaderInfo_$c==1 ww1 ww3 }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> Graphics.UIKit.$fEqShaderInfo_$c==1 ww1 ww3 }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> Graphics.UIKit.$fEqShaderInfo_$c==1 ww1 ww3 } }) -}
99e61474947c26faa6258d7538d3a1df
  $w$c> ::
    Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType
    -> Graphics.UIKit.ShaderSource
    -> Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType
    -> Graphics.UIKit.ShaderSource
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType)
                   (ww1 :: Graphics.UIKit.ShaderSource)
                   (ww2 :: Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType)
                   (ww3 :: Graphics.UIKit.ShaderSource) ->
                 case ww of wild {
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.VertexShader
                   -> case ww2 of wild1 {
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.VertexShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c>1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessControlShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.False }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessControlShader
                   -> case ww2 of wild1 {
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.VertexShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessControlShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c>1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.False }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c>1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.False }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c>1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.False }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c>1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.False }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c>1 ww1 ww3 } }) -}
045e2ef23b6574503a782382b0483304
  $w$c>= ::
    Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType
    -> Graphics.UIKit.ShaderSource
    -> Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType
    -> Graphics.UIKit.ShaderSource
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType)
                   (ww1 :: Graphics.UIKit.ShaderSource)
                   (ww2 :: Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType)
                   (ww3 :: Graphics.UIKit.ShaderSource) ->
                 case ww of wild {
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.VertexShader
                   -> case ww2 of wild1 {
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.VertexShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c>=1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessControlShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.False }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessControlShader
                   -> case ww2 of wild1 {
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.VertexShader
                        -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessControlShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c>=1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.False }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c>=1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.False }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c>=1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.False
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.False }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c>=1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.False }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.True
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$c>=1 ww1 ww3 } }) -}
52a650ed2395b23f5679cbaf78f23ac4
  $w$ccompare ::
    Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType
    -> Graphics.UIKit.ShaderSource
    -> Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType
    -> Graphics.UIKit.ShaderSource
    -> GHC.Types.Ordering
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType)
                   (ww1 :: Graphics.UIKit.ShaderSource)
                   (ww2 :: Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType)
                   (ww3 :: Graphics.UIKit.ShaderSource) ->
                 case ww of wild {
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.VertexShader
                   -> case ww2 of wild1 {
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.VertexShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$ccompare1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessControlShader
                        -> GHC.Types.LT
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                        -> GHC.Types.LT
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> GHC.Types.LT
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.LT
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.LT }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessControlShader
                   -> case ww2 of wild1 {
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.VertexShader
                        -> GHC.Types.GT
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessControlShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$ccompare1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                        -> GHC.Types.LT
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> GHC.Types.LT
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.LT
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.LT }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.TessEvaluationShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$ccompare1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> GHC.Types.LT
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.LT
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.LT }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.GeometryShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$ccompare1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> GHC.Types.LT
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.LT }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.FragmentShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$ccompare1 ww1 ww3
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> GHC.Types.LT }
                   Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ComputeShader
                        -> Graphics.UIKit.$fOrdShaderInfo_$ccompare1 ww1 ww3 } }) -}
9854b7eae3b5d59302284b75a727722d
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Graphics.Rendering.OpenGL.GL.VertexArrayObjects.VertexArrayObject
    -> Graphics.Rendering.OpenGL.GL.VertexArrays.ArrayIndex
    -> Graphics.Rendering.OpenGL.GL.VertexArrays.NumArrayIndices
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Graphics.Rendering.OpenGL.GL.VertexArrayObjects.VertexArrayObject)
                   (ww2 :: Graphics.Rendering.OpenGL.GL.VertexArrays.ArrayIndex)
                   (ww3 :: Graphics.Rendering.OpenGL.GL.VertexArrays.NumArrayIndices)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Graphics.UIKit.$fShowDescriptor2
                       (Graphics.Rendering.OpenGL.GL.VertexArrayObjects.$w$cshowsPrec
                          11#
                          ww1
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.showSpace1
                             (case ww2 of wild { GHC.Int.I32# x# ->
                              case GHC.Show.$wshowSignedInt
                                     11#
                                     x#
                                     (GHC.Types.:
                                        @ GHC.Types.Char
                                        GHC.Show.showSpace1
                                        (case ww3 of wild1 { GHC.Int.I32# x#1 ->
                                         case GHC.Show.$wshowSignedInt
                                                11#
                                                x#1
                                                x of ww4 { (#,#) ww5 ww6 ->
                                         GHC.Types.:
                                           @ GHC.Types.Char
                                           ww5
                                           ww6 } })) of ww4 { (#,#) ww5 ww6 ->
                              GHC.Types.: @ GHC.Types.Char ww5 ww6 } })))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w)) }) -}
b54b9ad14d985c6453c1f8bddb53585b
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Linear.V2.V2 GHC.Types.Double
    -> Data.Set.Base.Set Graphics.UI.GLFW.Types.MouseButton
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,U><L,1*U(U,U)><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Linear.V2.V2 GHC.Types.Double)
                   (ww2 :: Data.Set.Base.Set Graphics.UI.GLFW.Types.MouseButton) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = case ww1 of ww3 { Linear.V2.V2 ww4 ww5 ->
                     Linear.V2.$w$cshowsPrec
                       @ GHC.Types.Double
                       GHC.Float.$fShowDouble
                       0#
                       ww4
                       ww5 }
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = Data.Set.Base.$w$cshowsPrec
                       @ Graphics.UI.GLFW.Types.MouseButton
                       Graphics.UI.GLFW.Types.$fShowMouseButton
                       0#
                       ww2
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Graphics.UIKit.$fShowMouse6
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Graphics.UIKit.$fShowMouse5
                          (f (GHC.Base.++
                                @ GHC.Types.Char
                                Graphics.UIKit.$fShowMouse4
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Graphics.UIKit.$fShowMouse3
                                   (f1
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Graphics.UIKit.$fShowMouse2
                                         x))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p
                   GHC.Types.True
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x)) }) -}
fcfb9125051725874d8d6df27e4efe71
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType
    -> Graphics.UIKit.ShaderSource
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType)
                   (ww2 :: Graphics.UIKit.ShaderSource)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Graphics.UIKit.$fShowShaderInfo5
                       (Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.$w$cshowsPrec1
                          ww1
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.showSpace1
                             (Graphics.UIKit.$w$cshowsPrec3 11# ww2 x)))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w)) }) -}
7d46bb45c803e58998d7c73baeb8a3ca
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> Graphics.UIKit.ShaderSource
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Graphics.UIKit.ShaderSource)
                   (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Graphics.UIKit.ByteStringSource b1
                   -> let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Base.String)[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            Graphics.UIKit.$fShowShaderInfo4
                            (GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.shows6
                               (case b1 of ww1 { Data.ByteString.Internal.PS ww2 ww3 ww4 ww5 ->
                                GHC.Show.showLitString
                                  (Data.ByteString.Internal.$wunpackAppendCharsLazy
                                     ww2
                                     ww3
                                     ww4
                                     ww5
                                     (GHC.Types.[] @ GHC.Types.Char))
                                  (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x) }))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False -> p w1
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w1)) }
                   Graphics.UIKit.StringSource b1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             Graphics.UIKit.$fShowShaderInfo3
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.shows6
                                (GHC.Show.showLitString
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w1)))
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Graphics.UIKit.$fShowShaderInfo3
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows6
                                   (GHC.Show.showLitString
                                      b1
                                      (GHC.Types.:
                                         @ GHC.Types.Char
                                         GHC.Show.shows6
                                         (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w1))))) }
                   Graphics.UIKit.FileSource b1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             Graphics.UIKit.$fShowShaderInfo2
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.shows6
                                (GHC.Show.showLitString
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w1)))
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Graphics.UIKit.$fShowShaderInfo2
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows6
                                   (GHC.Show.showLitString
                                      b1
                                      (GHC.Types.:
                                         @ GHC.Types.Char
                                         GHC.Show.shows6
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows4
                                            w1))))) } }) -}
a243efa3b1e13d9fab0ccd3969497f51
  $wcompileAndCheck ::
    GHC.Prim.Word#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Word#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Graphics.GL.Functions.F04.ptr_glCompileShader of ds2 { GHC.Ptr.FunPtr ds3 ->
                 case {__dyn_ccall_GC "" GHC.Prim.Addr#
                                         -> GHC.Prim.Word#
                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        ds3
                        ww
                        w of wild { Unit# ds6 ->
                 case GHC.Prim.newAlignedPinnedByteArray#
                        @ GHC.Prim.RealWorld
                        4#
                        4#
                        ds6 of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.unsafeFreezeByteArray#
                        @ GHC.Prim.RealWorld
                        ipv1
                        ipv of ds5 { (#,#) ipv2 ipv3 ->
                 let {
                   ptr :: GHC.Prim.Addr# = GHC.Prim.byteArrayContents# ipv3
                 } in
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        ptr
                        0#
                        0#
                        ipv2 of s2 { DEFAULT ->
                 case Graphics.GL.Functions.F12.ptr_glGetShaderiv of ds4 { GHC.Ptr.FunPtr ds7 ->
                 case {__dyn_ccall_GC "" GHC.Prim.Addr#
                                         -> GHC.Prim.Word#
                                         -> GHC.Prim.Word#
                                         -> GHC.Prim.Addr#
                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        ds7
                        ww
                        35713##
                        ptr
                        s2 of wild1 { Unit# ds12 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        ptr
                        0#
                        ds12 of ds8 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.touch#
                        @ 'GHC.Types.PtrRepUnlifted
                        @ GHC.Prim.ByteArray#
                        ipv3
                        ipv4 of s4 { DEFAULT ->
                 case ipv5 of wild2 {
                   DEFAULT -> (# s4, GHC.Tuple.() #)
                   0#
                   -> case Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.$wshaderInfoLog
                             ww
                             s4 of ds9 { (#,#) ipv7 ipv8 ->
                      GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ ()
                        (GHC.IO.Exception.$fExceptionIOException_$ctoException
                           (GHC.IO.Exception.IOError
                              (GHC.Base.Nothing @ GHC.IO.Handle.Types.Handle)
                              GHC.IO.Exception.UserError
                              (GHC.Types.[] @ GHC.Types.Char)
                              (GHC.Base.++
                                 @ GHC.Types.Char
                                 Graphics.UIKit.compileAndCheck2
                                 (GHC.Base.++ @ GHC.Types.Char Graphics.UIKit.checked2 ipv8))
                              (GHC.Base.Nothing @ Foreign.C.Types.CInt)
                              (GHC.Base.Nothing @ GHC.IO.FilePath)))
                        ipv7 } } } } } } } } } } }) -}
e3776e1c0fd1c10a9c510e4e87e549de
  $wframeBounds ::
    GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Linear.V2.V2 GHC.Types.Int #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newAlignedPinnedByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        4#
                        w of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Prim.unsafeFreezeByteArray#
                        @ GHC.Prim.RealWorld
                        ipv1
                        ipv of ds3 { (#,#) ipv2 ipv3 ->
                 let {
                   p :: GHC.Prim.Addr# = GHC.Prim.byteArrayContents# ipv3
                 } in
                 let {
                   p'h :: GHC.Prim.Addr# = GHC.Prim.plusAddr# p 4#
                 } in
                 case {__pkg_ccall_GC bindings-GLFW-3.1.2.3@bindings-GLFW-3.1.2.3-LUlFmU2NSypHLMkfz76GZS glfwGetFramebufferSize GHC.Prim.Addr#
                                                                                                                                -> GHC.Prim.Addr#
                                                                                                                                -> GHC.Prim.Addr#
                                                                                                                                -> GHC.Prim.State#
                                                                                                                                     GHC.Prim.RealWorld
                                                                                                                                -> (# GHC.Prim.State#
                                                                                                                                        GHC.Prim.RealWorld #)}
                        ww
                        p
                        p'h
                        ipv2 of wild { Unit# ds9 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        p
                        0#
                        ds9 of ds1 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        p'h
                        0#
                        ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                 case GHC.Prim.touch#
                        @ 'GHC.Types.PtrRepUnlifted
                        @ GHC.Prim.ByteArray#
                        ipv3
                        ipv6 of s4 { DEFAULT ->
                 (# s4,
                    Linear.V2.V2
                      @ GHC.Types.Int
                      (GHC.Types.I# ipv5)
                      (GHC.Types.I# ipv7) #) } } } } } }) -}
698032bbb31667f8fcb3982a86f54d13
  $winitial ::
    GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Graphics.UIKit.Input #)
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Graphics.UIKit.$wwindowBounds ww w of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.newAlignedPinnedByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        4#
                        ipv2 of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Prim.unsafeFreezeByteArray#
                        @ GHC.Prim.RealWorld
                        ipv1
                        ipv of ds3 { (#,#) ipv4 ipv5 ->
                 let {
                   p :: GHC.Prim.Addr# = GHC.Prim.byteArrayContents# ipv5
                 } in
                 let {
                   p'h :: GHC.Prim.Addr# = GHC.Prim.plusAddr# p 4#
                 } in
                 case {__pkg_ccall_GC bindings-GLFW-3.1.2.3@bindings-GLFW-3.1.2.3-LUlFmU2NSypHLMkfz76GZS glfwGetFramebufferSize GHC.Prim.Addr#
                                                                                                                                -> GHC.Prim.Addr#
                                                                                                                                -> GHC.Prim.Addr#
                                                                                                                                -> GHC.Prim.State#
                                                                                                                                     GHC.Prim.RealWorld
                                                                                                                                -> (# GHC.Prim.State#
                                                                                                                                        GHC.Prim.RealWorld #)}
                        ww
                        p
                        p'h
                        ipv4 of wild { Unit# ds9 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        p
                        0#
                        ds9 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        p'h
                        0#
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case GHC.Prim.touch#
                        @ 'GHC.Types.PtrRepUnlifted
                        @ GHC.Prim.ByteArray#
                        ipv5
                        ipv8 of s4 { DEFAULT ->
                 case GHC.Prim.newAlignedPinnedByteArray#
                        @ GHC.Prim.RealWorld
                        16#
                        8#
                        s4 of ds6 { (#,#) ipv10 ipv11 ->
                 case GHC.Prim.unsafeFreezeByteArray#
                        @ GHC.Prim.RealWorld
                        ipv11
                        ipv10 of ds7 { (#,#) ipv12 ipv13 ->
                 let {
                   p1 :: GHC.Prim.Addr# = GHC.Prim.byteArrayContents# ipv13
                 } in
                 let {
                   p'y :: GHC.Prim.Addr# = GHC.Prim.plusAddr# p1 8#
                 } in
                 case {__pkg_ccall_GC bindings-GLFW-3.1.2.3@bindings-GLFW-3.1.2.3-LUlFmU2NSypHLMkfz76GZS glfwGetCursorPos GHC.Prim.Addr#
                                                                                                                          -> GHC.Prim.Addr#
                                                                                                                          -> GHC.Prim.Addr#
                                                                                                                          -> GHC.Prim.State#
                                                                                                                               GHC.Prim.RealWorld
                                                                                                                          -> (# GHC.Prim.State#
                                                                                                                                  GHC.Prim.RealWorld #)}
                        ww
                        p1
                        p'y
                        ipv12 of wild1 { Unit# ds8 ->
                 case GHC.Prim.readDoubleOffAddr#
                        @ GHC.Prim.RealWorld
                        p1
                        0#
                        ds8 of ds10 { (#,#) ipv14 ipv15 ->
                 case GHC.Prim.readDoubleOffAddr#
                        @ GHC.Prim.RealWorld
                        p'y
                        0#
                        ipv14 of ds11 { (#,#) ipv16 ipv17 ->
                 case GHC.Prim.touch#
                        @ 'GHC.Types.PtrRepUnlifted
                        @ GHC.Prim.ByteArray#
                        ipv13
                        ipv16 of s1 { DEFAULT ->
                 case {__pkg_ccall_GC bindings-GLFW-3.1.2.3@bindings-GLFW-3.1.2.3-LUlFmU2NSypHLMkfz76GZS glfwGetTime GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld
                                                                                                                     -> (# GHC.Prim.State#
                                                                                                                             GHC.Prim.RealWorld,
                                                                                                                           GHC.Prim.Double# #)}
                        s1 of wild2 { (#,#) ds12 ds13 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==## ds13 0.0##) of wild3 {
                   GHC.Types.False
                   -> (# ds12,
                         Graphics.UIKit.Input
                           Graphics.UIKit.initial3
                           ipv3
                           (Linear.V2.V2
                              @ GHC.Types.Int
                              (GHC.Types.I# ipv7)
                              (GHC.Types.I# ipv9))
                           (Graphics.UIKit.Mouse
                              (Linear.V2.V2
                                 @ GHC.Types.Double
                                 (GHC.Types.D# ipv15)
                                 (GHC.Types.D# ipv17))
                              (Data.Set.Base.Tip @ Graphics.UI.GLFW.Types.MouseButton))
                           (Data.Set.Base.Tip @ Graphics.UI.GLFW.Types.Key)
                           (GHC.Types.D# ds13) #)
                   GHC.Types.True
                   -> case Graphics.UIKit.initial2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Graphics.UIKit.Input #)
                      of {} } } } } } } } } } } } } } } }) -}
b0fd14f7eef37bc7327dcae7c9781c22
  $wlinkAndCheck ::
    GHC.Prim.Word#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Word#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Graphics.GL.Functions.F15.ptr_glLinkProgram of ds2 { GHC.Ptr.FunPtr ds3 ->
                 case {__dyn_ccall_GC "" GHC.Prim.Addr#
                                         -> GHC.Prim.Word#
                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        ds3
                        ww
                        w of wild { Unit# ds6 ->
                 case GHC.Prim.newAlignedPinnedByteArray#
                        @ GHC.Prim.RealWorld
                        4#
                        4#
                        ds6 of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.unsafeFreezeByteArray#
                        @ GHC.Prim.RealWorld
                        ipv1
                        ipv of ds5 { (#,#) ipv2 ipv3 ->
                 let {
                   ptr :: GHC.Prim.Addr# = GHC.Prim.byteArrayContents# ipv3
                 } in
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        ptr
                        0#
                        0#
                        ipv2 of s2 { DEFAULT ->
                 case Graphics.GL.Functions.F12.ptr_glGetProgramiv of ds4 { GHC.Ptr.FunPtr ds7 ->
                 case {__dyn_ccall_GC "" GHC.Prim.Addr#
                                         -> GHC.Prim.Word#
                                         -> GHC.Prim.Word#
                                         -> GHC.Prim.Addr#
                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        ds7
                        ww
                        35714##
                        ptr
                        s2 of wild1 { Unit# ds12 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        ptr
                        0#
                        ds12 of ds8 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.touch#
                        @ 'GHC.Types.PtrRepUnlifted
                        @ GHC.Prim.ByteArray#
                        ipv3
                        ipv4 of s4 { DEFAULT ->
                 case ipv5 of wild2 {
                   DEFAULT -> (# s4, GHC.Tuple.() #)
                   0#
                   -> case Graphics.Rendering.OpenGL.GL.Shaders.ProgramObjects.$wprogramInfoLog
                             ww
                             s4 of ds9 { (#,#) ipv7 ipv8 ->
                      GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ ()
                        (GHC.IO.Exception.$fExceptionIOException_$ctoException
                           (GHC.IO.Exception.IOError
                              (GHC.Base.Nothing @ GHC.IO.Handle.Types.Handle)
                              GHC.IO.Exception.UserError
                              (GHC.Types.[] @ GHC.Types.Char)
                              (GHC.Base.++
                                 @ GHC.Types.Char
                                 Graphics.UIKit.linkAndCheck2
                                 (GHC.Base.++ @ GHC.Types.Char Graphics.UIKit.checked2 ipv8))
                              (GHC.Base.Nothing @ Foreign.C.Types.CInt)
                              (GHC.Base.Nothing @ GHC.IO.FilePath)))
                        ipv7 } } } } } } } } } } }) -}
e0e4556a3bd19a48fec0569049d84345
  $wloop ::
    Graphics.UI.GLFW.Types.Window
    -> Graphics.UIKit.Descriptor
    -> Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Control.Concurrent.STM.TChan.TVarList Graphics.UIKit.SystemEvent)
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Control.Concurrent.STM.TChan.TVarList Graphics.UIKit.SystemEvent)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <L,U(U)><L,U(U(U),U(U),U(U))><L,U><S,U><L,U><S,U>,
     Inline: [0] -}
ba6ffd87cb50474cfb6aa1f1d5f24ba7
  $wnewQuad ::
    GHC.Prim.Word#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UIKit.Descriptor,
           Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject) #)
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0] -}
e52b687417fbd8cf631aa97d466d8c0d
  $wprocessMessages ::
    GHC.Prim.TVar#
      GHC.Prim.RealWorld
      (Control.Concurrent.STM.TChan.TVarList Graphics.UIKit.SystemEvent)
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Control.Concurrent.STM.TChan.TVarList Graphics.UIKit.SystemEvent)
    -> (app -> Graphics.UIKit.SystemEvent -> GHC.Types.IO app)
    -> app
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, app #)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S,U><L,A><L,C(C1(C1(U(U,U))))><L,U><S,U>, Inline: [0],
     Unfolding: (\ @ app
                   (ww :: GHC.Prim.TVar#
                            GHC.Prim.RealWorld
                            (Control.Concurrent.STM.TChan.TVarList Graphics.UIKit.SystemEvent))
                   (ww1 :: GHC.Prim.TVar#
                             GHC.Prim.RealWorld
                             (Control.Concurrent.STM.TChan.TVarList Graphics.UIKit.SystemEvent))
                   (w :: app -> Graphics.UIKit.SystemEvent -> GHC.Types.IO app)
                   (w1 :: app)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Graphics.UIKit.$wqueuedMessages
                        ww
                        ww1
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 letrec {
                   go4 :: [Graphics.UIKit.SystemEvent]
                          -> (app -> GHC.Types.IO app)
                          -> app
                          -> GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, app #)
                     {- Arity: 4, Strictness: <S,1*U><L,1*C1(C1(U(U,U)))><L,U><S,U> -}
                   = \ (ds :: [Graphics.UIKit.SystemEvent])
                       (eta :: app -> GHC.Types.IO app)
                       (eta1 :: app)
                       (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     case ds of wild {
                       [] -> (eta eta1) `cast` (GHC.Types.N:IO[0] <app>_R) eta2
                       : y ys
                       -> go4
                            ys
                            (\ (z :: app)[OneShot]
                               (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             case (w z y) `cast` (GHC.Types.N:IO[0] <app>_R)
                                    s of ds2 { (#,#) ipv2 ipv3 ->
                             (eta ipv3) `cast` (GHC.Types.N:IO[0] <app>_R) ipv2 })
                              `cast`
                            (<app>_R ->_R Sym (GHC.Types.N:IO[0] <app>_R))
                            eta1
                            eta2 }
                 } in
                 go4
                   ipv1
                   (GHC.Base.returnIO1 @ app)
                     `cast`
                   (<app>_R ->_R Sym (GHC.Types.N:IO[0] <app>_R))
                   w1
                   ipv }) -}
85c47a4db64cc2963b550ba25c585b73
  $wqueuedMessages ::
    GHC.Prim.TVar#
      GHC.Prim.RealWorld
      (Control.Concurrent.STM.TChan.TVarList Graphics.UIKit.SystemEvent)
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Control.Concurrent.STM.TChan.TVarList Graphics.UIKit.SystemEvent)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Graphics.UIKit.SystemEvent] #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><L,A><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.TVar#
                            GHC.Prim.RealWorld
                            (Control.Concurrent.STM.TChan.TVarList Graphics.UIKit.SystemEvent))
                   (ww1 :: GHC.Prim.TVar#
                             GHC.Prim.RealWorld
                             (Control.Concurrent.STM.TChan.TVarList Graphics.UIKit.SystemEvent))
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 letrec {
                   go4 :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                [Graphics.UIKit.SystemEvent] #)
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     case GHC.Prim.readTVar#
                            @ GHC.Prim.RealWorld
                            @ (Control.Concurrent.STM.TChan.TVarList
                                 Graphics.UIKit.SystemEvent)
                            ww
                            s of ds1 { (#,#) ipv ipv1 ->
                     case ipv1 of wild { GHC.Conc.Sync.TVar tvar# ->
                     case GHC.Prim.readTVar#
                            @ GHC.Prim.RealWorld
                            @ (Control.Concurrent.STM.TChan.TList Graphics.UIKit.SystemEvent)
                            tvar#
                            ipv of ds2 { (#,#) ipv2 ipv3 ->
                     case ipv3 of wild1 {
                       Control.Concurrent.STM.TChan.TNil
                       -> (# ipv2, GHC.Types.[] @ Graphics.UIKit.SystemEvent #)
                       Control.Concurrent.STM.TChan.TCons a1 dt1
                       -> case GHC.Prim.writeTVar#
                                 @ GHC.Prim.RealWorld
                                 @ (Control.Concurrent.STM.TChan.TVarList
                                      Graphics.UIKit.SystemEvent)
                                 ww
                                 (GHC.Conc.Sync.TVar
                                    @ (Control.Concurrent.STM.TChan.TList
                                         Graphics.UIKit.SystemEvent)
                                    dt1)
                                 ipv2 of s2# { DEFAULT ->
                          case go4 s2# of ds4 { (#,#) ipv4 ipv5 ->
                          (# ipv4,
                             GHC.Types.: @ Graphics.UIKit.SystemEvent a1 ipv5 #) } } } } } }
                 } in
                 GHC.Prim.atomically# @ [Graphics.UIKit.SystemEvent] go4 w) -}
17bd0f6013021d616a5fd8273c664e1f
  $wrender ::
    Graphics.UI.GLFW.Types.Window
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject
    -> Graphics.Rendering.OpenGL.GL.VertexArrayObjects.VertexArrayObject
    -> Graphics.Rendering.OpenGL.GL.VertexArrays.ArrayIndex
    -> Graphics.Rendering.OpenGL.GL.VertexArrays.NumArrayIndices
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 8,
     Strictness: <L,1*U(U)><L,U><L,U><L,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U>,
     Inline: [0] -}
0ffded35f1839df528a22d46abd8d601
  $wsetup ::
    GHC.Base.String
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Base.String
            (Graphics.UI.GLFW.Types.Window, Graphics.UIKit.MessageChannel) #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Base.String)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case {__pkg_ccall_GC bindings-GLFW-3.1.2.3@bindings-GLFW-3.1.2.3-LUlFmU2NSypHLMkfz76GZS glfwInit GHC.Prim.State#
                                                                                                                    GHC.Prim.RealWorld
                                                                                                                  -> (# GHC.Prim.State#
                                                                                                                          GHC.Prim.RealWorld,
                                                                                                                        GHC.Prim.Int# #)}
                        w1 of wild { (#,#) ds1 ds2 ->
                 case GHC.Prim.narrow32Int# ds2 of wild1 {
                   DEFAULT
                   -> case Graphics.UI.GLFW.C.$fCCIntBool3 wild1
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Data.Either.Either
                                  GHC.Base.String
                                  (Graphics.UI.GLFW.Types.Window, Graphics.UIKit.MessageChannel) #)
                      of {}
                   0# -> (# ds1, Graphics.UIKit.run5 #)
                   1#
                   -> case Graphics.UI.GLFW.createWindow1
                             (GHC.Types.I# ww)
                             (GHC.Types.I# ww1)
                             w
                             (GHC.Base.Nothing @ Graphics.UI.GLFW.Types.Monitor)
                             (GHC.Base.Nothing @ Graphics.UI.GLFW.Types.Window)
                             ds1 of ds4 { (#,#) ipv ipv1 ->
                      case ipv1 of wild2 {
                        GHC.Base.Nothing -> (# ipv, Graphics.UIKit.run3 #)
                        GHC.Base.Just x
                        -> case x `cast`
                                (Graphics.UI.GLFW.Types.N:Window[0]) of ds5 { GHC.Ptr.Ptr ds6 ->
                           case {__pkg_ccall_GC bindings-GLFW-3.1.2.3@bindings-GLFW-3.1.2.3-LUlFmU2NSypHLMkfz76GZS glfwMakeContextCurrent GHC.Prim.Addr#
                                                                                                                                          -> GHC.Prim.State#
                                                                                                                                               GHC.Prim.RealWorld
                                                                                                                                          -> (# GHC.Prim.State#
                                                                                                                                                  GHC.Prim.RealWorld #)}
                                  ds6
                                  ipv of wild3 { Unit# ds3 ->
                           case Graphics.UIKit.$wsetupEvents
                                  ds6
                                  ds3 of ds7 { (#,#) ipv2 ipv3 ->
                           (# ipv2,
                              Data.Either.Right
                                @ [GHC.Types.Char]
                                @ (Graphics.UI.GLFW.Types.Window, Graphics.UIKit.MessageChannel)
                                (ds5 `cast` (Sym (Graphics.UI.GLFW.Types.N:Window[0])),
                                 ipv3) #) } } } } } } }) -}
7ea7befb7b94e2021fd1563c3432046e
  $wsetupEvents ::
    GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UIKit.MessageChannel #)
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0] -}
ca9a0aeb63aef0fe27877c02d1667161
  $wuploadTexture ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Vector.Storable.Vector
         (Codec.Picture.Types.PixelBaseComponent
            Codec.Picture.Types.PixelRGBA8)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U><L,U><L,1*U(A,U,U)><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: Data.Vector.Storable.Vector
                             (Codec.Picture.Types.PixelBaseComponent
                                Codec.Picture.Types.PixelRGBA8))
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Graphics.Rendering.OpenGL.GLU.ErrorsInternal.getErrors1
                        w of ds1 { (#,#) ipv ipv1 ->
                 case Graphics.UIKit.crashOnError2
                        ipv1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ww2
                        `cast`
                      (Data.Vector.Storable.Vector
                         <Codec.Picture.Types.PixelBaseComponent
                            Codec.Picture.Types.PixelRGBA8, GHC.Word.Word8>)_R of wild { Data.Vector.Storable.Vector dt1 dt2 dt3 ->
                 case Graphics.GL.Functions.F26.ptr_glTexImage2D
                        @ GHC.Word.Word8 of ds10 { GHC.Ptr.FunPtr ds11 ->
                 case Graphics.Rendering.OpenGL.GL.Texturing.PixelInternalFormat.$wmarshalPixelInternalFormat
                        Graphics.Rendering.OpenGL.GL.Texturing.PixelInternalFormat.RGBA8 of ww7 { DEFAULT ->
                 case {__dyn_ccall_GC "" GHC.Prim.Addr#
                                         -> GHC.Prim.Word#
                                         -> GHC.Prim.Int#
                                         -> GHC.Prim.Int#
                                         -> GHC.Prim.Int#
                                         -> GHC.Prim.Int#
                                         -> GHC.Prim.Int#
                                         -> GHC.Prim.Word#
                                         -> GHC.Prim.Word#
                                         -> GHC.Prim.Addr#
                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        ds11
                        3553##
                        2#
                        ww7
                        (GHC.Prim.narrow32Int# ww)
                        (GHC.Prim.narrow32Int# ww1)
                        0#
                        6408##
                        5121##
                        dt2
                        ipv2 of wild1 { Unit# ds30 ->
                 case GHC.Prim.touch#
                        @ 'GHC.Types.PtrRepLifted
                        @ GHC.ForeignPtr.ForeignPtrContents
                        dt3
                        ds30 of s' { DEFAULT ->
                 case Graphics.Rendering.OpenGL.GLU.ErrorsInternal.getErrors1
                        s' of ds3 { (#,#) ipv4 ipv5 ->
                 Graphics.UIKit.crashOnError2 ipv5 ipv4 } } } } } } } }) -}
88b5f98c995cf6041f498f5d9c6f3634
  $wwindowBounds ::
    GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.AABB.AABB Linear.V2.V2 GHC.Types.Int #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newAlignedPinnedByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        4#
                        w of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Prim.unsafeFreezeByteArray#
                        @ GHC.Prim.RealWorld
                        ipv1
                        ipv of ds3 { (#,#) ipv2 ipv3 ->
                 let {
                   p :: GHC.Prim.Addr# = GHC.Prim.byteArrayContents# ipv3
                 } in
                 let {
                   p'y :: GHC.Prim.Addr# = GHC.Prim.plusAddr# p 4#
                 } in
                 case {__pkg_ccall_GC bindings-GLFW-3.1.2.3@bindings-GLFW-3.1.2.3-LUlFmU2NSypHLMkfz76GZS glfwGetWindowPos GHC.Prim.Addr#
                                                                                                                          -> GHC.Prim.Addr#
                                                                                                                          -> GHC.Prim.Addr#
                                                                                                                          -> GHC.Prim.State#
                                                                                                                               GHC.Prim.RealWorld
                                                                                                                          -> (# GHC.Prim.State#
                                                                                                                                  GHC.Prim.RealWorld #)}
                        ww
                        p
                        p'y
                        ipv2 of wild { Unit# ds9 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        p
                        0#
                        ds9 of ds1 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        p'y
                        0#
                        ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                 case GHC.Prim.touch#
                        @ 'GHC.Types.PtrRepUnlifted
                        @ GHC.Prim.ByteArray#
                        ipv3
                        ipv6 of s4 { DEFAULT ->
                 case GHC.Prim.newAlignedPinnedByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        4#
                        s4 of ds4 { (#,#) ipv11 ipv12 ->
                 case GHC.Prim.unsafeFreezeByteArray#
                        @ GHC.Prim.RealWorld
                        ipv12
                        ipv11 of ds6 { (#,#) ipv13 ipv14 ->
                 let {
                   p1 :: GHC.Prim.Addr# = GHC.Prim.byteArrayContents# ipv14
                 } in
                 let {
                   p'h :: GHC.Prim.Addr# = GHC.Prim.plusAddr# p1 4#
                 } in
                 case {__pkg_ccall_GC bindings-GLFW-3.1.2.3@bindings-GLFW-3.1.2.3-LUlFmU2NSypHLMkfz76GZS glfwGetWindowSize GHC.Prim.Addr#
                                                                                                                           -> GHC.Prim.Addr#
                                                                                                                           -> GHC.Prim.Addr#
                                                                                                                           -> GHC.Prim.State#
                                                                                                                                GHC.Prim.RealWorld
                                                                                                                           -> (# GHC.Prim.State#
                                                                                                                                   GHC.Prim.RealWorld #)}
                        ww
                        p1
                        p'h
                        ipv13 of wild1 { Unit# ds7 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        p1
                        0#
                        ds7 of ds8 { (#,#) ipv15 ipv16 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        p'h
                        0#
                        ipv15 of ds10 { (#,#) ipv17 ipv18 ->
                 case GHC.Prim.touch#
                        @ 'GHC.Types.PtrRepUnlifted
                        @ GHC.Prim.ByteArray#
                        ipv14
                        ipv17 of s1 { DEFAULT ->
                 (# s1,
                    Data.AABB.AABB
                      @ Linear.V2.V2
                      @ GHC.Types.Int
                      (Linear.V2.V2
                         @ GHC.Types.Int
                         (GHC.Types.I# ipv5)
                         (GHC.Types.I# ipv7))
                      (Linear.V2.V2
                         @ GHC.Types.Int
                         (GHC.Types.I# (GHC.Prim.+# ipv5 ipv16))
                         (GHC.Types.I#
                            (GHC.Prim.+# ipv7 ipv18))) #) } } } } } } } } } } } }) -}
e09757e52a8256c4d18e8a34d1a926f8
  data Descriptor
    = Descriptor Graphics.Rendering.OpenGL.GL.VertexArrayObjects.VertexArrayObject
                 Graphics.Rendering.OpenGL.GL.VertexArrays.ArrayIndex
                 Graphics.Rendering.OpenGL.GL.VertexArrays.NumArrayIndices
901a830fd6e0f89644affe5817cb1c6c
  data Input
    = Input {fScroll :: Linear.V2.V2 GHC.Types.Double,
             fWindowRect :: Data.AABB.AABB Linear.V2.V2 GHC.Types.Int,
             fFrameSize :: Linear.V2.V2 GHC.Types.Int,
             fMouse :: Graphics.UIKit.Mouse,
             fKeyboard :: Data.Set.Base.Set Graphics.UI.GLFW.Types.Key,
             fTime :: GHC.Types.Double}
83709339131b19bed6d79f35cfc142d7
  type MessageChannel =
    Control.Concurrent.STM.TChan.TChan Graphics.UIKit.SystemEvent
b804a186d6d37e4ee26709eefad1e6cf
  data Mouse
    = Mouse {fCursor :: Linear.V2.V2 GHC.Types.Double,
             fButtons :: Data.Set.Base.Set Graphics.UI.GLFW.Types.MouseButton}
a24fd4ba8ff6ea7462abd91a1ca768ab
  data ShaderInfo
    = ShaderInfo Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects.ShaderType
                 Graphics.UIKit.ShaderSource
7d46bb45c803e58998d7c73baeb8a3ca
  data ShaderSource
    = ByteStringSource Data.ByteString.Internal.ByteString
    | StringSource GHC.Base.String
    | FileSource GHC.IO.FilePath
b653081a0eb8b6ae81041da03a4ccabe
  data SystemEvent
    = MouseMotion (Linear.V2.V2 GHC.Types.Double)
    | MouseDown Graphics.UI.GLFW.Types.MouseButton
    | MouseUp Graphics.UI.GLFW.Types.MouseButton
    | MouseScroll (Linear.V2.V2 GHC.Types.Double)
    | KeyDown Graphics.UI.GLFW.Types.Key
    | KeyUp Graphics.UI.GLFW.Types.Key
    | KeyRepeat Graphics.UI.GLFW.Types.Key
    | FileDrop [GHC.Base.String]
    | WindowClosing
    | MouseEnter
    | MouseLeave
38907e5af35efac616aea71521594fce
  bufferOffset :: GHC.Real.Integral a => a -> GHC.Ptr.Ptr b
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLLLC(S)),1*U(A,A,A,A,A,A,A,A,1*C1(U))><L,U>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a @ b ($dIntegral :: GHC.Real.Integral a) (eta :: a) ->
                 case GHC.Integer.Type.integerToInt
                        (GHC.Real.toInteger @ a $dIntegral eta) of wild { DEFAULT ->
                 GHC.Ptr.Ptr @ b (GHC.Prim.plusAddr# __NULL wild) }) -}
2aa13ac24b56779eed3d11fb986d8ea4
  buttons ::
    Lens.Micro.Type.Lens'
      Graphics.UIKit.Mouse
      (Data.Set.Base.Set Graphics.UI.GLFW.Types.MouseButton)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,1*U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Data.Set.Base.Set Graphics.UI.GLFW.Types.MouseButton
                          -> f (Data.Set.Base.Set Graphics.UI.GLFW.Types.MouseButton))
                   (s :: Graphics.UIKit.Mouse) ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (Data.Set.Base.Set Graphics.UI.GLFW.Types.MouseButton)
                   @ Graphics.UIKit.Mouse
                   (\ (new :: Data.Set.Base.Set Graphics.UI.GLFW.Types.MouseButton) ->
                    case s of wild { Graphics.UIKit.Mouse ds ds1 ->
                    Graphics.UIKit.Mouse ds new })
                   (f1 (case s of wild { Graphics.UIKit.Mouse ds ds1 -> ds1 }))) -}
7cb3c271cdfea4dd3a7427c94caded28
  checked ::
    (t -> GHC.Types.IO ())
    -> (t -> Data.StateVar.GettableStateVar GHC.Types.Bool)
    -> (t -> Data.StateVar.GettableStateVar GHC.Base.String)
    -> GHC.Base.String
    -> t
    -> GHC.Types.IO ()
  {- Arity: 6,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,A)))><L,1*C1(C1(U(U,1*U)))><L,1*C1(C1(U(U,1*U)))><L,1*U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.checked1
                  `cast`
                (forall (t :: <*>_N).
                 <t -> GHC.Types.IO ()>_R
                 ->_R <t -> Data.StateVar.GettableStateVar GHC.Types.Bool>_R
                 ->_R <t -> Data.StateVar.GettableStateVar GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <t>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
619f46b23874175e8cb6f1339618b558
  checked1 ::
    (t -> GHC.Types.IO ())
    -> (t -> Data.StateVar.GettableStateVar GHC.Types.Bool)
    -> (t -> Data.StateVar.GettableStateVar GHC.Base.String)
    -> GHC.Base.String
    -> t
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,A)))><L,1*C1(C1(U(U,1*U)))><L,1*C1(C1(U(U,1*U)))><L,1*U><L,U><S,U>,
     Unfolding: (\ @ t
                   (action :: t -> GHC.Types.IO ())
                   (getStatus :: t -> Data.StateVar.GettableStateVar GHC.Types.Bool)
                   (getInfoLog :: t -> Data.StateVar.GettableStateVar GHC.Base.String)
                   (message :: GHC.Base.String)
                   (object :: t)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (action object) `cast` (GHC.Types.N:IO[0] <()>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (getStatus object)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Types.False
                   -> case (getInfoLog object)
                             `cast`
                           (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R)
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ ()
                        (GHC.IO.Exception.$fExceptionIOException_$ctoException
                           (GHC.IO.Exception.IOError
                              (GHC.Base.Nothing @ GHC.IO.Handle.Types.Handle)
                              GHC.IO.Exception.UserError
                              (GHC.Types.[] @ GHC.Types.Char)
                              (GHC.Base.++
                                 @ GHC.Types.Char
                                 message
                                 (GHC.Base.++ @ GHC.Types.Char Graphics.UIKit.checked2 ipv5))
                              (GHC.Base.Nothing @ Foreign.C.Types.CInt)
                              (GHC.Base.Nothing @ GHC.IO.FilePath)))
                        ipv4 }
                   GHC.Types.True -> (# ipv2, GHC.Tuple.() #) } } }) -}
0d3cc603d03e43b7c15baf300bfffba6
  checked2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " log: "#) -}
86d81a9cac958b675c2ab4e9244a00d0
  compileAndCheck ::
    Graphics.Rendering.OpenGL.GL.Shaders.Shader.Shader
    -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.compileAndCheck1
                  `cast`
                (<Graphics.Rendering.OpenGL.GL.Shaders.Shader.Shader>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
cd9255679aa3f994e74d4684043263ba
  compileAndCheck1 ::
    Graphics.Rendering.OpenGL.GL.Shaders.Shader.Shader
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Graphics.Rendering.OpenGL.GL.Shaders.Shader.Shader)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Graphics.Rendering.OpenGL.GL.Shaders.Shader.N:Shader[0]) of ww { GHC.Word.W32# ww1 ->
                 Graphics.UIKit.$wcompileAndCheck ww1 w1 }) -}
0cf0d32331d80ece9f7fb2d93d2e220d
  compileAndCheck2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "compile"#) -}
7d6c7b9574ee145c5d021d99085b1fbe
  crashOnError :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.crashOnError1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <()>_R)) -}
bd1e2f162feb4dd6d2aa8772e0d353aa
  crashOnError1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Graphics.Rendering.OpenGL.GLU.ErrorsInternal.getErrors1
                        s of ds1 { (#,#) ipv ipv1 ->
                 Graphics.UIKit.crashOnError2 ipv1 ipv }) -}
61919e7c16e50fdf84980a535e78975d
  crashOnError2 ::
    [Graphics.Rendering.OpenGL.GLU.ErrorsInternal.Error]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (es :: [Graphics.Rendering.OpenGL.GLU.ErrorsInternal.Error])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case es of wild {
                   [] -> (# eta, GHC.Tuple.() #)
                   : ds1 ds2
                   -> case GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.showList__2
                                (case ds1 of ww { Graphics.Rendering.OpenGL.GLU.ErrorsInternal.Error ww1 ww2 ->
                                 Graphics.Rendering.OpenGL.GLU.ErrorsInternal.$w$cshowsPrec
                                   0#
                                   ww1
                                   ww2
                                   (Graphics.UIKit.crashOnError_showl ds2) }))
                             GHC.Types.True
                             eta of ds4 { (#,#) ipv ipv1 ->
                      case Graphics.UIKit.crashOnError3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {} } }) -}
90d9709e9cbb6705b15c075f258b27d9
  crashOnError3 :: GHC.Types.IO ()
  {- Strictness: x -}
81569fd93b6796b5dd8660d84c2de0d9
  crashOnError_showl ::
    [Graphics.Rendering.OpenGL.GLU.ErrorsInternal.Error]
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
6089ffb289c949dd7c28d24df1f1e8f9
  cursor ::
    Lens.Micro.Type.Lens'
      Graphics.UIKit.Mouse (Linear.V2.V2 GHC.Types.Double)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(1*U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Linear.V2.V2 GHC.Types.Double
                          -> f (Linear.V2.V2 GHC.Types.Double))
                   (s :: Graphics.UIKit.Mouse) ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (Linear.V2.V2 GHC.Types.Double)
                   @ Graphics.UIKit.Mouse
                   (\ (new :: Linear.V2.V2 GHC.Types.Double) ->
                    case s of wild { Graphics.UIKit.Mouse ds ds1 ->
                    Graphics.UIKit.Mouse new ds1 })
                   (f1 (case s of wild { Graphics.UIKit.Mouse ds ds1 -> ds }))) -}
403cd3a18372457d62082891390c51c8
  drawing :: Codec.Picture.Types.Image Codec.Picture.Types.PixelRGBA8
  {- Unfolding: (Graphics.Rasterific.renderDrawingAtDpi
                   @ Codec.Picture.Types.PixelRGBA8
                   Graphics.UIKit.drawing12
                     `cast`
                   (GHC.Classes.(%,,,,,,,,%)
                      (GHC.Classes.(%,,,,,%)
                         <Codec.Picture.Types.Pixel Codec.Picture.Types.PixelRGBA8>_N
                         <Codec.Picture.Types.PackeablePixel
                            Codec.Picture.Types.PixelRGBA8>_N
                         <Graphics.Rasterific.Compositor.InterpolablePixel
                            Codec.Picture.Types.PixelRGBA8>_N
                         (Graphics.Rasterific.Compositor.InterpolablePixel
                            (Sym (Codec.Picture.Types.D:R:PixelBaseComponentPixelRGBA8[0])))_N
                         (Foreign.Storable.Storable
                            (Sym (Codec.Picture.Types.D:R:PackedRepresentationPixelRGBA8[0])))_N
                         (Graphics.Rasterific.Compositor.Modulable
                            (Sym (Codec.Picture.Types.D:R:PixelBaseComponentPixelRGBA8[0])))_N)_N
                      (Codec.Picture.Types.Pixel
                         (Sym (Codec.Picture.Types.D:R:PixelBaseComponentPixelRGBA8[0])))_N
                      (Codec.Picture.Types.PackeablePixel
                         (Sym (Codec.Picture.Types.D:R:PixelBaseComponentPixelRGBA8[0])))_N
                      (GHC.Num.Num
                         (Sym (Codec.Picture.Types.D:R:PackedRepresentationPixelRGBA8[0])))_N
                      (GHC.Num.Num
                         (Trans
                              (Sym (Codec.Picture.Types.D:R:PackedRepresentationWord8[0]))
                              (Codec.Picture.Types.PackedRepresentation
                                 (Sym (Codec.Picture.Types.D:R:PixelBaseComponentPixelRGBA8[0])))_N))_N
                      (GHC.Num.Num
                         (Sym (Graphics.Rasterific.Compositor.D:R:HolderPixelRGBA8[0]) <GHC.Types.Float>_N))_N
                      (GHC.Num.Num
                         (Trans
                              (Sym (Graphics.Rasterific.Compositor.D:R:HolderWord8[0]))
                              (Graphics.Rasterific.Compositor.Holder
                                 (Sym (Codec.Picture.Types.D:R:PixelBaseComponentPixelRGBA8[0])))_N <GHC.Types.Float>_N))_N
                      (Foreign.Storable.Storable
                         (Trans
                              (Sym (Codec.Picture.Types.D:R:PackedRepresentationWord8[0]))
                              (Codec.Picture.Types.PackedRepresentation
                                 (Sym (Codec.Picture.Types.D:R:PixelBaseComponentPixelRGBA8[0])))_N))_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Trans
                              (Sym (Codec.Picture.Types.D:R:PixelBaseComponentWord8[0]))
                              (Codec.Picture.Types.PixelBaseComponent
                                 (Sym (Codec.Picture.Types.D:R:PixelBaseComponentPixelRGBA8[0])))_N)
                         (Sym (Codec.Picture.Types.D:R:PixelBaseComponentPixelRGBA8[0])))_N)_R
                   Graphics.UIKit.drawing11
                   Graphics.UIKit.drawing11
                   Graphics.Rasterific.renderDrawing1
                   Graphics.UIKit.drawing10
                   Graphics.UIKit.drawing1) -}
c831df16825473485919f6f38704fc9a
  drawing1 ::
    Control.Monad.Free.Church.F
      (Graphics.Rasterific.Command.DrawCommand
         Codec.Picture.Types.PixelRGBA8)
      ()
  {- Unfolding: (Graphics.Rasterific.withTexture1
                   @ Codec.Picture.Types.PixelRGBA8
                   Graphics.UIKit.drawing2) -}
e7d365dfcdb2f783e59e07c731c27462
  drawing10 :: Codec.Picture.Types.PixelRGBA8
  {- HasNoCafRefs,
     Unfolding: (Codec.Picture.Types.PixelRGBA8
                   255##
                   255##
                   255##
                   255##) -}
b3db1e472d2e9beb149bf7cbdb525963
  drawing11 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 256#) -}
f33d1d8b1c2d35cad6242528a384a4bb
  drawing12 ::
    ((Codec.Picture.Types.Pixel Codec.Picture.Types.PixelRGBA8,
      Codec.Picture.Types.PackeablePixel Codec.Picture.Types.PixelRGBA8,
      Graphics.Rasterific.Compositor.InterpolablePixel
        Codec.Picture.Types.PixelRGBA8,
      Graphics.Rasterific.Compositor.InterpolablePixel GHC.Word.Word8,
      Foreign.Storable.Storable GHC.Word.Word32,
      Graphics.Rasterific.Compositor.Modulable GHC.Word.Word8),
     Codec.Picture.Types.Pixel GHC.Word.Word8,
     Codec.Picture.Types.PackeablePixel GHC.Word.Word8,
     GHC.Num.Num GHC.Word.Word32,
     GHC.Num.Num Codec.Picture.Types.Pixel8,
     GHC.Num.Num (Linear.V4.V4 GHC.Types.Float),
     GHC.Num.Num (Linear.V1.V1 GHC.Types.Float),
     Foreign.Storable.Storable Codec.Picture.Types.Pixel8,
     GHC.Word.Word8 Data.Type.Equality.~ GHC.Word.Word8)
  {- Unfolding: ((Graphics.UIKit.$srenderDrawing2,
                  Codec.Picture.Types.$fPixelWord8,
                  Codec.Picture.Types.$fPackeablePixelWord8, GHC.Word.$fNumWord32,
                  GHC.Word.$fNumWord8, Graphics.UIKit.$s$fNumV4,
                  Graphics.UIKit.$s$fNumV1, Foreign.Storable.$fStorableWord8,
                  Graphics.UIKit.drawing13
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <GHC.Word.Word8>_N <GHC.Word.Word8>_N))) -}
1c43bebd7ca62e364d3ee7d3e8bbd606
  drawing13 :: GHC.Word.Word8 GHC.Types.~~ GHC.Word.Word8
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ GHC.Word.Word8
                   @ GHC.Word.Word8
                   @~ <GHC.Word.Word8>_N) -}
ab2c4b6a79f9cbb448edc97cdaa10c75
  drawing2 ::
    Graphics.Rasterific.Command.DrawCommand
      Codec.Picture.Types.PixelRGBA8 ()
  {- Unfolding: (Graphics.Rasterific.Command.SetTexture
                   @ Codec.Picture.Types.PixelRGBA8
                   @ ()
                   Graphics.UIKit.drawing8
                   Graphics.UIKit.drawing3
                   GHC.Tuple.()) -}
99a5f51d75454ccacb33b9427c0e3020
  drawing3 ::
    Control.Monad.Free.Church.F
      (Graphics.Rasterific.Command.DrawCommand
         Codec.Picture.Types.PixelRGBA8)
      ()
  {- Unfolding: (Graphics.Rasterific.fill2
                   @ Codec.Picture.Types.PixelRGBA8
                   Graphics.UIKit.drawing4) -}
f354c2d301c4e97bf7fcf3f4a02d320e
  drawing4 ::
    Graphics.Rasterific.Command.DrawCommand
      Codec.Picture.Types.PixelRGBA8 ()
  {- Unfolding: (Graphics.Rasterific.Command.Fill
                   @ Codec.Picture.Types.PixelRGBA8
                   @ ()
                   Graphics.Rasterific.Types.FillWinding
                   Graphics.UIKit.drawing5
                   GHC.Tuple.()) -}
a70c2a17d6d69e071fea07c04d549d07
  drawing5 :: [Graphics.Rasterific.Types.Primitive]
  {- Unfolding: (Graphics.Rasterific.ComplexPrimitive.$wcircle
                   Graphics.UIKit.drawing6
                   140.0#) -}
1e7724445ef180a264c8d480ba9e6ff1
  drawing6 :: Linear.V2.V2 GHC.Types.Float
  {- HasNoCafRefs,
     Unfolding: (Linear.V2.V2
                   @ GHC.Types.Float
                   Graphics.UIKit.drawing7
                   Graphics.UIKit.drawing7) -}
8bc7121c18fb1293f075c742f90e09d4
  drawing7 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 0.0#) -}
6ff7467586620ae4d6ccc4134f993ba9
  drawing8 ::
    Graphics.Rasterific.Command.Texture Codec.Picture.Types.PixelRGBA8
  {- HasNoCafRefs,
     Unfolding: (Graphics.Rasterific.Command.SolidTexture
                   @ Codec.Picture.Types.PixelRGBA8
                   Graphics.UIKit.drawing9) -}
fdcbd402f759cf87453557dc3f55a848
  drawing9 :: Codec.Picture.Types.PixelRGBA8
  {- HasNoCafRefs,
     Unfolding: (Codec.Picture.Types.PixelRGBA8
                   0##
                   134##
                   193##
                   255##) -}
14922bf512df7b1423771454d212b4e1
  explain ::
    GHC.Base.Monad m =>
    e -> GHC.Base.Maybe a -> Control.Monad.Trans.Either.EitherT e m a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(A,A,A,C(U),A)><L,U>,
     Unfolding: (\ @ (m :: * -> *)
                   @ e
                   @ a
                   ($dMonad :: GHC.Base.Monad m)
                   (e1 :: e) ->
                 let {
                   n :: m (Data.Either.Either e a)
                   = GHC.Base.return
                       @ m
                       $dMonad
                       @ (Data.Either.Either e a)
                       (Data.Either.Left @ e @ a e1)
                 } in
                 \ (ds1 :: GHC.Base.Maybe a) ->
                 case ds1 of wild {
                   GHC.Base.Nothing
                   -> n `cast`
                      (Sym (Control.Monad.Trans.Either.N:EitherT[0] <e>_N <m>_R <a>_N))
                   GHC.Base.Just x
                   -> Control.Monad.Trans.Either.$fApplicativeEitherT_$cpure
                        @ m
                        @ e
                        $dMonad
                        @ a
                        x }) -}
a5286cb6a815d82cd38d36b05e566a67
  frameBounds ::
    Graphics.UI.GLFW.Types.Window
    -> GHC.Types.IO (Linear.V2.V2 GHC.Types.Int)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.frameBounds1
                  `cast`
                (<Graphics.UI.GLFW.Types.Window>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Linear.V2.V2 GHC.Types.Int>_R)) -}
2c09def54c2a0f9ab6d32740ddca133d
  frameBounds1 ::
    Graphics.UI.GLFW.Types.Window
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Linear.V2.V2 GHC.Types.Int #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Graphics.UI.GLFW.Types.Window)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Graphics.UI.GLFW.Types.N:Window[0]) of ww { GHC.Ptr.Ptr ww1 ->
                 Graphics.UIKit.$wframeBounds ww1 w1 }) -}
0a182a2ef78aa5ef7183a60853a0799a
  frameSize ::
    Lens.Micro.Type.Lens'
      Graphics.UIKit.Input (Linear.V2.V2 GHC.Types.Int)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,U,1*U,U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Linear.V2.V2 GHC.Types.Int
                          -> f (Linear.V2.V2 GHC.Types.Int))
                   (s :: Graphics.UIKit.Input) ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (Linear.V2.V2 GHC.Types.Int)
                   @ Graphics.UIKit.Input
                   (\ (new :: Linear.V2.V2 GHC.Types.Int) ->
                    case s of wild { Graphics.UIKit.Input ds ds1 ds2 ds3 ds4 ds5 ->
                    Graphics.UIKit.Input ds ds1 new ds3 ds4 ds5 })
                   (f1
                      (case s of wild { Graphics.UIKit.Input ds ds1 ds2 ds3 ds4 ds5 ->
                       ds2 }))) -}
3eefc939b6b951bc544bfd178ab4da36
  getSource ::
    Graphics.UIKit.ShaderSource
    -> GHC.Types.IO Data.ByteString.Internal.ByteString
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.getSource1
                  `cast`
                (<Graphics.UIKit.ShaderSource>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Data.ByteString.Internal.ByteString>_R)) -}
3fcd84c63eb8e53ad80ecdc89a5a13bd
  getSource1 ::
    Graphics.UIKit.ShaderSource
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Internal.ByteString #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Graphics.UIKit.ShaderSource)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild {
                   Graphics.UIKit.ByteStringSource bs -> (# eta, bs #)
                   Graphics.UIKit.StringSource str
                   -> (# eta, Graphics.Rendering.OpenGL.GL.ByteString.packUtf8 str #)
                   Graphics.UIKit.FileSource path
                   -> Data.ByteString.readFile1 path eta }) -}
2a908fdd45706d449d5d5090a8be4564
  initial ::
    Graphics.UI.GLFW.Types.Window -> GHC.Types.IO Graphics.UIKit.Input
  {- Arity: 2, Strictness: <S(S),U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.initial1
                  `cast`
                (<Graphics.UI.GLFW.Types.Window>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Graphics.UIKit.Input>_R)) -}
a6204c76e880e8e0e015f536cad1e2b4
  initial1 ::
    Graphics.UI.GLFW.Types.Window
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Graphics.UIKit.Input #)
  {- Arity: 2, Strictness: <S(S),U(U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Graphics.UI.GLFW.Types.Window)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Graphics.UI.GLFW.Types.N:Window[0]) of ww { GHC.Ptr.Ptr ww1 ->
                 Graphics.UIKit.$winitial ww1 w1 }) -}
b5b76043531f49c6784737828d253510
  initial2 :: GHC.Types.IO GHC.Types.Double
  {- Strictness: x -}
01bc388b4c1a8a7dcb162014456ceb93
  initial3 :: Linear.V2.V2 GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Linear.V2.V2
                   @ GHC.Types.Double
                   Graphics.UIKit.initial4
                   Graphics.UIKit.initial4) -}
07a576055cd3b29c577d399dc276910a
  initial4 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 0.0##) -}
1366d58dd2a8618b9de8c13e222715c2
  insist ::
    GHC.Base.Monad m =>
    e -> GHC.Types.Bool -> Control.Monad.Trans.Either.EitherT e m ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLC(S)L),1*U(A,A,A,1*C1(U),A)><L,U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (m :: * -> *)
                   @ e
                   ($dMonad :: GHC.Base.Monad m)
                   (e1 :: e)
                   (ds :: GHC.Types.Bool) ->
                 case ds of wild {
                   GHC.Types.False
                   -> (GHC.Base.return
                         @ m
                         $dMonad
                         @ (Data.Either.Either e ())
                         (Data.Either.Left @ e @ () e1))
                        `cast`
                      (Sym (Control.Monad.Trans.Either.N:EitherT[0] <e>_N <m>_R <()>_N))
                   GHC.Types.True
                   -> (GHC.Base.return
                         @ m
                         $dMonad
                         @ (Data.Either.Either e ())
                         (Data.Either.Right @ e @ () GHC.Tuple.()))
                        `cast`
                      (Sym (Control.Monad.Trans.Either.N:EitherT[0]
                                <e>_N <m>_R <()>_N)) }) -}
1e9a9cb52b0d29b97fc11a8931abe5df
  iterateUntilM ::
    GHC.Base.Monad m =>
    (a -> m GHC.Types.Bool) -> (a -> m a) -> a -> m a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLL),U(1*U(1*U(1*C1(U),A),A,A,A,A),C(C1(U)),A,C(U),A)><L,C(U)><L,C(U)><L,U>,
     Unfolding: (\ @ (m :: * -> *)
                   @ a
                   ($dMonad :: GHC.Base.Monad m)
                   (eta :: a -> m GHC.Types.Bool)
                   (eta1 :: a -> m a)
                   (eta2 :: a) ->
                 Graphics.UIKit.iterateWhileM
                   @ m
                   @ a
                   $dMonad
                   (let {
                      f :: m GHC.Types.Bool -> m GHC.Types.Bool
                      = GHC.Base.fmap
                          @ m
                          (GHC.Base.$p1Applicative @ m (GHC.Base.$p1Monad @ m $dMonad))
                          @ GHC.Types.Bool
                          @ GHC.Types.Bool
                          GHC.Classes.not
                    } in
                    \ (x :: a) -> f (eta x))
                   eta1
                   eta2) -}
da238f17de152565f647761ed1842143
  iterateWhileM ::
    GHC.Base.Monad m =>
    (a -> m GHC.Types.Bool) -> (a -> m a) -> a -> m a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,C(U)><L,C(U)><L,U> -}
b553ccd64af133e8bfdfb727d99c94f4
  keyboard ::
    Lens.Micro.Type.Lens'
      Graphics.UIKit.Input (Data.Set.Base.Set Graphics.UI.GLFW.Types.Key)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,U,U,U,1*U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Data.Set.Base.Set Graphics.UI.GLFW.Types.Key
                          -> f (Data.Set.Base.Set Graphics.UI.GLFW.Types.Key))
                   (s :: Graphics.UIKit.Input) ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (Data.Set.Base.Set Graphics.UI.GLFW.Types.Key)
                   @ Graphics.UIKit.Input
                   (\ (new :: Data.Set.Base.Set Graphics.UI.GLFW.Types.Key) ->
                    case s of wild { Graphics.UIKit.Input ds ds1 ds2 ds3 ds4 ds5 ->
                    Graphics.UIKit.Input ds ds1 ds2 ds3 new ds5 })
                   (f1
                      (case s of wild { Graphics.UIKit.Input ds ds1 ds2 ds3 ds4 ds5 ->
                       ds4 }))) -}
b2435f46e47fcbefba3b499023dbe59a
  linkAndCheck ::
    Graphics.Rendering.OpenGL.GL.Shaders.Program.Program
    -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.linkAndCheck1
                  `cast`
                (<Graphics.Rendering.OpenGL.GL.Shaders.Program.Program>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
eb6c9ffb203c05e6c37ca3b45a9a8e5d
  linkAndCheck1 ::
    Graphics.Rendering.OpenGL.GL.Shaders.Program.Program
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Graphics.Rendering.OpenGL.GL.Shaders.Program.Program)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Graphics.Rendering.OpenGL.GL.Shaders.Program.N:Program[0]) of ww { GHC.Word.W32# ww1 ->
                 Graphics.UIKit.$wlinkAndCheck ww1 w1 }) -}
487bbf5226c03dd272cd5cc163407aff
  linkAndCheck2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "link"#) -}
c9ec9f84df93531de6fe66661d1c8420
  loadCompileAttach ::
    Graphics.Rendering.OpenGL.GL.Shaders.Program.Program
    -> [Graphics.UIKit.ShaderInfo] -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U(U)><S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.loadCompileAttach1
                  `cast`
                (<Graphics.Rendering.OpenGL.GL.Shaders.Program.Program>_R
                 ->_R <[Graphics.UIKit.ShaderInfo]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
822b7a8e46344e6c1000b2eb4b8e94ee
  loadCompileAttach1 ::
    Graphics.Rendering.OpenGL.GL.Shaders.Program.Program
    -> [Graphics.UIKit.ShaderInfo]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U)><S,1*U><S,U> -}
46548213f770c8172ced8885ab75508d
  loadShaders ::
    [Graphics.UIKit.ShaderInfo]
    -> GHC.Types.IO
         Graphics.Rendering.OpenGL.GL.Shaders.Program.Program
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.loadShaders1
                  `cast`
                (<[Graphics.UIKit.ShaderInfo]>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.Rendering.OpenGL.GL.Shaders.Program.Program>_R)) -}
ffcb38afb39e2670abf40331f60eba78
  loadShaders1 ::
    [Graphics.UIKit.ShaderInfo]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.Rendering.OpenGL.GL.Shaders.Program.Program #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (infos :: [Graphics.UIKit.ShaderInfo])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.getMaskingState# eta of ds { (#,#) ipv ipv1 ->
                 case ipv1 of ds1 {
                   DEFAULT
                   -> case Graphics.GL.Functions.F05.ptr_glCreateProgram of ds2 { GHC.Ptr.FunPtr ds3 ->
                      case {__dyn_ccall_GC "" GHC.Prim.Addr#
                                              -> GHC.Prim.State# GHC.Prim.RealWorld
                                              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                    GHC.Prim.Word# #)}
                             ds3
                             ipv of wild { (#,#) ds4 ds5 ->
                      let {
                        ipv3 :: GHC.Prim.Word# = GHC.Prim.narrow32Word# ds5
                      } in
                      GHC.Prim.catch#
                        @ Graphics.Rendering.OpenGL.GL.Shaders.Program.Program
                        @ GHC.Exception.SomeException
                        (GHC.Magic.lazy
                           @ (GHC.Types.IO
                                Graphics.Rendering.OpenGL.GL.Shaders.Program.Program)
                           (GHC.Prim.maskAsyncExceptions#
                              @ Graphics.Rendering.OpenGL.GL.Shaders.Program.Program
                              (\ (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               let {
                                 program :: GHC.Word.Word32 {- Strictness: m -} = GHC.Word.W32# ipv3
                               } in
                               case Graphics.UIKit.loadCompileAttach1
                                      program
                                        `cast`
                                      (Sym (Graphics.Rendering.OpenGL.GL.Shaders.Program.N:Program[0]))
                                      infos
                                      eta1 of ds6 { (#,#) ipv2 ipv4 ->
                               case Graphics.UIKit.$wlinkAndCheck
                                      ipv3
                                      ipv2 of ds7 { (#,#) ipv5 ipv6 ->
                               (# ipv5,
                                  program
                                    `cast`
                                  (Sym (Graphics.Rendering.OpenGL.GL.Shaders.Program.N:Program[0])) #) } }))
                             `cast`
                           (Sym (GHC.Types.N:IO[0]
                                     <Graphics.Rendering.OpenGL.GL.Shaders.Program.Program>_R)))
                          `cast`
                        (GHC.Types.N:IO[0]
                             <Graphics.Rendering.OpenGL.GL.Shaders.Program.Program>_R)
                        (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                           (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case Graphics.GL.Functions.F05.ptr_glDeleteProgram of ds6 { GHC.Ptr.FunPtr ds7 ->
                         case {__dyn_ccall_GC "" GHC.Prim.Addr#
                                                 -> GHC.Prim.Word#
                                                 -> GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                                ds7
                                ipv3
                                eta1 of wild1 { Unit# ds8 ->
                         GHC.Prim.raiseIO#
                           @ GHC.Exception.SomeException
                           @ Graphics.Rendering.OpenGL.GL.Shaders.Program.Program
                           e1
                           ds8 } })
                        ds4 } }
                   0#
                   -> GHC.Prim.maskAsyncExceptions#
                        @ Graphics.Rendering.OpenGL.GL.Shaders.Program.Program
                        (\ (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case Graphics.GL.Functions.F05.ptr_glCreateProgram of ds2 { GHC.Ptr.FunPtr ds3 ->
                         case {__dyn_ccall_GC "" GHC.Prim.Addr#
                                                 -> GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Prim.Word# #)}
                                ds3
                                eta1 of wild { (#,#) ds4 ds5 ->
                         let {
                           ipv3 :: GHC.Prim.Word# = GHC.Prim.narrow32Word# ds5
                         } in
                         GHC.Prim.catch#
                           @ Graphics.Rendering.OpenGL.GL.Shaders.Program.Program
                           @ GHC.Exception.SomeException
                           (GHC.Magic.lazy
                              @ (GHC.Types.IO
                                   Graphics.Rendering.OpenGL.GL.Shaders.Program.Program)
                              (GHC.Prim.unmaskAsyncExceptions#
                                 @ Graphics.Rendering.OpenGL.GL.Shaders.Program.Program
                                 (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  let {
                                    program :: GHC.Word.Word32 {- Strictness: m -}
                                    = GHC.Word.W32# ipv3
                                  } in
                                  case Graphics.UIKit.loadCompileAttach1
                                         program
                                           `cast`
                                         (Sym (Graphics.Rendering.OpenGL.GL.Shaders.Program.N:Program[0]))
                                         infos
                                         eta2 of ds6 { (#,#) ipv2 ipv4 ->
                                  case Graphics.UIKit.$wlinkAndCheck
                                         ipv3
                                         ipv2 of ds7 { (#,#) ipv5 ipv6 ->
                                  (# ipv5,
                                     program
                                       `cast`
                                     (Sym (Graphics.Rendering.OpenGL.GL.Shaders.Program.N:Program[0])) #) } }))
                                `cast`
                              (Sym (GHC.Types.N:IO[0]
                                        <Graphics.Rendering.OpenGL.GL.Shaders.Program.Program>_R)))
                             `cast`
                           (GHC.Types.N:IO[0]
                                <Graphics.Rendering.OpenGL.GL.Shaders.Program.Program>_R)
                           (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                              (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case Graphics.GL.Functions.F05.ptr_glDeleteProgram of ds6 { GHC.Ptr.FunPtr ds7 ->
                            case {__dyn_ccall_GC "" GHC.Prim.Addr#
                                                    -> GHC.Prim.Word#
                                                    -> GHC.Prim.State# GHC.Prim.RealWorld
                                                    -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                                   ds7
                                   ipv3
                                   eta2 of wild1 { Unit# ds8 ->
                            GHC.Prim.raiseIO#
                              @ GHC.Exception.SomeException
                              @ Graphics.Rendering.OpenGL.GL.Shaders.Program.Program
                              e1
                              ds8 } })
                           ds4 } })
                        ipv
                   1#
                   -> case Graphics.GL.Functions.F05.ptr_glCreateProgram of ds2 { GHC.Ptr.FunPtr ds3 ->
                      case {__dyn_ccall_GC "" GHC.Prim.Addr#
                                              -> GHC.Prim.State# GHC.Prim.RealWorld
                                              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                    GHC.Prim.Word# #)}
                             ds3
                             ipv of wild { (#,#) ds4 ds5 ->
                      let {
                        ipv3 :: GHC.Prim.Word# = GHC.Prim.narrow32Word# ds5
                      } in
                      GHC.Prim.catch#
                        @ Graphics.Rendering.OpenGL.GL.Shaders.Program.Program
                        @ GHC.Exception.SomeException
                        (GHC.Magic.lazy
                           @ (GHC.Types.IO
                                Graphics.Rendering.OpenGL.GL.Shaders.Program.Program)
                           (GHC.Prim.maskUninterruptible#
                              @ Graphics.Rendering.OpenGL.GL.Shaders.Program.Program
                              (\ (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               let {
                                 program :: GHC.Word.Word32 {- Strictness: m -} = GHC.Word.W32# ipv3
                               } in
                               case Graphics.UIKit.loadCompileAttach1
                                      program
                                        `cast`
                                      (Sym (Graphics.Rendering.OpenGL.GL.Shaders.Program.N:Program[0]))
                                      infos
                                      eta1 of ds6 { (#,#) ipv2 ipv4 ->
                               case Graphics.UIKit.$wlinkAndCheck
                                      ipv3
                                      ipv2 of ds7 { (#,#) ipv5 ipv6 ->
                               (# ipv5,
                                  program
                                    `cast`
                                  (Sym (Graphics.Rendering.OpenGL.GL.Shaders.Program.N:Program[0])) #) } }))
                             `cast`
                           (Sym (GHC.Types.N:IO[0]
                                     <Graphics.Rendering.OpenGL.GL.Shaders.Program.Program>_R)))
                          `cast`
                        (GHC.Types.N:IO[0]
                             <Graphics.Rendering.OpenGL.GL.Shaders.Program.Program>_R)
                        (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                           (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case Graphics.GL.Functions.F05.ptr_glDeleteProgram of ds6 { GHC.Ptr.FunPtr ds7 ->
                         case {__dyn_ccall_GC "" GHC.Prim.Addr#
                                                 -> GHC.Prim.Word#
                                                 -> GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                                ds7
                                ipv3
                                eta1 of wild1 { Unit# ds8 ->
                         GHC.Prim.raiseIO#
                           @ GHC.Exception.SomeException
                           @ Graphics.Rendering.OpenGL.GL.Shaders.Program.Program
                           e1
                           ds8 } })
                        ds4 } } } }) -}
9a69a49437ce08f2062d170abd487ebb
  mouse ::
    Lens.Micro.Type.Lens' Graphics.UIKit.Input Graphics.UIKit.Mouse
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,U,U,1*U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Graphics.UIKit.Mouse -> f Graphics.UIKit.Mouse)
                   (s :: Graphics.UIKit.Input) ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ Graphics.UIKit.Mouse
                   @ Graphics.UIKit.Input
                   (\ (new :: Graphics.UIKit.Mouse) ->
                    case s of wild { Graphics.UIKit.Input ds ds1 ds2 ds3 ds4 ds5 ->
                    Graphics.UIKit.Input ds ds1 ds2 new ds4 ds5 })
                   (f1
                      (case s of wild { Graphics.UIKit.Input ds ds1 ds2 ds3 ds4 ds5 ->
                       ds3 }))) -}
201f8534dbfaab9d2f2f6aee38a62aa9
  newQuad ::
    GHC.Types.IO
      (Graphics.UIKit.Descriptor,
       Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.newQuad1
                  `cast`
                (Sym (GHC.Types.N:IO[0]
                          <(Graphics.UIKit.Descriptor,
                            Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject)>_R)) -}
a7bd5b3887bdfd5d71ad34afba4fd03a
  newQuad1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UIKit.Descriptor,
           Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Graphics.Rendering.OpenGL.GL.VertexArrayObjects.$fGeneratableObjectNameVertexArrayObject_$cgenObjectNames
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         Graphics.Rendering.OpenGL.GL.VertexArrayObjects.$fGeneratableObjectNameVertexArrayObject2)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <[Graphics.Rendering.OpenGL.GL.VertexArrayObjects.VertexArrayObject]>_R)
                        s of ds { (#,#) ipv ipv1 ->
                 Graphics.UIKit.newQuad2
                   (GHC.List.head
                      @ Graphics.Rendering.OpenGL.GL.VertexArrayObjects.VertexArrayObject
                      ipv1)
                   ipv }) -}
f68e10e821db0455c74064eb13e09299
  newQuad2 ::
    Graphics.Rendering.OpenGL.GL.VertexArrayObjects.VertexArrayObject
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UIKit.Descriptor,
           Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject) #)
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Graphics.Rendering.OpenGL.GL.VertexArrayObjects.VertexArrayObject)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Graphics.Rendering.OpenGL.GL.VertexArrayObjects.N:VertexArrayObject[0]) of ww { GHC.Word.W32# ww1 ->
                 Graphics.UIKit.$wnewQuad ww1 w1 }) -}
e6902d901646f97a118bb6fa36183c7a
  newTexture ::
    GHC.Types.IO
      Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.newTexture1
                  `cast`
                (Sym (GHC.Types.N:IO[0]
                          <Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject>_R)) -}
3b9d11f7792b65258a142e6e0d86a543
  newTexture1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.$fGeneratableObjectNameTextureObject_$cgenObjectNames
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.$fGeneratableObjectNameTextureObject2)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <[Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]>_R)
                        s of ds { (#,#) ipv ipv1 ->
                 case Graphics.UIKit.newTexture5 `cast` (GHC.Types.N:IO[0] <()>_R)
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case Graphics.UIKit.newTexture3
                        Graphics.UIKit.newTexture2
                        ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 (# ipv4,
                    GHC.List.head
                      @ Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject
                      ipv1 #) } } }) -}
effd0a9626ac44cbe59a4ce293aa0a4c
  newTexture2 ::
    (Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Repetition,
     Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Clamping)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Repeated,
                  Graphics.Rendering.OpenGL.GL.Texturing.Parameters.ClampToEdge)) -}
ee570fa924388ca31c96c6c29cc069b7
  newTexture3 ::
    (Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Repetition,
     Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Clamping)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (x :: (Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Repetition,
                          Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Clamping))
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 letrec {
                   go4 :: [Graphics.Rendering.OpenGL.GL.CoordTrans.TextureCoordName]
                          -> GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                     {- Arity: 2, Strictness: <S,1*U><S,U> -}
                   = \ (ds :: [Graphics.Rendering.OpenGL.GL.CoordTrans.TextureCoordName])
                       (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     case ds of wild {
                       [] -> (# eta1, GHC.Tuple.() #)
                       : y ys
                       -> case Graphics.Rendering.OpenGL.GL.Texturing.Parameters.$wtextureWrapMode
                                 @ Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.TextureTarget2D
                                 Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.$fParameterizedTextureTargetTextureTarget2D
                                 Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.Texture2D
                                 y of ww { (#,#) ww1 ww2 ->
                          case (ww2 x) `cast` (GHC.Types.N:IO[0] <()>_R)
                                 eta1 of ds1 { (#,#) ipv ipv1 ->
                          go4 ys ipv } } }
                 } in
                 go4 Graphics.UIKit.newTexture_eta eta) -}
e9f4fecadc87d275e09bd7177d345cbd
  newTexture4 ::
    [Graphics.Rendering.OpenGL.GL.CoordTrans.TextureCoordName]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Rendering.OpenGL.GL.CoordTrans.TextureCoordName
                   Graphics.Rendering.OpenGL.GL.CoordTrans.T
                   (GHC.Types.[]
                      @ Graphics.Rendering.OpenGL.GL.CoordTrans.TextureCoordName)) -}
2ee92d49532b776151e854508aa29353
  newTexture5 :: GHC.Types.IO ()
  {- Unfolding: (case Graphics.Rendering.OpenGL.GL.Texturing.Parameters.$wtextureFilter
                        @ Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.TextureTarget2D
                        Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.$fParameterizedTextureTargetTextureTarget2D
                        Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.Texture2D of ww { (#,#) ww1 ww2 ->
                 ww2 Graphics.UIKit.newTexture6 }) -}
1b8da388941a6f3c1693e4556ee452ce
  newTexture6 ::
    ((Graphics.Rendering.OpenGL.GL.Texturing.Filter.TextureFilter,
      GHC.Base.Maybe
        Graphics.Rendering.OpenGL.GL.Texturing.Filter.TextureFilter),
     Graphics.Rendering.OpenGL.GL.Texturing.Filter.TextureFilter)
  {- HasNoCafRefs,
     Unfolding: ((Graphics.UIKit.newTexture7,
                  Graphics.Rendering.OpenGL.GL.Texturing.Filter.Linear')) -}
3b8b340023ddf2b47a62325cd3e04f31
  newTexture7 ::
    (Graphics.Rendering.OpenGL.GL.Texturing.Filter.TextureFilter,
     GHC.Base.Maybe
       Graphics.Rendering.OpenGL.GL.Texturing.Filter.TextureFilter)
  {- HasNoCafRefs,
     Unfolding: ((Graphics.Rendering.OpenGL.GL.Texturing.Filter.Linear',
                  GHC.Base.Nothing
                    @ Graphics.Rendering.OpenGL.GL.Texturing.Filter.TextureFilter)) -}
cd30b19a77524beb0e15a29d0affb983
  newTexture_eta ::
    [Graphics.Rendering.OpenGL.GL.CoordTrans.TextureCoordName]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Rendering.OpenGL.GL.CoordTrans.TextureCoordName
                   Graphics.Rendering.OpenGL.GL.CoordTrans.S
                   Graphics.UIKit.newTexture4) -}
5a16a175b58e991ee1cc3ae5a2aad2ff
  onevent ::
    Graphics.UIKit.SystemEvent
    -> Graphics.UIKit.Input -> Graphics.UIKit.Input
  {- Arity: 2,
     Strictness: <S,1*U><S,1*U(U(U(U),U(U)),U,U,U(U,U),U,U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Graphics.UIKit.SystemEvent)
                   (w1 :: Graphics.UIKit.Input) ->
                 case w1 of ww { Graphics.UIKit.Input ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w of wild {
                   DEFAULT -> Graphics.UIKit.Input ww1 ww2 ww3 ww4 ww5 ww6
                   Graphics.UIKit.MouseMotion pos
                   -> Graphics.UIKit.Input
                        ww1
                        ww2
                        ww3
                        (case ww4 of wild1 { Graphics.UIKit.Mouse ds ds1 ->
                         Graphics.UIKit.Mouse pos ds1 })
                        ww5
                        ww6
                   Graphics.UIKit.MouseDown b
                   -> Graphics.UIKit.Input
                        ww1
                        ww2
                        ww3
                        (case ww4 of wild1 { Graphics.UIKit.Mouse ds ds1 ->
                         Graphics.UIKit.Mouse ds (Graphics.UIKit.$sinsert_$sgo5 b ds1) })
                        ww5
                        ww6
                   Graphics.UIKit.MouseUp b
                   -> Graphics.UIKit.Input
                        ww1
                        ww2
                        ww3
                        (case ww4 of wild1 { Graphics.UIKit.Mouse ds ds1 ->
                         Graphics.UIKit.Mouse ds (Graphics.UIKit.$sdelete_$sgo5 b ds1) })
                        ww5
                        ww6
                   Graphics.UIKit.MouseScroll δ
                   -> Graphics.UIKit.Input
                        (case ww1 of ww7 { Linear.V2.V2 ww8 ww9 ->
                         case δ of ww10 { Linear.V2.V2 ww11 ww12 ->
                         case ww8 of wild1 { GHC.Types.D# x ->
                         case ww11 of wild2 { GHC.Types.D# y ->
                         case ww9 of wild3 { GHC.Types.D# x1 ->
                         case ww12 of wild4 { GHC.Types.D# y1 ->
                         Linear.V2.V2
                           @ GHC.Types.Double
                           (GHC.Types.D# (GHC.Prim.+## x y))
                           (GHC.Types.D# (GHC.Prim.+## x1 y1)) } } } } } })
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6
                   Graphics.UIKit.KeyDown k
                   -> Graphics.UIKit.Input
                        ww1
                        ww2
                        ww3
                        ww4
                        (Graphics.UIKit.$sinsert_$sgo1 k ww5)
                        ww6
                   Graphics.UIKit.KeyUp k
                   -> Graphics.UIKit.Input
                        ww1
                        ww2
                        ww3
                        ww4
                        (Graphics.UIKit.$sdelete_$sgo1 k ww5)
                        ww6 } }) -}
9d13ab0eeacc3efcab3667c7ef0844ba
  pass :: GHC.Base.Applicative f => f ()
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LC(S)LLL),1*U(A,1*C1(U),A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ (f :: * -> *) ($dApplicative :: GHC.Base.Applicative f) ->
                 GHC.Base.pure @ f $dApplicative @ () GHC.Tuple.()) -}
44f90765a04a7fae6938abdc08f31f86
  processMessages ::
    Graphics.UIKit.MessageChannel
    -> (app -> Graphics.UIKit.SystemEvent -> GHC.Types.IO app)
    -> app
    -> GHC.Types.IO app
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(SL),U(U,A)><L,C(C1(C1(U(U,U))))><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.processMessages1
                  `cast`
                (forall (app :: <*>_N).
                 <Graphics.UIKit.MessageChannel>_R
                 ->_R <app -> Graphics.UIKit.SystemEvent -> GHC.Types.IO app>_R
                 ->_R <app>_R
                 ->_R Sym (GHC.Types.N:IO[0] <app>_R)) -}
ab3ed471830f9dd6b7a170571f2c950d
  processMessages1 ::
    Graphics.UIKit.MessageChannel
    -> (app -> Graphics.UIKit.SystemEvent -> GHC.Types.IO app)
    -> app
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, app #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(SL),U(U,A)><L,C(C1(C1(U(U,U))))><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ app
                   (w :: Graphics.UIKit.MessageChannel)
                   (w1 :: app -> Graphics.UIKit.SystemEvent -> GHC.Types.IO app)
                   (w2 :: app)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Control.Concurrent.STM.TChan.TChan ww1 ww2 ->
                 Graphics.UIKit.$wprocessMessages @ app ww1 ww2 w1 w2 w3 }) -}
bcc56cbb480a254e32a4ebb8152c5175
  queuedMessages ::
    Graphics.UIKit.MessageChannel
    -> GHC.Types.IO [Graphics.UIKit.SystemEvent]
  {- Arity: 2, HasNoCafRefs, Strictness: <S(SL),U(U,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.queuedMessages1
                  `cast`
                (<Graphics.UIKit.MessageChannel>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Graphics.UIKit.SystemEvent]>_R)) -}
3a8f4b83f0025de26589d53a1d65dce7
  queuedMessages1 ::
    Graphics.UIKit.MessageChannel
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Graphics.UIKit.SystemEvent] #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(SL),U(U,A)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Graphics.UIKit.MessageChannel)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Control.Concurrent.STM.TChan.TChan ww1 ww2 ->
                 Graphics.UIKit.$wqueuedMessages ww1 ww2 w1 }) -}
ef34cf2e0d554157c41cf6128308dbf1
  render ::
    (Graphics.UI.GLFW.Types.Window, Linear.V2.V2 GHC.Types.Int,
     Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject,
     Graphics.UIKit.Descriptor)
    -> GHC.Types.IO ()
  {- Arity: 2,
     Strictness: <S(LS(SS)LS),1*U(1*U(U),1*U(U(U),U(U)),U,1*U(1*U(U),1*U(U),1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.render1
                  `cast`
                (<(Graphics.UI.GLFW.Types.Window, Linear.V2.V2 GHC.Types.Int,
                   Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject,
                   Graphics.UIKit.Descriptor)>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
3790c04eba67b54173b902f429d650b0
  render1 ::
    (Graphics.UI.GLFW.Types.Window, Linear.V2.V2 GHC.Types.Int,
     Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject,
     Graphics.UIKit.Descriptor)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2,
     Strictness: <S(LS(SS)LS),1*U(1*U(U),1*U(U(U),U(U)),U,1*U(1*U(U),1*U(U),1*U(U)))><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (Graphics.UI.GLFW.Types.Window,
                          Linear.V2.V2 GHC.Types.Int,
                          Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject,
                          Graphics.UIKit.Descriptor))
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { (,,,) ww1 ww2 ww3 ww4 ->
                 case ww2 of ww5 { Linear.V2.V2 ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 case ww7 of ww10 { GHC.Types.I# ww11 ->
                 case ww4 of ww12 { Graphics.UIKit.Descriptor ww13 ww14 ww15 ->
                 Graphics.UIKit.$wrender
                   ww1
                   ww9
                   ww11
                   ww3
                   ww13
                   ww14
                   ww15
                   w1 } } } } }) -}
83e7cb8b9a4ecad5aa7bf42a58aa8217
  run :: GHC.Types.IO (Data.Either.Either GHC.Base.String ())
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.run1
                  `cast`
                (Sym (GHC.Types.N:IO[0]
                          <Data.Either.Either [GHC.Types.Char] ()>_R)) -}
a846751bc04e10f8ad970d4c7d6a7cce
  run1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either [GHC.Types.Char] () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Graphics.UIKit.$wsetup
                        Graphics.UIKit.run2
                        600#
                        400#
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   Data.Either.Left l
                   -> (# ipv, Data.Either.Left @ [GHC.Types.Char] @ () l #)
                   Data.Either.Right r
                   -> case r of wild1 { (,) win channel ->
                      case (Graphics.Rendering.OpenGL.GL.VertexArrayObjects.$fGeneratableObjectNameVertexArrayObject_$cgenObjectNames
                              @ GHC.Types.IO
                              Control.Monad.IO.Class.$fMonadIOIO
                              Graphics.Rendering.OpenGL.GL.VertexArrayObjects.$fGeneratableObjectNameVertexArrayObject2)
                             `cast`
                           (GHC.Types.N:IO[0]
                                <[Graphics.Rendering.OpenGL.GL.VertexArrayObjects.VertexArrayObject]>_R)
                             ipv of ds { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild2 {
                        []
                        -> case GHC.List.badHead
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     Data.Either.Either [GHC.Types.Char] () #)
                           of {}
                        : x ds2
                        -> case x `cast`
                                (Graphics.Rendering.OpenGL.GL.VertexArrayObjects.N:VertexArrayObject[0]) of ww { GHC.Word.W32# ww1 ->
                           case Graphics.UIKit.$wnewQuad ww1 ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                           case ipv5 of wild3 { (,) quad tex ->
                           case channel of ww2 { Control.Concurrent.STM.TChan.TChan ww3 ww4 ->
                           case Graphics.UIKit.$wloop
                                  win
                                  quad
                                  tex
                                  ww3
                                  ww4
                                  ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                           (# ipv6,
                              Data.Either.Right
                                @ [GHC.Types.Char]
                                @ ()
                                ipv7 #) } } } } } } } } } }) -}
8963d133df0049574622b551ba9c33d8
  run2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UIKit"#) -}
3b3cdf1e2fef4dfc2ebc33834d46b883
  run3 ::
    Data.Either.Either
      [GHC.Types.Char]
      (Graphics.UI.GLFW.Types.Window, Graphics.UIKit.MessageChannel)
  {- Unfolding: (Data.Either.Left
                   @ [GHC.Types.Char]
                   @ (Graphics.UI.GLFW.Types.Window, Graphics.UIKit.MessageChannel)
                   Graphics.UIKit.run4) -}
a9f6e9387910e89579766dd3e29b2cf0
  run4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Failed to create window"#) -}
a5902c9544dc753a396bb26ab3ac3f71
  run5 ::
    Data.Either.Either
      [GHC.Types.Char]
      (Graphics.UI.GLFW.Types.Window, Graphics.UIKit.MessageChannel)
  {- Unfolding: (Data.Either.Left
                   @ [GHC.Types.Char]
                   @ (Graphics.UI.GLFW.Types.Window, Graphics.UIKit.MessageChannel)
                   Graphics.UIKit.run_e) -}
e6cc4dcbb723780bf0f7201d05f1d530
  run_e :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Failed to initialise GLFW"#) -}
74b43c1eb78795924eb1d26d8d87c745
  scroll ::
    Lens.Micro.Type.Lens'
      Graphics.UIKit.Input (Linear.V2.V2 GHC.Types.Double)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(1*U,U,U,U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Linear.V2.V2 GHC.Types.Double
                          -> f (Linear.V2.V2 GHC.Types.Double))
                   (s :: Graphics.UIKit.Input) ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (Linear.V2.V2 GHC.Types.Double)
                   @ Graphics.UIKit.Input
                   (\ (new :: Linear.V2.V2 GHC.Types.Double) ->
                    case s of wild { Graphics.UIKit.Input ds ds1 ds2 ds3 ds4 ds5 ->
                    Graphics.UIKit.Input new ds1 ds2 ds3 ds4 ds5 })
                   (f1
                      (case s of wild { Graphics.UIKit.Input ds ds1 ds2 ds3 ds4 ds5 ->
                       ds }))) -}
ba69180bdf223db53d4e46439faff2a9
  setTexture ::
    Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject
    -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.setTexture1
                  `cast`
                (<Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
5cf5c40d94e7d3ee786a2ccd4ef10e51
  setTexture1 ::
    Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (tex :: Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Graphics.UIKit.setTexture3 `cast` (GHC.Types.N:IO[0] <()>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Graphics.GL.Functions.F01.ptr_glActiveTexture of ds2 { GHC.Ptr.FunPtr ds3 ->
                 case {__dyn_ccall_GC "" GHC.Prim.Addr#
                                         -> GHC.Prim.Word#
                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        ds3
                        33984##
                        ipv of wild { Unit# ds6 ->
                 case Graphics.UIKit.setTexture2 of wild1 { Data.StateVar.StateVar ds4 s1 ->
                 (s1
                    (GHC.Base.Just
                       @ Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject
                       tex))
                   `cast`
                 (GHC.Types.N:IO[0] <()>_R)
                   ds6 } } } }) -}
19a5144187dd27185074a55ed46345a8
  setTexture2 ::
    Data.StateVar.StateVar
      (GHC.Base.Maybe
         Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject)
  {- Unfolding: (case Graphics.Rendering.OpenGL.GL.Texturing.Objects.$wtextureBinding
                        @ Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.TextureTarget2D
                        Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.$fBindableTextureTargetTextureTarget2D
                        Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.Texture2D of ww { (#,#) ww1 ww2 ->
                 Data.StateVar.StateVar
                   @ (GHC.Base.Maybe
                        Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject)
                   ww1
                   ww2 }) -}
187d1e54ac18244aed4752458ae9f638
  setTexture3 :: GHC.Types.IO ()
  {- Unfolding: (case Graphics.Rendering.OpenGL.GL.Capability.$wmakeCapability
                        Graphics.Rendering.OpenGL.GL.Capability.CapTexture2D of ww { (#,#) ww1 ww2 ->
                 ww2 Graphics.Rendering.OpenGL.GL.Capability.Enabled }) -}
05cc027d292774787d4391e462306e70
  setup ::
    GHC.Base.String
    -> Linear.V2.V2 GHC.Types.Int
    -> Control.Monad.Trans.Either.EitherT
         GHC.Base.String
         GHC.Types.IO
         (Graphics.UI.GLFW.Types.Window, Graphics.UIKit.MessageChannel)
  {- Arity: 3, Strictness: <L,U><S(SS),1*U(U(U),U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.setup1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <Linear.V2.V2 GHC.Types.Int>_R
                 ->_R Trans
                          (Sym (GHC.Types.N:IO[0]
                                    <Data.Either.Either
                                       GHC.Base.String
                                       (Graphics.UI.GLFW.Types.Window,
                                        Graphics.UIKit.MessageChannel)>_R))
                          (Sym (Control.Monad.Trans.Either.N:EitherT[0]
                                    <GHC.Base.String>_N
                                    <GHC.Types.IO>_R
                                    <(Graphics.UI.GLFW.Types.Window,
                                      Graphics.UIKit.MessageChannel)>_N))) -}
e9dc4e1c28c78c5eaf0974c43eb1cb59
  setup1 ::
    GHC.Base.String
    -> Linear.V2.V2 GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Base.String
            (Graphics.UI.GLFW.Types.Window, Graphics.UIKit.MessageChannel) #)
  {- Arity: 3, Strictness: <L,U><S(SS),1*U(U(U),U(U))><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Base.String)
                   (w1 :: Linear.V2.V2 GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Linear.V2.V2 ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case ww2 of ww5 { GHC.Types.I# ww6 ->
                 Graphics.UIKit.$wsetup w ww4 ww6 w2 } } }) -}
1177038515c4b836f956327da85b62d9
  setupEvents ::
    Graphics.UI.GLFW.Types.Window
    -> GHC.Types.IO Graphics.UIKit.MessageChannel
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.setupEvents1
                  `cast`
                (<Graphics.UI.GLFW.Types.Window>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Graphics.UIKit.MessageChannel>_R)) -}
c081449675076e9eaddf54cb95d4f89e
  setupEvents1 ::
    Graphics.UI.GLFW.Types.Window
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UIKit.MessageChannel #)
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Graphics.UI.GLFW.Types.Window)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Graphics.UI.GLFW.Types.N:Window[0]) of ww { GHC.Ptr.Ptr ww1 ->
                 Graphics.UIKit.$wsetupEvents ww1 w1 }) -}
8e4b8ece3efe63edfe87173cd6c6bce6
  texture2DWrap ::
    Data.StateVar.StateVar
      (Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Repetition,
       Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Clamping)
  {- Strictness: m,
     Unfolding: (Data.StateVar.StateVar
                   @ (Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Repetition,
                      Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Clamping)
                   Graphics.UIKit.texture2DWrap1
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <(Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Repetition,
                               Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Clamping)>_R))
                   Graphics.UIKit.newTexture3
                     `cast`
                   (<(Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Repetition,
                      Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Clamping)>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))) -}
611641a024dda7fdfa3b8fcdf188e66b
  texture2DWrap1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Repetition,
           Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Clamping) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newAlignedPinnedByteArray#
                        @ GHC.Prim.RealWorld
                        4#
                        4#
                        eta of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Prim.unsafeFreezeByteArray#
                        @ GHC.Prim.RealWorld
                        ipv1
                        ipv of ds3 { (#,#) ipv2 ipv3 ->
                 case Graphics.GL.Functions.F12.ptr_glGetTexParameteriv of ds4 { GHC.Ptr.FunPtr ds5 ->
                 let {
                   buf :: GHC.Prim.Addr# = GHC.Prim.byteArrayContents# ipv3
                 } in
                 case {__dyn_ccall_GC "" GHC.Prim.Addr#
                                         -> GHC.Prim.Word#
                                         -> GHC.Prim.Word#
                                         -> GHC.Prim.Addr#
                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        ds5
                        3553##
                        10242##
                        buf
                        ipv2 of wild { Unit# ds12 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        buf
                        0#
                        ds12 of ds1 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.touch#
                        @ 'GHC.Types.PtrRepUnlifted
                        @ GHC.Prim.ByteArray#
                        ipv3
                        ipv4 of s4 { DEFAULT ->
                 (# s4,
                    case GHC.Prim.narrow32Word# (GHC.Prim.int2Word# ipv5) of wild1 {
                      DEFAULT
                      -> Graphics.Rendering.OpenGL.GL.Texturing.Parameters.textureWrapMode3
                           ipv5
                      10496##
                      -> (Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Repeated,
                          Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Clamp)
                      10497##
                      -> (Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Repeated,
                          Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Repeat)
                      33069##
                      -> (Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Repeated,
                          Graphics.Rendering.OpenGL.GL.Texturing.Parameters.ClampToBorder)
                      33071## -> Graphics.UIKit.newTexture2
                      33648##
                      -> (Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Mirrored,
                          Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Repeat)
                      34626##
                      -> (Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Mirrored,
                          Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Clamp)
                      34627##
                      -> (Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Mirrored,
                          Graphics.Rendering.OpenGL.GL.Texturing.Parameters.ClampToEdge)
                      35090##
                      -> (Graphics.Rendering.OpenGL.GL.Texturing.Parameters.Mirrored,
                          Graphics.Rendering.OpenGL.GL.Texturing.Parameters.ClampToBorder) } #) } } } } } }) -}
7dfc8f2068a43f73fa04a2992fae1d88
  time :: Lens.Micro.Type.Lens' Graphics.UIKit.Input GHC.Types.Double
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,U,U,U,U,1*U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Types.Double -> f GHC.Types.Double)
                   (s :: Graphics.UIKit.Input) ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ GHC.Types.Double
                   @ Graphics.UIKit.Input
                   (\ (new :: GHC.Types.Double) ->
                    case s of wild { Graphics.UIKit.Input ds ds1 ds2 ds3 ds4 ds5 ->
                    Graphics.UIKit.Input ds ds1 ds2 ds3 ds4 new })
                   (f1
                      (case s of wild { Graphics.UIKit.Input ds ds1 ds2 ds3 ds4 ds5 ->
                       ds5 }))) -}
715d78f67bd8b379808c103886849f79
  untilM :: GHC.Base.Monad m => m GHC.Types.Bool -> m a -> m ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLL),U(U(1*U(1*C1(C1(U)),A),C(U),A,A,A),C(C1(U)),C(C1(U)),A,A)><L,U><L,U>,
     Unfolding: (\ @ (m :: * -> *)
                   @ a
                   ($dMonad :: GHC.Base.Monad m)
                   (eta :: m GHC.Types.Bool)
                   (eta1 :: m a) ->
                 Graphics.UIKit.whileM
                   @ m
                   @ a
                   $dMonad
                   (GHC.Base.fmap
                      @ m
                      (GHC.Base.$p1Applicative @ m (GHC.Base.$p1Monad @ m $dMonad))
                      @ GHC.Types.Bool
                      @ GHC.Types.Bool
                      GHC.Classes.not
                      eta)
                   eta1) -}
10b4eca5651ff54191a782a010f8a5c0
  uploadTexture ::
    Codec.Picture.Types.Image Codec.Picture.Types.PixelRGBA8
    -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,1*U(U,U,1*U(A,U,U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.uploadTexture1
                  `cast`
                (<Codec.Picture.Types.Image Codec.Picture.Types.PixelRGBA8>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
4da5e05c745fbaf36592d67c495336fa
  uploadTexture1 ::
    Codec.Picture.Types.Image Codec.Picture.Types.PixelRGBA8
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U(U,U,1*U(A,U,U))><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Codec.Picture.Types.Image Codec.Picture.Types.PixelRGBA8)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Codec.Picture.Types.Image ww1 ww2 ww3 ->
                 Graphics.UIKit.$wuploadTexture ww1 ww2 ww3 w1 }) -}
5540a56998fbbc570bb0e5cfacb60e86
  vectorise :: GHC.Base.Functor f => f (a, a) -> f (Linear.V2.V2 a)
  {- Arity: 1, HasNoCafRefs, Strictness: <S(C(S)L),1*U(1*C1(U),A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ (f :: * -> *) @ a ($dFunctor :: GHC.Base.Functor f) ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (a, a)
                   @ (Linear.V2.V2 a)
                   (Graphics.UIKit.vectorise2 @ a)) -}
66ff6448f4b1cfd625a6fa3292085ea6
  vectorise2 :: (a, a) -> Linear.V2.V2 a
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(1*U,1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (p :: (a, a)) ->
                 case p of wild { (,) x ds ->
                 case x of dt1 { DEFAULT ->
                 case ds of dt2 { DEFAULT -> Linear.V2.V2 @ a dt1 dt2 } } }) -}
0c9755a408947d4f8e3a8a5fef6c1e3d
  whileM :: GHC.Base.Monad m => m GHC.Types.Bool -> m a -> m ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLL),U(U(A,C(U),A,A,A),C(C1(U)),C(C1(U)),A,A)><L,U><L,U> -}
a32ce248f87be09b2af7868cbfd1b561
  windowBounds ::
    Graphics.UI.GLFW.Types.Window
    -> GHC.Types.IO (Data.AABB.AABB Linear.V2.V2 GHC.Types.Int)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UIKit.windowBounds1
                  `cast`
                (<Graphics.UI.GLFW.Types.Window>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Data.AABB.AABB Linear.V2.V2 GHC.Types.Int>_R)) -}
25ce005c5671cfb57304c021175a49cc
  windowBounds1 ::
    Graphics.UI.GLFW.Types.Window
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.AABB.AABB Linear.V2.V2 GHC.Types.Int #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Graphics.UI.GLFW.Types.Window)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Graphics.UI.GLFW.Types.N:Window[0]) of ww { GHC.Ptr.Ptr ww1 ->
                 Graphics.UIKit.$wwindowBounds ww1 w1 }) -}
7f78849f8274bf19d5720b3c4bda14e6
  windowRect ::
    Lens.Micro.Type.Lens'
      Graphics.UIKit.Input (Data.AABB.AABB Linear.V2.V2 GHC.Types.Int)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,1*U,U,U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: Data.AABB.AABB Linear.V2.V2 GHC.Types.Int
                          -> f (Data.AABB.AABB Linear.V2.V2 GHC.Types.Int))
                   (s :: Graphics.UIKit.Input) ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (Data.AABB.AABB Linear.V2.V2 GHC.Types.Int)
                   @ Graphics.UIKit.Input
                   (\ (new :: Data.AABB.AABB Linear.V2.V2 GHC.Types.Int) ->
                    case s of wild { Graphics.UIKit.Input ds ds1 ds2 ds3 ds4 ds5 ->
                    Graphics.UIKit.Input ds new ds2 ds3 ds4 ds5 })
                   (f1
                      (case s of wild { Graphics.UIKit.Input ds ds1 ds2 ds3 ds4 ds5 ->
                       ds1 }))) -}
23077ecda291b07100361f972cf4a399
  (~>) :: s -> Lens.Micro.Type.SimpleGetter s a -> a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><C(C(S)),1*C1(C1(U))>,
     Unfolding: InlineRule (2, True, True)
                (\ @ s @ a (ds :: s) (ds1 :: Lens.Micro.Type.SimpleGetter s a) ->
                 Lens.Micro.^. @ s @ a ds (ds1 @ a)) -}
instance GHC.Classes.Eq [Graphics.UIKit.Descriptor]
  = Graphics.UIKit.$fEqDescriptor
instance GHC.Classes.Eq [Graphics.UIKit.ShaderInfo]
  = Graphics.UIKit.$fEqShaderInfo
instance GHC.Classes.Eq [Graphics.UIKit.ShaderSource]
  = Graphics.UIKit.$fEqShaderSource
instance GHC.Classes.Eq [Graphics.UIKit.SystemEvent]
  = Graphics.UIKit.$fEqSystemEvent
instance GHC.Classes.Ord [Graphics.UIKit.ShaderInfo]
  = Graphics.UIKit.$fOrdShaderInfo
instance GHC.Classes.Ord [Graphics.UIKit.ShaderSource]
  = Graphics.UIKit.$fOrdShaderSource
instance GHC.Show.Show [Graphics.UIKit.Descriptor]
  = Graphics.UIKit.$fShowDescriptor
instance GHC.Show.Show [Graphics.UIKit.Mouse]
  = Graphics.UIKit.$fShowMouse
instance GHC.Show.Show [Graphics.UIKit.ShaderInfo]
  = Graphics.UIKit.$fShowShaderInfo
instance GHC.Show.Show [Graphics.UIKit.ShaderSource]
  = Graphics.UIKit.$fShowShaderSource
instance GHC.Show.Show [Graphics.UIKit.SystemEvent]
  = Graphics.UIKit.$fShowSystemEvent
"SPEC/Graphics.UIKit $fNumV1 @ Float" [ALWAYS] forall ($dNum :: GHC.Num.Num
                                                                  GHC.Types.Float)
  Linear.V1.$fNumV1 @ GHC.Types.Float $dNum
  = Graphics.UIKit.$s$fNumV1
"SPEC/Graphics.UIKit $fNumV4 @ Float" [ALWAYS] forall ($dNum :: GHC.Num.Num
                                                                  GHC.Types.Float)
  Linear.V4.$fNumV4 @ GHC.Types.Float $dNum
  = Graphics.UIKit.$s$fNumV4
"SPEC/Graphics.UIKit $fNumV4_$c* @ Float" [ALWAYS] forall ($dNum :: GHC.Num.Num
                                                                      GHC.Types.Float)
  Linear.V4.$fNumV4_$c* @ GHC.Types.Float $dNum
  = Graphics.UIKit.$s$fNumV4_$c*
"SPEC/Graphics.UIKit $fNumV4_$c+ @ Float" [ALWAYS] forall ($dNum :: GHC.Num.Num
                                                                      GHC.Types.Float)
  Linear.V4.$fNumV4_$c+ @ GHC.Types.Float $dNum
  = Graphics.UIKit.$s$fNumV4_$c+
"SPEC/Graphics.UIKit $fNumV4_$c- @ Float" [ALWAYS] forall ($dNum :: GHC.Num.Num
                                                                      GHC.Types.Float)
  Linear.V4.$fNumV4_$c- @ GHC.Types.Float $dNum
  = Graphics.UIKit.$s$fNumV4_$c-
"SPEC/Graphics.UIKit $fNumV4_$cfromInteger @ Float" [ALWAYS] forall ($dNum :: GHC.Num.Num
                                                                                GHC.Types.Float)
  Linear.V4.$fNumV4_$cfromInteger @ GHC.Types.Float $dNum
  = Graphics.UIKit.$s$fNumV4_$cfromInteger
"SPEC/Graphics.UIKit $fNumV4_$cnegate @ Float" [ALWAYS] forall ($dNum :: GHC.Num.Num
                                                                           GHC.Types.Float)
  Linear.V4.$fNumV4_$cnegate @ GHC.Types.Float $dNum
  = Graphics.UIKit.$s$fNumV4_$cnegate
"SPEC/Graphics.UIKit $fStorableV2 @ Float" [ALWAYS] forall ($dStorable :: Foreign.Storable.Storable
                                                                            GHC.Types.Float)
  Linear.V2.$fStorableV2 @ GHC.Types.Float $dStorable
  = Graphics.UIKit.$s$fStorableV2
"SPEC/Graphics.UIKit $fStorableV2_$calignment @ Float" [ALWAYS] forall ($dStorable :: Foreign.Storable.Storable
                                                                                        GHC.Types.Float)
  Linear.V2.$fStorableV2_$calignment @ GHC.Types.Float $dStorable
  = Graphics.UIKit.$s$fStorableV2_$s$fStorableV2_$calignment
"SPEC/Graphics.UIKit $fStorableV2_$cpeek @ Float" [ALWAYS] forall ($dStorable :: Foreign.Storable.Storable
                                                                                   GHC.Types.Float)
  Linear.V2.$fStorableV2_$cpeek @ GHC.Types.Float $dStorable
  = Graphics.UIKit.$s$fStorableV2_$s$fStorableV2_$cpeek
"SPEC/Graphics.UIKit $fStorableV2_$cpoke @ Float" [ALWAYS] forall ($dStorable :: Foreign.Storable.Storable
                                                                                   GHC.Types.Float)
  Linear.V2.$fStorableV2_$cpoke @ GHC.Types.Float $dStorable
  = Graphics.UIKit.$s$fStorableV2_$s$fStorableV2_$cpoke
"SPEC/Graphics.UIKit $fStorableV2_$csizeOf @ Float" [ALWAYS] forall ($dStorable :: Foreign.Storable.Storable
                                                                                     GHC.Types.Float)
  Linear.V2.$fStorableV2_$csizeOf @ GHC.Types.Float $dStorable
  = Graphics.UIKit.$s$fStorableV2_$s$fStorableV2_$csizeOf
"SPEC/Graphics.UIKit $fStorableV4 @ Float" [ALWAYS] forall ($dStorable :: Foreign.Storable.Storable
                                                                            GHC.Types.Float)
  Linear.V4.$fStorableV4 @ GHC.Types.Float $dStorable
  = Graphics.UIKit.$s$fStorableV4
"SPEC/Graphics.UIKit $fStorableV4_$calignment @ Float" [ALWAYS] forall ($dStorable :: Foreign.Storable.Storable
                                                                                        GHC.Types.Float)
  Linear.V4.$fStorableV4_$calignment @ GHC.Types.Float $dStorable
  = Graphics.UIKit.$s$fStorableV4_$s$fStorableV4_$calignment
"SPEC/Graphics.UIKit $fStorableV4_$cpeek @ Float" [ALWAYS] forall ($dStorable :: Foreign.Storable.Storable
                                                                                   GHC.Types.Float)
  Linear.V4.$fStorableV4_$cpeek @ GHC.Types.Float $dStorable
  = Graphics.UIKit.$s$fStorableV4_$s$fStorableV4_$cpeek
"SPEC/Graphics.UIKit $fStorableV4_$cpoke @ Float" [ALWAYS] forall ($dStorable :: Foreign.Storable.Storable
                                                                                   GHC.Types.Float)
  Linear.V4.$fStorableV4_$cpoke @ GHC.Types.Float $dStorable
  = Graphics.UIKit.$s$fStorableV4_$s$fStorableV4_$cpoke
"SPEC/Graphics.UIKit $fStorableV4_$csizeOf @ Float" [ALWAYS] forall ($dStorable :: Foreign.Storable.Storable
                                                                                     GHC.Types.Float)
  Linear.V4.$fStorableV4_$csizeOf @ GHC.Types.Float $dStorable
  = Graphics.UIKit.$s$fStorableV4_$s$fStorableV4_$csizeOf
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

